/* ========================================================================
 * Copyright (c) 2005-2009 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 * ======================================================================*/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;

namespace Opc.Ua
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the BaseDataType DataType.
        /// </summary>
        public const uint BaseDataType = 24;

        /// <summary>
        /// The identifier for the Number DataType.
        /// </summary>
        public const uint Number = 26;

        /// <summary>
        /// The identifier for the Integer DataType.
        /// </summary>
        public const uint Integer = 27;

        /// <summary>
        /// The identifier for the UInteger DataType.
        /// </summary>
        public const uint UInteger = 28;

        /// <summary>
        /// The identifier for the Enumeration DataType.
        /// </summary>
        public const uint Enumeration = 29;

        /// <summary>
        /// The identifier for the Boolean DataType.
        /// </summary>
        public const uint Boolean = 1;

        /// <summary>
        /// The identifier for the SByte DataType.
        /// </summary>
        public const uint SByte = 2;

        /// <summary>
        /// The identifier for the Byte DataType.
        /// </summary>
        public const uint Byte = 3;

        /// <summary>
        /// The identifier for the Int16 DataType.
        /// </summary>
        public const uint Int16 = 4;

        /// <summary>
        /// The identifier for the UInt16 DataType.
        /// </summary>
        public const uint UInt16 = 5;

        /// <summary>
        /// The identifier for the Int32 DataType.
        /// </summary>
        public const uint Int32 = 6;

        /// <summary>
        /// The identifier for the UInt32 DataType.
        /// </summary>
        public const uint UInt32 = 7;

        /// <summary>
        /// The identifier for the Int64 DataType.
        /// </summary>
        public const uint Int64 = 8;

        /// <summary>
        /// The identifier for the UInt64 DataType.
        /// </summary>
        public const uint UInt64 = 9;

        /// <summary>
        /// The identifier for the Float DataType.
        /// </summary>
        public const uint Float = 10;

        /// <summary>
        /// The identifier for the Double DataType.
        /// </summary>
        public const uint Double = 11;

        /// <summary>
        /// The identifier for the String DataType.
        /// </summary>
        public const uint String = 12;

        /// <summary>
        /// The identifier for the DateTime DataType.
        /// </summary>
        public const uint DateTime = 13;

        /// <summary>
        /// The identifier for the Guid DataType.
        /// </summary>
        public const uint Guid = 14;

        /// <summary>
        /// The identifier for the ByteString DataType.
        /// </summary>
        public const uint ByteString = 15;

        /// <summary>
        /// The identifier for the XmlElement DataType.
        /// </summary>
        public const uint XmlElement = 16;

        /// <summary>
        /// The identifier for the NodeId DataType.
        /// </summary>
        public const uint NodeId = 17;

        /// <summary>
        /// The identifier for the ExpandedNodeId DataType.
        /// </summary>
        public const uint ExpandedNodeId = 18;

        /// <summary>
        /// The identifier for the StatusCode DataType.
        /// </summary>
        public const uint StatusCode = 19;

        /// <summary>
        /// The identifier for the QualifiedName DataType.
        /// </summary>
        public const uint QualifiedName = 20;

        /// <summary>
        /// The identifier for the LocalizedText DataType.
        /// </summary>
        public const uint LocalizedText = 21;

        /// <summary>
        /// The identifier for the Structure DataType.
        /// </summary>
        public const uint Structure = 22;

        /// <summary>
        /// The identifier for the DataValue DataType.
        /// </summary>
        public const uint DataValue = 23;

        /// <summary>
        /// The identifier for the DiagnosticInfo DataType.
        /// </summary>
        public const uint DiagnosticInfo = 25;

        /// <summary>
        /// The identifier for the Image DataType.
        /// </summary>
        public const uint Image = 30;

        /// <summary>
        /// The identifier for the NamingRuleType DataType.
        /// </summary>
        public const uint NamingRuleType = 120;

        /// <summary>
        /// The identifier for the ImageBMP DataType.
        /// </summary>
        public const uint ImageBMP = 2000;

        /// <summary>
        /// The identifier for the ImageGIF DataType.
        /// </summary>
        public const uint ImageGIF = 2001;

        /// <summary>
        /// The identifier for the ImageJPG DataType.
        /// </summary>
        public const uint ImageJPG = 2002;

        /// <summary>
        /// The identifier for the ImagePNG DataType.
        /// </summary>
        public const uint ImagePNG = 2003;

        /// <summary>
        /// The identifier for the IdType DataType.
        /// </summary>
        public const uint IdType = 256;

        /// <summary>
        /// The identifier for the NodeClass DataType.
        /// </summary>
        public const uint NodeClass = 257;

        /// <summary>
        /// The identifier for the Node DataType.
        /// </summary>
        public const uint Node = 258;

        /// <summary>
        /// The identifier for the ObjectNode DataType.
        /// </summary>
        public const uint ObjectNode = 261;

        /// <summary>
        /// The identifier for the ObjectTypeNode DataType.
        /// </summary>
        public const uint ObjectTypeNode = 264;

        /// <summary>
        /// The identifier for the VariableNode DataType.
        /// </summary>
        public const uint VariableNode = 267;

        /// <summary>
        /// The identifier for the VariableTypeNode DataType.
        /// </summary>
        public const uint VariableTypeNode = 270;

        /// <summary>
        /// The identifier for the ReferenceTypeNode DataType.
        /// </summary>
        public const uint ReferenceTypeNode = 273;

        /// <summary>
        /// The identifier for the MethodNode DataType.
        /// </summary>
        public const uint MethodNode = 276;

        /// <summary>
        /// The identifier for the ViewNode DataType.
        /// </summary>
        public const uint ViewNode = 279;

        /// <summary>
        /// The identifier for the DataTypeNode DataType.
        /// </summary>
        public const uint DataTypeNode = 282;

        /// <summary>
        /// The identifier for the ReferenceNode DataType.
        /// </summary>
        public const uint ReferenceNode = 285;

        /// <summary>
        /// The identifier for the IntegerId DataType.
        /// </summary>
        public const uint IntegerId = 288;

        /// <summary>
        /// The identifier for the Counter DataType.
        /// </summary>
        public const uint Counter = 289;

        /// <summary>
        /// The identifier for the Duration DataType.
        /// </summary>
        public const uint Duration = 290;

        /// <summary>
        /// The identifier for the NumericRange DataType.
        /// </summary>
        public const uint NumericRange = 291;

        /// <summary>
        /// The identifier for the Time DataType.
        /// </summary>
        public const uint Time = 292;

        /// <summary>
        /// The identifier for the Date DataType.
        /// </summary>
        public const uint Date = 293;

        /// <summary>
        /// The identifier for the UtcTime DataType.
        /// </summary>
        public const uint UtcTime = 294;

        /// <summary>
        /// The identifier for the LocaleId DataType.
        /// </summary>
        public const uint LocaleId = 295;

        /// <summary>
        /// The identifier for the Argument DataType.
        /// </summary>
        public const uint Argument = 296;

        /// <summary>
        /// The identifier for the TimeZoneDataType DataType.
        /// </summary>
        public const uint TimeZoneDataType = 8912;

        /// <summary>
        /// The identifier for the EnumValueInfo DataType.
        /// </summary>
        public const uint EnumValueInfo = 7594;

        /// <summary>
        /// The identifier for the StatusResult DataType.
        /// </summary>
        public const uint StatusResult = 299;

        /// <summary>
        /// The identifier for the MessageSecurityMode DataType.
        /// </summary>
        public const uint MessageSecurityMode = 302;

        /// <summary>
        /// The identifier for the UserTokenType DataType.
        /// </summary>
        public const uint UserTokenType = 303;

        /// <summary>
        /// The identifier for the UserTokenPolicy DataType.
        /// </summary>
        public const uint UserTokenPolicy = 304;

        /// <summary>
        /// The identifier for the ApplicationType DataType.
        /// </summary>
        public const uint ApplicationType = 307;

        /// <summary>
        /// The identifier for the ApplicationDescription DataType.
        /// </summary>
        public const uint ApplicationDescription = 308;

        /// <summary>
        /// The identifier for the ApplicationInstanceCertificate DataType.
        /// </summary>
        public const uint ApplicationInstanceCertificate = 311;

        /// <summary>
        /// The identifier for the EndpointDescription DataType.
        /// </summary>
        public const uint EndpointDescription = 312;

        /// <summary>
        /// The identifier for the SecurityTokenRequestType DataType.
        /// </summary>
        public const uint SecurityTokenRequestType = 315;

        /// <summary>
        /// The identifier for the UserIdentityToken DataType.
        /// </summary>
        public const uint UserIdentityToken = 316;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken DataType.
        /// </summary>
        public const uint AnonymousIdentityToken = 319;

        /// <summary>
        /// The identifier for the UserNameIdentityToken DataType.
        /// </summary>
        public const uint UserNameIdentityToken = 322;

        /// <summary>
        /// The identifier for the X509IdentityToken DataType.
        /// </summary>
        public const uint X509IdentityToken = 325;

        /// <summary>
        /// The identifier for the IssuedIdentityToken DataType.
        /// </summary>
        public const uint IssuedIdentityToken = 938;

        /// <summary>
        /// The identifier for the EndpointConfiguration DataType.
        /// </summary>
        public const uint EndpointConfiguration = 331;

        /// <summary>
        /// The identifier for the ComplianceLevel DataType.
        /// </summary>
        public const uint ComplianceLevel = 334;

        /// <summary>
        /// The identifier for the SupportedProfile DataType.
        /// </summary>
        public const uint SupportedProfile = 335;

        /// <summary>
        /// The identifier for the BuildInfo DataType.
        /// </summary>
        public const uint BuildInfo = 338;

        /// <summary>
        /// The identifier for the SoftwareCertificate DataType.
        /// </summary>
        public const uint SoftwareCertificate = 341;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate DataType.
        /// </summary>
        public const uint SignedSoftwareCertificate = 344;

        /// <summary>
        /// The identifier for the AttributeWriteMask DataType.
        /// </summary>
        public const uint AttributeWriteMask = 347;

        /// <summary>
        /// The identifier for the NodeAttributesMask DataType.
        /// </summary>
        public const uint NodeAttributesMask = 348;

        /// <summary>
        /// The identifier for the NodeAttributes DataType.
        /// </summary>
        public const uint NodeAttributes = 349;

        /// <summary>
        /// The identifier for the ObjectAttributes DataType.
        /// </summary>
        public const uint ObjectAttributes = 352;

        /// <summary>
        /// The identifier for the VariableAttributes DataType.
        /// </summary>
        public const uint VariableAttributes = 355;

        /// <summary>
        /// The identifier for the MethodAttributes DataType.
        /// </summary>
        public const uint MethodAttributes = 358;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes DataType.
        /// </summary>
        public const uint ObjectTypeAttributes = 361;

        /// <summary>
        /// The identifier for the VariableTypeAttributes DataType.
        /// </summary>
        public const uint VariableTypeAttributes = 364;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes DataType.
        /// </summary>
        public const uint ReferenceTypeAttributes = 367;

        /// <summary>
        /// The identifier for the DataTypeAttributes DataType.
        /// </summary>
        public const uint DataTypeAttributes = 370;

        /// <summary>
        /// The identifier for the ViewAttributes DataType.
        /// </summary>
        public const uint ViewAttributes = 373;

        /// <summary>
        /// The identifier for the AddNodesItem DataType.
        /// </summary>
        public const uint AddNodesItem = 376;

        /// <summary>
        /// The identifier for the AddReferencesItem DataType.
        /// </summary>
        public const uint AddReferencesItem = 379;

        /// <summary>
        /// The identifier for the DeleteNodesItem DataType.
        /// </summary>
        public const uint DeleteNodesItem = 382;

        /// <summary>
        /// The identifier for the DeleteReferencesItem DataType.
        /// </summary>
        public const uint DeleteReferencesItem = 385;

        /// <summary>
        /// The identifier for the SessionAuthenticationToken DataType.
        /// </summary>
        public const uint SessionAuthenticationToken = 388;

        /// <summary>
        /// The identifier for the RequestHeader DataType.
        /// </summary>
        public const uint RequestHeader = 389;

        /// <summary>
        /// The identifier for the ResponseHeader DataType.
        /// </summary>
        public const uint ResponseHeader = 392;

        /// <summary>
        /// The identifier for the ServiceFault DataType.
        /// </summary>
        public const uint ServiceFault = 395;

        /// <summary>
        /// The identifier for the EnumeratedTestType DataType.
        /// </summary>
        public const uint EnumeratedTestType = 398;

        /// <summary>
        /// The identifier for the ScalarTestType DataType.
        /// </summary>
        public const uint ScalarTestType = 399;

        /// <summary>
        /// The identifier for the ArrayTestType DataType.
        /// </summary>
        public const uint ArrayTestType = 402;

        /// <summary>
        /// The identifier for the CompositeTestType DataType.
        /// </summary>
        public const uint CompositeTestType = 405;

        /// <summary>
        /// The identifier for the TestStackRequest DataType.
        /// </summary>
        public const uint TestStackRequest = 408;

        /// <summary>
        /// The identifier for the TestStackResponse DataType.
        /// </summary>
        public const uint TestStackResponse = 411;

        /// <summary>
        /// The identifier for the TestStackExRequest DataType.
        /// </summary>
        public const uint TestStackExRequest = 414;

        /// <summary>
        /// The identifier for the TestStackExResponse DataType.
        /// </summary>
        public const uint TestStackExResponse = 417;

        /// <summary>
        /// The identifier for the FindServersRequest DataType.
        /// </summary>
        public const uint FindServersRequest = 420;

        /// <summary>
        /// The identifier for the FindServersResponse DataType.
        /// </summary>
        public const uint FindServersResponse = 423;

        /// <summary>
        /// The identifier for the GetEndpointsRequest DataType.
        /// </summary>
        public const uint GetEndpointsRequest = 426;

        /// <summary>
        /// The identifier for the GetEndpointsResponse DataType.
        /// </summary>
        public const uint GetEndpointsResponse = 429;

        /// <summary>
        /// The identifier for the RegisteredServer DataType.
        /// </summary>
        public const uint RegisteredServer = 432;

        /// <summary>
        /// The identifier for the RegisterServerRequest DataType.
        /// </summary>
        public const uint RegisterServerRequest = 435;

        /// <summary>
        /// The identifier for the RegisterServerResponse DataType.
        /// </summary>
        public const uint RegisterServerResponse = 438;

        /// <summary>
        /// The identifier for the ChannelSecurityToken DataType.
        /// </summary>
        public const uint ChannelSecurityToken = 441;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest DataType.
        /// </summary>
        public const uint OpenSecureChannelRequest = 444;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse DataType.
        /// </summary>
        public const uint OpenSecureChannelResponse = 447;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest DataType.
        /// </summary>
        public const uint CloseSecureChannelRequest = 450;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse DataType.
        /// </summary>
        public const uint CloseSecureChannelResponse = 453;

        /// <summary>
        /// The identifier for the SignatureData DataType.
        /// </summary>
        public const uint SignatureData = 456;

        /// <summary>
        /// The identifier for the CreateSessionRequest DataType.
        /// </summary>
        public const uint CreateSessionRequest = 459;

        /// <summary>
        /// The identifier for the CreateSessionResponse DataType.
        /// </summary>
        public const uint CreateSessionResponse = 462;

        /// <summary>
        /// The identifier for the ActivateSessionRequest DataType.
        /// </summary>
        public const uint ActivateSessionRequest = 465;

        /// <summary>
        /// The identifier for the ActivateSessionResponse DataType.
        /// </summary>
        public const uint ActivateSessionResponse = 468;

        /// <summary>
        /// The identifier for the CloseSessionRequest DataType.
        /// </summary>
        public const uint CloseSessionRequest = 471;

        /// <summary>
        /// The identifier for the CloseSessionResponse DataType.
        /// </summary>
        public const uint CloseSessionResponse = 474;

        /// <summary>
        /// The identifier for the CancelRequest DataType.
        /// </summary>
        public const uint CancelRequest = 477;

        /// <summary>
        /// The identifier for the CancelResponse DataType.
        /// </summary>
        public const uint CancelResponse = 480;

        /// <summary>
        /// The identifier for the AddNodesResult DataType.
        /// </summary>
        public const uint AddNodesResult = 483;

        /// <summary>
        /// The identifier for the AddNodesRequest DataType.
        /// </summary>
        public const uint AddNodesRequest = 486;

        /// <summary>
        /// The identifier for the AddNodesResponse DataType.
        /// </summary>
        public const uint AddNodesResponse = 489;

        /// <summary>
        /// The identifier for the AddReferencesRequest DataType.
        /// </summary>
        public const uint AddReferencesRequest = 492;

        /// <summary>
        /// The identifier for the AddReferencesResponse DataType.
        /// </summary>
        public const uint AddReferencesResponse = 495;

        /// <summary>
        /// The identifier for the DeleteNodesRequest DataType.
        /// </summary>
        public const uint DeleteNodesRequest = 498;

        /// <summary>
        /// The identifier for the DeleteNodesResponse DataType.
        /// </summary>
        public const uint DeleteNodesResponse = 501;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest DataType.
        /// </summary>
        public const uint DeleteReferencesRequest = 504;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse DataType.
        /// </summary>
        public const uint DeleteReferencesResponse = 507;

        /// <summary>
        /// The identifier for the BrowseDirection DataType.
        /// </summary>
        public const uint BrowseDirection = 510;

        /// <summary>
        /// The identifier for the ViewDescription DataType.
        /// </summary>
        public const uint ViewDescription = 511;

        /// <summary>
        /// The identifier for the BrowseDescription DataType.
        /// </summary>
        public const uint BrowseDescription = 514;

        /// <summary>
        /// The identifier for the BrowseResultMask DataType.
        /// </summary>
        public const uint BrowseResultMask = 517;

        /// <summary>
        /// The identifier for the ReferenceDescription DataType.
        /// </summary>
        public const uint ReferenceDescription = 518;

        /// <summary>
        /// The identifier for the ContinuationPoint DataType.
        /// </summary>
        public const uint ContinuationPoint = 521;

        /// <summary>
        /// The identifier for the BrowseResult DataType.
        /// </summary>
        public const uint BrowseResult = 522;

        /// <summary>
        /// The identifier for the BrowseRequest DataType.
        /// </summary>
        public const uint BrowseRequest = 525;

        /// <summary>
        /// The identifier for the BrowseResponse DataType.
        /// </summary>
        public const uint BrowseResponse = 528;

        /// <summary>
        /// The identifier for the BrowseNextRequest DataType.
        /// </summary>
        public const uint BrowseNextRequest = 531;

        /// <summary>
        /// The identifier for the BrowseNextResponse DataType.
        /// </summary>
        public const uint BrowseNextResponse = 534;

        /// <summary>
        /// The identifier for the RelativePathElement DataType.
        /// </summary>
        public const uint RelativePathElement = 537;

        /// <summary>
        /// The identifier for the RelativePath DataType.
        /// </summary>
        public const uint RelativePath = 540;

        /// <summary>
        /// The identifier for the BrowsePath DataType.
        /// </summary>
        public const uint BrowsePath = 543;

        /// <summary>
        /// The identifier for the BrowsePathTarget DataType.
        /// </summary>
        public const uint BrowsePathTarget = 546;

        /// <summary>
        /// The identifier for the BrowsePathResult DataType.
        /// </summary>
        public const uint BrowsePathResult = 549;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest DataType.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest = 552;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse DataType.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse = 555;

        /// <summary>
        /// The identifier for the RegisterNodesRequest DataType.
        /// </summary>
        public const uint RegisterNodesRequest = 558;

        /// <summary>
        /// The identifier for the RegisterNodesResponse DataType.
        /// </summary>
        public const uint RegisterNodesResponse = 561;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest DataType.
        /// </summary>
        public const uint UnregisterNodesRequest = 564;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse DataType.
        /// </summary>
        public const uint UnregisterNodesResponse = 567;

        /// <summary>
        /// The identifier for the QueryDataDescription DataType.
        /// </summary>
        public const uint QueryDataDescription = 570;

        /// <summary>
        /// The identifier for the NodeTypeDescription DataType.
        /// </summary>
        public const uint NodeTypeDescription = 573;

        /// <summary>
        /// The identifier for the FilterOperator DataType.
        /// </summary>
        public const uint FilterOperator = 576;

        /// <summary>
        /// The identifier for the QueryDataSet DataType.
        /// </summary>
        public const uint QueryDataSet = 577;

        /// <summary>
        /// The identifier for the NodeReference DataType.
        /// </summary>
        public const uint NodeReference = 580;

        /// <summary>
        /// The identifier for the ContentFilterElement DataType.
        /// </summary>
        public const uint ContentFilterElement = 583;

        /// <summary>
        /// The identifier for the ContentFilter DataType.
        /// </summary>
        public const uint ContentFilter = 586;

        /// <summary>
        /// The identifier for the FilterOperand DataType.
        /// </summary>
        public const uint FilterOperand = 589;

        /// <summary>
        /// The identifier for the ElementOperand DataType.
        /// </summary>
        public const uint ElementOperand = 592;

        /// <summary>
        /// The identifier for the LiteralOperand DataType.
        /// </summary>
        public const uint LiteralOperand = 595;

        /// <summary>
        /// The identifier for the AttributeOperand DataType.
        /// </summary>
        public const uint AttributeOperand = 598;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand DataType.
        /// </summary>
        public const uint SimpleAttributeOperand = 601;

        /// <summary>
        /// The identifier for the ContentFilterElementResult DataType.
        /// </summary>
        public const uint ContentFilterElementResult = 604;

        /// <summary>
        /// The identifier for the ContentFilterResult DataType.
        /// </summary>
        public const uint ContentFilterResult = 607;

        /// <summary>
        /// The identifier for the ParsingResult DataType.
        /// </summary>
        public const uint ParsingResult = 610;

        /// <summary>
        /// The identifier for the QueryFirstRequest DataType.
        /// </summary>
        public const uint QueryFirstRequest = 613;

        /// <summary>
        /// The identifier for the QueryFirstResponse DataType.
        /// </summary>
        public const uint QueryFirstResponse = 616;

        /// <summary>
        /// The identifier for the QueryNextRequest DataType.
        /// </summary>
        public const uint QueryNextRequest = 619;

        /// <summary>
        /// The identifier for the QueryNextResponse DataType.
        /// </summary>
        public const uint QueryNextResponse = 622;

        /// <summary>
        /// The identifier for the TimestampsToReturn DataType.
        /// </summary>
        public const uint TimestampsToReturn = 625;

        /// <summary>
        /// The identifier for the ReadValueId DataType.
        /// </summary>
        public const uint ReadValueId = 626;

        /// <summary>
        /// The identifier for the ReadRequest DataType.
        /// </summary>
        public const uint ReadRequest = 629;

        /// <summary>
        /// The identifier for the ReadResponse DataType.
        /// </summary>
        public const uint ReadResponse = 632;

        /// <summary>
        /// The identifier for the HistoryReadValueId DataType.
        /// </summary>
        public const uint HistoryReadValueId = 635;

        /// <summary>
        /// The identifier for the HistoryReadResult DataType.
        /// </summary>
        public const uint HistoryReadResult = 638;

        /// <summary>
        /// The identifier for the HistoryReadDetails DataType.
        /// </summary>
        public const uint HistoryReadDetails = 641;

        /// <summary>
        /// The identifier for the ReadEventDetails DataType.
        /// </summary>
        public const uint ReadEventDetails = 644;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails DataType.
        /// </summary>
        public const uint ReadRawModifiedDetails = 647;

        /// <summary>
        /// The identifier for the ReadProcessedDetails DataType.
        /// </summary>
        public const uint ReadProcessedDetails = 650;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails DataType.
        /// </summary>
        public const uint ReadAtTimeDetails = 653;

        /// <summary>
        /// The identifier for the HistoryData DataType.
        /// </summary>
        public const uint HistoryData = 656;

        /// <summary>
        /// The identifier for the HistoryEvent DataType.
        /// </summary>
        public const uint HistoryEvent = 659;

        /// <summary>
        /// The identifier for the HistoryReadRequest DataType.
        /// </summary>
        public const uint HistoryReadRequest = 662;

        /// <summary>
        /// The identifier for the HistoryReadResponse DataType.
        /// </summary>
        public const uint HistoryReadResponse = 665;

        /// <summary>
        /// The identifier for the WriteValue DataType.
        /// </summary>
        public const uint WriteValue = 668;

        /// <summary>
        /// The identifier for the WriteRequest DataType.
        /// </summary>
        public const uint WriteRequest = 671;

        /// <summary>
        /// The identifier for the WriteResponse DataType.
        /// </summary>
        public const uint WriteResponse = 674;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails DataType.
        /// </summary>
        public const uint HistoryUpdateDetails = 677;

        /// <summary>
        /// The identifier for the HistoryUpdateMode DataType.
        /// </summary>
        public const uint HistoryUpdateMode = 913;

        /// <summary>
        /// The identifier for the UpdateDataDetails DataType.
        /// </summary>
        public const uint UpdateDataDetails = 680;

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails DataType.
        /// </summary>
        public const uint InsertReplaceEventDetails = 926;

        /// <summary>
        /// The identifier for the UpdateEventDetails DataType.
        /// </summary>
        public const uint UpdateEventDetails = 683;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails DataType.
        /// </summary>
        public const uint DeleteRawModifiedDetails = 686;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails DataType.
        /// </summary>
        public const uint DeleteAtTimeDetails = 689;

        /// <summary>
        /// The identifier for the DeleteEventDetails DataType.
        /// </summary>
        public const uint DeleteEventDetails = 692;

        /// <summary>
        /// The identifier for the HistoryUpdateResult DataType.
        /// </summary>
        public const uint HistoryUpdateResult = 695;

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult DataType.
        /// </summary>
        public const uint HistoryUpdateEventResult = 929;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest DataType.
        /// </summary>
        public const uint HistoryUpdateRequest = 698;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse DataType.
        /// </summary>
        public const uint HistoryUpdateResponse = 701;

        /// <summary>
        /// The identifier for the CallMethodRequest DataType.
        /// </summary>
        public const uint CallMethodRequest = 704;

        /// <summary>
        /// The identifier for the CallMethodResult DataType.
        /// </summary>
        public const uint CallMethodResult = 707;

        /// <summary>
        /// The identifier for the CallRequest DataType.
        /// </summary>
        public const uint CallRequest = 710;

        /// <summary>
        /// The identifier for the CallResponse DataType.
        /// </summary>
        public const uint CallResponse = 713;

        /// <summary>
        /// The identifier for the MonitoringMode DataType.
        /// </summary>
        public const uint MonitoringMode = 716;

        /// <summary>
        /// The identifier for the DataChangeTrigger DataType.
        /// </summary>
        public const uint DataChangeTrigger = 717;

        /// <summary>
        /// The identifier for the DeadbandType DataType.
        /// </summary>
        public const uint DeadbandType = 718;

        /// <summary>
        /// The identifier for the MonitoringFilter DataType.
        /// </summary>
        public const uint MonitoringFilter = 719;

        /// <summary>
        /// The identifier for the DataChangeFilter DataType.
        /// </summary>
        public const uint DataChangeFilter = 722;

        /// <summary>
        /// The identifier for the EventFilter DataType.
        /// </summary>
        public const uint EventFilter = 725;

        /// <summary>
        /// The identifier for the AggregateConfiguration DataType.
        /// </summary>
        public const uint AggregateConfiguration = 948;

        /// <summary>
        /// The identifier for the AggregateFilter DataType.
        /// </summary>
        public const uint AggregateFilter = 728;

        /// <summary>
        /// The identifier for the MonitoringFilterResult DataType.
        /// </summary>
        public const uint MonitoringFilterResult = 731;

        /// <summary>
        /// The identifier for the EventFilterResult DataType.
        /// </summary>
        public const uint EventFilterResult = 734;

        /// <summary>
        /// The identifier for the AggregateFilterResult DataType.
        /// </summary>
        public const uint AggregateFilterResult = 737;

        /// <summary>
        /// The identifier for the MonitoringParameters DataType.
        /// </summary>
        public const uint MonitoringParameters = 740;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest DataType.
        /// </summary>
        public const uint MonitoredItemCreateRequest = 743;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult DataType.
        /// </summary>
        public const uint MonitoredItemCreateResult = 746;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest DataType.
        /// </summary>
        public const uint CreateMonitoredItemsRequest = 749;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse DataType.
        /// </summary>
        public const uint CreateMonitoredItemsResponse = 752;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest DataType.
        /// </summary>
        public const uint MonitoredItemModifyRequest = 755;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult DataType.
        /// </summary>
        public const uint MonitoredItemModifyResult = 758;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest DataType.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest = 761;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse DataType.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse = 764;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest DataType.
        /// </summary>
        public const uint SetMonitoringModeRequest = 767;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse DataType.
        /// </summary>
        public const uint SetMonitoringModeResponse = 770;

        /// <summary>
        /// The identifier for the SetTriggeringRequest DataType.
        /// </summary>
        public const uint SetTriggeringRequest = 773;

        /// <summary>
        /// The identifier for the SetTriggeringResponse DataType.
        /// </summary>
        public const uint SetTriggeringResponse = 776;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest DataType.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest = 779;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse DataType.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse = 782;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest DataType.
        /// </summary>
        public const uint CreateSubscriptionRequest = 785;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse DataType.
        /// </summary>
        public const uint CreateSubscriptionResponse = 788;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest DataType.
        /// </summary>
        public const uint ModifySubscriptionRequest = 791;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse DataType.
        /// </summary>
        public const uint ModifySubscriptionResponse = 794;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest DataType.
        /// </summary>
        public const uint SetPublishingModeRequest = 797;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse DataType.
        /// </summary>
        public const uint SetPublishingModeResponse = 800;

        /// <summary>
        /// The identifier for the NotificationMessage DataType.
        /// </summary>
        public const uint NotificationMessage = 803;

        /// <summary>
        /// The identifier for the NotificationData DataType.
        /// </summary>
        public const uint NotificationData = 945;

        /// <summary>
        /// The identifier for the DataChangeNotification DataType.
        /// </summary>
        public const uint DataChangeNotification = 809;

        /// <summary>
        /// The identifier for the MonitoredItemNotification DataType.
        /// </summary>
        public const uint MonitoredItemNotification = 806;

        /// <summary>
        /// The identifier for the EventNotificationList DataType.
        /// </summary>
        public const uint EventNotificationList = 914;

        /// <summary>
        /// The identifier for the EventFieldList DataType.
        /// </summary>
        public const uint EventFieldList = 917;

        /// <summary>
        /// The identifier for the HistoryEventFieldList DataType.
        /// </summary>
        public const uint HistoryEventFieldList = 920;

        /// <summary>
        /// The identifier for the StatusChangeNotification DataType.
        /// </summary>
        public const uint StatusChangeNotification = 818;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement DataType.
        /// </summary>
        public const uint SubscriptionAcknowledgement = 821;

        /// <summary>
        /// The identifier for the PublishRequest DataType.
        /// </summary>
        public const uint PublishRequest = 824;

        /// <summary>
        /// The identifier for the PublishResponse DataType.
        /// </summary>
        public const uint PublishResponse = 827;

        /// <summary>
        /// The identifier for the RepublishRequest DataType.
        /// </summary>
        public const uint RepublishRequest = 830;

        /// <summary>
        /// The identifier for the RepublishResponse DataType.
        /// </summary>
        public const uint RepublishResponse = 833;

        /// <summary>
        /// The identifier for the TransferResult DataType.
        /// </summary>
        public const uint TransferResult = 836;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest DataType.
        /// </summary>
        public const uint TransferSubscriptionsRequest = 839;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse DataType.
        /// </summary>
        public const uint TransferSubscriptionsResponse = 842;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest DataType.
        /// </summary>
        public const uint DeleteSubscriptionsRequest = 845;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse DataType.
        /// </summary>
        public const uint DeleteSubscriptionsResponse = 848;

        /// <summary>
        /// The identifier for the RedundancySupport DataType.
        /// </summary>
        public const uint RedundancySupport = 851;

        /// <summary>
        /// The identifier for the ServerState DataType.
        /// </summary>
        public const uint ServerState = 852;

        /// <summary>
        /// The identifier for the RedundantServerDataType DataType.
        /// </summary>
        public const uint RedundantServerDataType = 853;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType DataType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType = 856;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType DataType.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType = 859;

        /// <summary>
        /// The identifier for the ServerStatusDataType DataType.
        /// </summary>
        public const uint ServerStatusDataType = 862;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType DataType.
        /// </summary>
        public const uint SessionDiagnosticsDataType = 865;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType DataType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType = 868;

        /// <summary>
        /// The identifier for the ServiceCounterDataType DataType.
        /// </summary>
        public const uint ServiceCounterDataType = 871;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType DataType.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType = 874;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType DataType.
        /// </summary>
        public const uint ModelChangeStructureDataType = 877;

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask DataType.
        /// </summary>
        public const uint ModelChangeStructureVerbMask = 880;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType DataType.
        /// </summary>
        public const uint SemanticChangeStructureDataType = 897;

        /// <summary>
        /// The identifier for the Range DataType.
        /// </summary>
        public const uint Range = 884;

        /// <summary>
        /// The identifier for the EUInformation DataType.
        /// </summary>
        public const uint EUInformation = 887;

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat DataType.
        /// </summary>
        public const uint ExceptionDeviationFormat = 890;

        /// <summary>
        /// The identifier for the Annotation DataType.
        /// </summary>
        public const uint Annotation = 891;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType DataType.
        /// </summary>
        public const uint ProgramDiagnosticDataType = 894;
    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the ProgramStateMachineType_Start Method.
        /// </summary>
        public const uint ProgramStateMachineType_Start = 2426;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspend Method.
        /// </summary>
        public const uint ProgramStateMachineType_Suspend = 2427;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Resume Method.
        /// </summary>
        public const uint ProgramStateMachineType_Resume = 2428;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halt Method.
        /// </summary>
        public const uint ProgramStateMachineType_Halt = 2429;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Reset Method.
        /// </summary>
        public const uint ProgramStateMachineType_Reset = 2430;

        /// <summary>
        /// The identifier for the BaseConditionType_ConditionRefresh Method.
        /// </summary>
        public const uint BaseConditionType_ConditionRefresh = 2781;

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType Method.
        /// </summary>
        public const uint AddCommentByEventIdsMethodType = 3860;

        /// <summary>
        /// The identifier for the AddCommentMethodType Method.
        /// </summary>
        public const uint AddCommentMethodType = 3863;

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds Method.
        /// </summary>
        public const uint ConditionType_AddCommentByEventIds = 2785;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Enable Method.
        /// </summary>
        public const uint ConditionStateMachineType_Enable = 2797;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Disable Method.
        /// </summary>
        public const uint ConditionStateMachineType_Disable = 2798;

        /// <summary>
        /// The identifier for the CommentStateMachineType_AddComment Method.
        /// </summary>
        public const uint CommentStateMachineType_AddComment = 2819;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds Method.
        /// </summary>
        public const uint CommentPreviousStateMachineType_AddCommentByEventIds = 2828;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Ok Method.
        /// </summary>
        public const uint OkDialogSubStateMachineType_Ok = 2843;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Ok Method.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Ok = 2859;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Cancel Method.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Cancel = 2860;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Yes Method.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Yes = 2878;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_No Method.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_No = 2879;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Cancel Method.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Cancel = 2880;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds Method.
        /// </summary>
        public const uint AcknowledgeableConditionType_AcknowledgeByEventIds = 2884;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds Method.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmByEventIds = 2885;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledge Method.
        /// </summary>
        public const uint AcknowledgeStateMachineType_Acknowledge = 2899;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirm Method.
        /// </summary>
        public const uint ConfirmedStateMachineType_Confirm = 2908;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_ManualShelve = 2946;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_Unshelve = 2947;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelve = 2948;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve Method.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelve = 2949;

        /// <summary>
        /// The identifier for the TimedShelveMethodType Method.
        /// </summary>
        public const uint TimedShelveMethodType = 6102;
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the DefaultBinary Object.
        /// </summary>
        public const uint DefaultBinary = 3062;

        /// <summary>
        /// The identifier for the DefaultXml Object.
        /// </summary>
        public const uint DefaultXml = 3063;

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory Object.
        /// </summary>
        public const uint ModellingRule_Mandatory = 78;

        /// <summary>
        /// The identifier for the ModellingRule_Optional Object.
        /// </summary>
        public const uint ModellingRule_Optional = 80;

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray Object.
        /// </summary>
        public const uint ModellingRule_ExposesItsArray = 83;

        /// <summary>
        /// The identifier for the ModellingRule_CardinalityRestriction Object.
        /// </summary>
        public const uint ModellingRule_CardinalityRestriction = 82;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared Object.
        /// </summary>
        public const uint ModellingRule_MandatoryShared = 79;

        /// <summary>
        /// The identifier for the RootFolder Object.
        /// </summary>
        public const uint RootFolder = 84;

        /// <summary>
        /// The identifier for the ObjectsFolder Object.
        /// </summary>
        public const uint ObjectsFolder = 85;

        /// <summary>
        /// The identifier for the TypesFolder Object.
        /// </summary>
        public const uint TypesFolder = 86;

        /// <summary>
        /// The identifier for the ViewsFolder Object.
        /// </summary>
        public const uint ViewsFolder = 87;

        /// <summary>
        /// The identifier for the ObjectTypesFolder Object.
        /// </summary>
        public const uint ObjectTypesFolder = 88;

        /// <summary>
        /// The identifier for the VariableTypesFolder Object.
        /// </summary>
        public const uint VariableTypesFolder = 89;

        /// <summary>
        /// The identifier for the DataTypesFolder Object.
        /// </summary>
        public const uint DataTypesFolder = 90;

        /// <summary>
        /// The identifier for the ReferenceTypesFolder Object.
        /// </summary>
        public const uint ReferenceTypesFolder = 91;

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem Object.
        /// </summary>
        public const uint XmlSchema_TypeSystem = 92;

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem Object.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem = 93;

        /// <summary>
        /// The identifier for the EventTypesFolder Object.
        /// </summary>
        public const uint EventTypesFolder = 3048;

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities Object.
        /// </summary>
        public const uint ServerType_ServerCapabilities = 2009;

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics Object.
        /// </summary>
        public const uint ServerType_ServerDiagnostics = 2010;

        /// <summary>
        /// The identifier for the ServerType_VendorServerInfo Object.
        /// </summary>
        public const uint ServerType_VendorServerInfo = 2011;

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy Object.
        /// </summary>
        public const uint ServerType_ServerRedundancy = 2012;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ModellingRules Object.
        /// </summary>
        public const uint ServerCapabilitiesType_ModellingRules = 2019;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public const uint ServerCapabilitiesType_AggregateFunctions = 2754;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary Object.
        /// </summary>
        public const uint ServerDiagnosticsType_SessionsDiagnosticsSummary = 2744;

        /// <summary>
        /// The identifier for the Server Object.
        /// </summary>
        public const uint Server = 2253;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities Object.
        /// </summary>
        public const uint Server_ServerCapabilities = 2268;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public const uint Server_ServerCapabilities_ModellingRules = 2996;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public const uint Server_ServerCapabilities_AggregateFunctions = 2997;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics Object.
        /// </summary>
        public const uint Server_ServerDiagnostics = 2274;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary = 3706;

        /// <summary>
        /// The identifier for the Server_VendorServerInfo Object.
        /// </summary>
        public const uint Server_VendorServerInfo = 2295;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy Object.
        /// </summary>
        public const uint Server_ServerRedundancy = 2296;

        /// <summary>
        /// The identifier for the AggregateFunction_Interpolative Object.
        /// </summary>
        public const uint AggregateFunction_Interpolative = 2341;

        /// <summary>
        /// The identifier for the AggregateFunction_Average Object.
        /// </summary>
        public const uint AggregateFunction_Average = 2342;

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage Object.
        /// </summary>
        public const uint AggregateFunction_TimeAverage = 2343;

        /// <summary>
        /// The identifier for the AggregateFunction_Total Object.
        /// </summary>
        public const uint AggregateFunction_Total = 2344;

        /// <summary>
        /// The identifier for the AggregateFunction_TotalizeAverage Object.
        /// </summary>
        public const uint AggregateFunction_TotalizeAverage = 2345;

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum Object.
        /// </summary>
        public const uint AggregateFunction_Minimum = 2346;

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum Object.
        /// </summary>
        public const uint AggregateFunction_Maximum = 2347;

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime Object.
        /// </summary>
        public const uint AggregateFunction_MinimumActualTime = 2348;

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime Object.
        /// </summary>
        public const uint AggregateFunction_MaximumActualTime = 2349;

        /// <summary>
        /// The identifier for the AggregateFunction_Range Object.
        /// </summary>
        public const uint AggregateFunction_Range = 2350;

        /// <summary>
        /// The identifier for the AggregateFunction_AnnotationCount Object.
        /// </summary>
        public const uint AggregateFunction_AnnotationCount = 2351;

        /// <summary>
        /// The identifier for the AggregateFunction_Count Object.
        /// </summary>
        public const uint AggregateFunction_Count = 2352;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInState0 Object.
        /// </summary>
        public const uint AggregateFunction_DurationInState0 = 2353;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInState1 Object.
        /// </summary>
        public const uint AggregateFunction_DurationInState1 = 2354;

        /// <summary>
        /// The identifier for the AggregateFunction_NumberOfTransitions Object.
        /// </summary>
        public const uint AggregateFunction_NumberOfTransitions = 2355;

        /// <summary>
        /// The identifier for the AggregateFunction_Time Object.
        /// </summary>
        public const uint AggregateFunction_Time = 2356;

        /// <summary>
        /// The identifier for the AggregateFunction_Start Object.
        /// </summary>
        public const uint AggregateFunction_Start = 2357;

        /// <summary>
        /// The identifier for the AggregateFunction_End Object.
        /// </summary>
        public const uint AggregateFunction_End = 2358;

        /// <summary>
        /// The identifier for the AggregateFunction_Delta Object.
        /// </summary>
        public const uint AggregateFunction_Delta = 2359;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationGood Object.
        /// </summary>
        public const uint AggregateFunction_DurationGood = 2360;

        /// <summary>
        /// The identifier for the AggregateFunction_DurationBad Object.
        /// </summary>
        public const uint AggregateFunction_DurationBad = 2361;

        /// <summary>
        /// The identifier for the AggregateFunction_PercentGood Object.
        /// </summary>
        public const uint AggregateFunction_PercentGood = 2362;

        /// <summary>
        /// The identifier for the AggregateFunction_PercentBad Object.
        /// </summary>
        public const uint AggregateFunction_PercentBad = 2363;

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality Object.
        /// </summary>
        public const uint AggregateFunction_WorstQuality = 2364;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_FinalResultData Object.
        /// </summary>
        public const uint ProgramStateMachineType_FinalResultData = 3850;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready Object.
        /// </summary>
        public const uint ProgramStateMachineType_Ready = 2400;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running Object.
        /// </summary>
        public const uint ProgramStateMachineType_Running = 2402;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended Object.
        /// </summary>
        public const uint ProgramStateMachineType_Suspended = 2404;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted Object.
        /// </summary>
        public const uint ProgramStateMachineType_Halted = 2406;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_HaltedToReady = 2408;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning Object.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToRunning = 2410;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToHalted = 2412;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToReady = 2414;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended Object.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToSuspended = 2416;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToRunning = 2418;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToHalted = 2420;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady Object.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToReady = 2422;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted Object.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToHalted = 2424;

        /// <summary>
        /// The identifier for the ConditionType_State Object.
        /// </summary>
        public const uint ConditionType_State = 2783;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Enabled Object.
        /// </summary>
        public const uint ConditionStateMachineType_Enabled = 2793;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Disabled Object.
        /// </summary>
        public const uint ConditionStateMachineType_Disabled = 2794;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_ToEnabled Object.
        /// </summary>
        public const uint ConditionStateMachineType_ToEnabled = 2795;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_ToDisabled Object.
        /// </summary>
        public const uint ConditionStateMachineType_ToDisabled = 2796;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Status Object.
        /// </summary>
        public const uint ConditionStateMachineType_Status = 2799;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Severity Object.
        /// </summary>
        public const uint ConditionStateMachineType_Severity = 2800;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Comment Object.
        /// </summary>
        public const uint ConditionStateMachineType_Comment = 2801;

        /// <summary>
        /// The identifier for the ConditionStateMachineType_CommentPrevious Object.
        /// </summary>
        public const uint ConditionStateMachineType_CommentPrevious = 2802;

        /// <summary>
        /// The identifier for the StatusStateMachineType_Change Object.
        /// </summary>
        public const uint StatusStateMachineType_Change = 2806;

        /// <summary>
        /// The identifier for the StatusStateMachineType_ToChange Object.
        /// </summary>
        public const uint StatusStateMachineType_ToChange = 2807;

        /// <summary>
        /// The identifier for the SeverityStateMachineType_Change Object.
        /// </summary>
        public const uint SeverityStateMachineType_Change = 2810;

        /// <summary>
        /// The identifier for the SeverityStateMachineType_SeverityChange Object.
        /// </summary>
        public const uint SeverityStateMachineType_SeverityChange = 2811;

        /// <summary>
        /// The identifier for the CommentStateMachineType_LastComment Object.
        /// </summary>
        public const uint CommentStateMachineType_LastComment = 2815;

        /// <summary>
        /// The identifier for the CommentStateMachineType_CommentAdded Object.
        /// </summary>
        public const uint CommentStateMachineType_CommentAdded = 2816;

        /// <summary>
        /// The identifier for the CommentStateMachineType_ToCommentAdded Object.
        /// </summary>
        public const uint CommentStateMachineType_ToCommentAdded = 2817;

        /// <summary>
        /// The identifier for the CommentStateMachineType_ToLastComment Object.
        /// </summary>
        public const uint CommentStateMachineType_ToLastComment = 2818;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_LastComment Object.
        /// </summary>
        public const uint CommentPreviousStateMachineType_LastComment = 2824;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_CommentAdded Object.
        /// </summary>
        public const uint CommentPreviousStateMachineType_CommentAdded = 2825;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ToCommentAdded Object.
        /// </summary>
        public const uint CommentPreviousStateMachineType_ToCommentAdded = 2826;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ToLastComment Object.
        /// </summary>
        public const uint CommentPreviousStateMachineType_ToLastComment = 2827;

        /// <summary>
        /// The identifier for the OkDialogConditionType_State Object.
        /// </summary>
        public const uint OkDialogConditionType_State = 2833;

        /// <summary>
        /// The identifier for the OkDialogStateMachineType_Dialog Object.
        /// </summary>
        public const uint OkDialogStateMachineType_Dialog = 2835;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_Inactive = 2837;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Active Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_Active = 2838;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_Accepting = 2839;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_ToAccepting = 2840;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_ToActive = 2841;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToInactive Object.
        /// </summary>
        public const uint OkDialogSubStateMachineType_ToInactive = 2842;

        /// <summary>
        /// The identifier for the OkCancelDialogConditionType_State Object.
        /// </summary>
        public const uint OkCancelDialogConditionType_State = 2846;

        /// <summary>
        /// The identifier for the OkCancelDialogStateMachineType_Dialog Object.
        /// </summary>
        public const uint OkCancelDialogStateMachineType_Dialog = 2848;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Inactive = 2850;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Active Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Active = 2851;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Accepting = 2852;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Cancelling Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_Cancelling = 2853;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_ToActive = 2854;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_ToAccepting = 2855;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_AcceptingToInactive Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_AcceptingToInactive = 2856;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToCancelling Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_ToCancelling = 2857;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_CancellingToInactive Object.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType_CancellingToInactive = 2858;

        /// <summary>
        /// The identifier for the YesNoCancelDialogConditionType_State Object.
        /// </summary>
        public const uint YesNoCancelDialogConditionType_State = 2862;

        /// <summary>
        /// The identifier for the YesNoCancelDialogStateMachineType_Dialog Object.
        /// </summary>
        public const uint YesNoCancelDialogStateMachineType_Dialog = 2864;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Inactive = 2866;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Active Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Active = 2867;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Accepting = 2868;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Cancelling Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Cancelling = 2869;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Rejecting Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_Rejecting = 2870;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_ToActive = 2871;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_ToAccepting = 2872;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_AcceptingToInactive Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_AcceptingToInactive = 2873;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToCancelling Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_ToCancelling = 2874;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_CancellingToInactive Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_CancellingToInactive = 2875;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToRejecting Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_ToRejecting = 2876;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_RejectingToInactive Object.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType_RejectingToInactive = 2877;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_State Object.
        /// </summary>
        public const uint AcknowledgeableConditionType_State = 2882;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_Acknowledged Object.
        /// </summary>
        public const uint AcknowledgeableConditionStateMachineType_Acknowledged = 2887;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_AckPreviousRequired Object.
        /// </summary>
        public const uint AcknowledgeableConditionStateMachineType_AckPreviousRequired = 2888;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_Confirm Object.
        /// </summary>
        public const uint AcknowledgeableConditionStateMachineType_Confirm = 2889;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_ConfirmPrevious Object.
        /// </summary>
        public const uint AcknowledgeableConditionStateMachineType_ConfirmPrevious = 2890;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Unacknowledged Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_Unacknowledged = 2893;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledged Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_Acknowledged = 2894;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledging Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_Acknowledging = 2895;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToAcknowledging Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_ToAcknowledging = 2896;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToAcknowledged Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_ToAcknowledged = 2897;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToUnacknowledged Object.
        /// </summary>
        public const uint AcknowledgeStateMachineType_ToUnacknowledged = 2898;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Unconfirmed Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_Unconfirmed = 2901;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirmed Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_Confirmed = 2902;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirming Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_Confirming = 2903;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ToConfirming Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_ToConfirming = 2904;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ToConfirmed Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_ToConfirmed = 2905;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ConfirmingToUnconfirmed Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_ConfirmingToUnconfirmed = 2906;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ConfirmedToUnconfirmed Object.
        /// </summary>
        public const uint ConfirmedStateMachineType_ConfirmedToUnconfirmed = 2907;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Inactive Object.
        /// </summary>
        public const uint AckPreviousStateMachineType_Inactive = 3036;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Active Object.
        /// </summary>
        public const uint AckPreviousStateMachineType_Active = 2911;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Confirming Object.
        /// </summary>
        public const uint AckPreviousStateMachineType_Confirming = 2912;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_ToActive Object.
        /// </summary>
        public const uint AckPreviousStateMachineType_ToActive = 2913;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_ToInactive Object.
        /// </summary>
        public const uint AckPreviousStateMachineType_ToInactive = 3037;

        /// <summary>
        /// The identifier for the AlarmConditionType_State Object.
        /// </summary>
        public const uint AlarmConditionType_State = 2916;

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmActive Object.
        /// </summary>
        public const uint AlarmConditionStateMachineType_AlarmActive = 2920;

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmShelved Object.
        /// </summary>
        public const uint AlarmConditionStateMachineType_AlarmShelved = 2921;

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmSuppressed Object.
        /// </summary>
        public const uint AlarmConditionStateMachineType_AlarmSuppressed = 2922;

        /// <summary>
        /// The identifier for the AlarmStateMachineType_Inactive Object.
        /// </summary>
        public const uint AlarmStateMachineType_Inactive = 2924;

        /// <summary>
        /// The identifier for the AlarmStateMachineType_Active Object.
        /// </summary>
        public const uint AlarmStateMachineType_Active = 2925;

        /// <summary>
        /// The identifier for the AlarmStateMachineType_ToActive Object.
        /// </summary>
        public const uint AlarmStateMachineType_ToActive = 2926;

        /// <summary>
        /// The identifier for the AlarmStateMachineType_ToInactive Object.
        /// </summary>
        public const uint AlarmStateMachineType_ToInactive = 2927;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_Unshelved = 2930;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_ManualShelved = 2931;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelved = 2932;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelved = 2933;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToManualShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToManualShelved = 2934;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToTimedShelved = 2935;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_UnshelvedToOneShotShelved = 2936;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToUnshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_ManualShelvedToUnshelved = 2937;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToTimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_ManualShelvedToTimedShelved = 2938;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToOneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_ManualShelvedToOneShotShelved = 2939;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToUnshelved = 2940;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToManualShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToManualShelved = 2941;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelvedToOneShotShelved = 2942;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToUnshelved = 2943;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToManualShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToManualShelved = 2944;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved Object.
        /// </summary>
        public const uint ShelvedStateMachineType_OneShotShelvedToTimedShelved = 2945;

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_Unsuppressed Object.
        /// </summary>
        public const uint SuppressedStateMachineType_Unsuppressed = 2951;

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_Suppressed Object.
        /// </summary>
        public const uint SuppressedStateMachineType_Suppressed = 2952;

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_ToUnsuppressed Object.
        /// </summary>
        public const uint SuppressedStateMachineType_ToUnsuppressed = 2953;

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_ToSuppressed Object.
        /// </summary>
        public const uint SuppressedStateMachineType_ToSuppressed = 2954;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_State Object.
        /// </summary>
        public const uint MultiLevelAlarmType_State = 2960;

        /// <summary>
        /// The identifier for the MultiLevelAlarmConditionStateMachineType_AlarmActive Object.
        /// </summary>
        public const uint MultiLevelAlarmConditionStateMachineType_AlarmActive = 2966;

        /// <summary>
        /// The identifier for the MultiLevelAlarmStateMachineType_ActiveSubState Object.
        /// </summary>
        public const uint MultiLevelAlarmStateMachineType_ActiveSubState = 2968;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighHigh Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_HighHigh = 2970;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_High Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_High = 2971;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_Low Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_Low = 2972;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowLow Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_LowLow = 2973;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighToHighHigh Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_HighToHighHigh = 2974;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighHighToHigh Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_HighHighToHigh = 2975;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowToLowLow Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_LowToLowLow = 2976;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowLowToLow Object.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType_LowLowToLow = 2977;

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Node_Encoding_DefaultXml = 259;

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectNode_Encoding_DefaultXml = 262;

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectTypeNode_Encoding_DefaultXml = 265;

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableNode_Encoding_DefaultXml = 268;

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableTypeNode_Encoding_DefaultXml = 271;

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceTypeNode_Encoding_DefaultXml = 274;

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MethodNode_Encoding_DefaultXml = 277;

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewNode_Encoding_DefaultXml = 280;

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeNode_Encoding_DefaultXml = 283;

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceNode_Encoding_DefaultXml = 286;

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Argument_Encoding_DefaultXml = 297;

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TimeZoneDataType_Encoding_DefaultXml = 8913;

        /// <summary>
        /// The identifier for the EnumValueInfo_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EnumValueInfo_Encoding_DefaultXml = 7616;

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StatusResult_Encoding_DefaultXml = 300;

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserTokenPolicy_Encoding_DefaultXml = 305;

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ApplicationDescription_Encoding_DefaultXml = 309;

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EndpointDescription_Encoding_DefaultXml = 313;

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserIdentityToken_Encoding_DefaultXml = 317;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AnonymousIdentityToken_Encoding_DefaultXml = 320;

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UserNameIdentityToken_Encoding_DefaultXml = 323;

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint X509IdentityToken_Encoding_DefaultXml = 326;

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint IssuedIdentityToken_Encoding_DefaultXml = 939;

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EndpointConfiguration_Encoding_DefaultXml = 332;

        /// <summary>
        /// The identifier for the SupportedProfile_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SupportedProfile_Encoding_DefaultXml = 336;

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BuildInfo_Encoding_DefaultXml = 339;

        /// <summary>
        /// The identifier for the SoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SoftwareCertificate_Encoding_DefaultXml = 342;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SignedSoftwareCertificate_Encoding_DefaultXml = 345;

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeAttributes_Encoding_DefaultXml = 350;

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectAttributes_Encoding_DefaultXml = 353;

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableAttributes_Encoding_DefaultXml = 356;

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MethodAttributes_Encoding_DefaultXml = 359;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ObjectTypeAttributes_Encoding_DefaultXml = 362;

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint VariableTypeAttributes_Encoding_DefaultXml = 365;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceTypeAttributes_Encoding_DefaultXml = 368;

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataTypeAttributes_Encoding_DefaultXml = 371;

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewAttributes_Encoding_DefaultXml = 374;

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesItem_Encoding_DefaultXml = 377;

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesItem_Encoding_DefaultXml = 380;

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesItem_Encoding_DefaultXml = 383;

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesItem_Encoding_DefaultXml = 386;

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RequestHeader_Encoding_DefaultXml = 390;

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ResponseHeader_Encoding_DefaultXml = 393;

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServiceFault_Encoding_DefaultXml = 396;

        /// <summary>
        /// The identifier for the ScalarTestType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ScalarTestType_Encoding_DefaultXml = 400;

        /// <summary>
        /// The identifier for the ArrayTestType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ArrayTestType_Encoding_DefaultXml = 403;

        /// <summary>
        /// The identifier for the CompositeTestType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CompositeTestType_Encoding_DefaultXml = 406;

        /// <summary>
        /// The identifier for the TestStackRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TestStackRequest_Encoding_DefaultXml = 409;

        /// <summary>
        /// The identifier for the TestStackResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TestStackResponse_Encoding_DefaultXml = 412;

        /// <summary>
        /// The identifier for the TestStackExRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TestStackExRequest_Encoding_DefaultXml = 415;

        /// <summary>
        /// The identifier for the TestStackExResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TestStackExResponse_Encoding_DefaultXml = 418;

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersRequest_Encoding_DefaultXml = 421;

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FindServersResponse_Encoding_DefaultXml = 424;

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint GetEndpointsRequest_Encoding_DefaultXml = 427;

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint GetEndpointsResponse_Encoding_DefaultXml = 430;

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisteredServer_Encoding_DefaultXml = 433;

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServerRequest_Encoding_DefaultXml = 436;

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterServerResponse_Encoding_DefaultXml = 439;

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ChannelSecurityToken_Encoding_DefaultXml = 442;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint OpenSecureChannelRequest_Encoding_DefaultXml = 445;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint OpenSecureChannelResponse_Encoding_DefaultXml = 448;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSecureChannelRequest_Encoding_DefaultXml = 451;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSecureChannelResponse_Encoding_DefaultXml = 454;

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SignatureData_Encoding_DefaultXml = 457;

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSessionRequest_Encoding_DefaultXml = 460;

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSessionResponse_Encoding_DefaultXml = 463;

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ActivateSessionRequest_Encoding_DefaultXml = 466;

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ActivateSessionResponse_Encoding_DefaultXml = 469;

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSessionRequest_Encoding_DefaultXml = 472;

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CloseSessionResponse_Encoding_DefaultXml = 475;

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CancelRequest_Encoding_DefaultXml = 478;

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CancelResponse_Encoding_DefaultXml = 481;

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesResult_Encoding_DefaultXml = 484;

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesRequest_Encoding_DefaultXml = 487;

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddNodesResponse_Encoding_DefaultXml = 490;

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesRequest_Encoding_DefaultXml = 493;

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AddReferencesResponse_Encoding_DefaultXml = 496;

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesRequest_Encoding_DefaultXml = 499;

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteNodesResponse_Encoding_DefaultXml = 502;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesRequest_Encoding_DefaultXml = 505;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteReferencesResponse_Encoding_DefaultXml = 508;

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ViewDescription_Encoding_DefaultXml = 512;

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseDescription_Encoding_DefaultXml = 515;

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReferenceDescription_Encoding_DefaultXml = 519;

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseResult_Encoding_DefaultXml = 523;

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseRequest_Encoding_DefaultXml = 526;

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseResponse_Encoding_DefaultXml = 529;

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseNextRequest_Encoding_DefaultXml = 532;

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowseNextResponse_Encoding_DefaultXml = 535;

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RelativePathElement_Encoding_DefaultXml = 538;

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RelativePath_Encoding_DefaultXml = 541;

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePath_Encoding_DefaultXml = 544;

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePathTarget_Encoding_DefaultXml = 547;

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BrowsePathResult_Encoding_DefaultXml = 550;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = 553;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = 556;

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterNodesRequest_Encoding_DefaultXml = 559;

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RegisterNodesResponse_Encoding_DefaultXml = 562;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UnregisterNodesRequest_Encoding_DefaultXml = 565;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UnregisterNodesResponse_Encoding_DefaultXml = 568;

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryDataDescription_Encoding_DefaultXml = 571;

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeTypeDescription_Encoding_DefaultXml = 574;

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryDataSet_Encoding_DefaultXml = 578;

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NodeReference_Encoding_DefaultXml = 581;

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterElement_Encoding_DefaultXml = 584;

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilter_Encoding_DefaultXml = 587;

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint FilterOperand_Encoding_DefaultXml = 590;

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ElementOperand_Encoding_DefaultXml = 593;

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint LiteralOperand_Encoding_DefaultXml = 596;

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AttributeOperand_Encoding_DefaultXml = 599;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SimpleAttributeOperand_Encoding_DefaultXml = 602;

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterElementResult_Encoding_DefaultXml = 605;

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ContentFilterResult_Encoding_DefaultXml = 608;

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ParsingResult_Encoding_DefaultXml = 611;

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryFirstRequest_Encoding_DefaultXml = 614;

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryFirstResponse_Encoding_DefaultXml = 617;

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryNextRequest_Encoding_DefaultXml = 620;

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint QueryNextResponse_Encoding_DefaultXml = 623;

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadValueId_Encoding_DefaultXml = 627;

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadRequest_Encoding_DefaultXml = 630;

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadResponse_Encoding_DefaultXml = 633;

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadValueId_Encoding_DefaultXml = 636;

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadResult_Encoding_DefaultXml = 639;

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadDetails_Encoding_DefaultXml = 642;

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadEventDetails_Encoding_DefaultXml = 645;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadRawModifiedDetails_Encoding_DefaultXml = 648;

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadProcessedDetails_Encoding_DefaultXml = 651;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ReadAtTimeDetails_Encoding_DefaultXml = 654;

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryData_Encoding_DefaultXml = 657;

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryEvent_Encoding_DefaultXml = 660;

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadRequest_Encoding_DefaultXml = 663;

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryReadResponse_Encoding_DefaultXml = 666;

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteValue_Encoding_DefaultXml = 669;

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteRequest_Encoding_DefaultXml = 672;

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint WriteResponse_Encoding_DefaultXml = 675;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateDetails_Encoding_DefaultXml = 678;

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UpdateDataDetails_Encoding_DefaultXml = 681;

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint InsertReplaceEventDetails_Encoding_DefaultXml = 927;

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint UpdateEventDetails_Encoding_DefaultXml = 684;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteRawModifiedDetails_Encoding_DefaultXml = 687;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteAtTimeDetails_Encoding_DefaultXml = 690;

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteEventDetails_Encoding_DefaultXml = 693;

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateResult_Encoding_DefaultXml = 696;

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateEventResult_Encoding_DefaultXml = 930;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateRequest_Encoding_DefaultXml = 699;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryUpdateResponse_Encoding_DefaultXml = 702;

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallMethodRequest_Encoding_DefaultXml = 705;

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallMethodResult_Encoding_DefaultXml = 708;

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallRequest_Encoding_DefaultXml = 711;

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CallResponse_Encoding_DefaultXml = 714;

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringFilter_Encoding_DefaultXml = 720;

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataChangeFilter_Encoding_DefaultXml = 723;

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFilter_Encoding_DefaultXml = 726;

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateConfiguration_Encoding_DefaultXml = 949;

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateFilter_Encoding_DefaultXml = 729;

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringFilterResult_Encoding_DefaultXml = 732;

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFilterResult_Encoding_DefaultXml = 735;

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint AggregateFilterResult_Encoding_DefaultXml = 738;

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoringParameters_Encoding_DefaultXml = 741;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemCreateRequest_Encoding_DefaultXml = 744;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemCreateResult_Encoding_DefaultXml = 747;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultXml = 750;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultXml = 753;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemModifyRequest_Encoding_DefaultXml = 756;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemModifyResult_Encoding_DefaultXml = 759;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultXml = 762;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultXml = 765;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetMonitoringModeRequest_Encoding_DefaultXml = 768;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetMonitoringModeResponse_Encoding_DefaultXml = 771;

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetTriggeringRequest_Encoding_DefaultXml = 774;

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetTriggeringResponse_Encoding_DefaultXml = 777;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultXml = 780;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultXml = 783;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSubscriptionRequest_Encoding_DefaultXml = 786;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint CreateSubscriptionResponse_Encoding_DefaultXml = 789;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifySubscriptionRequest_Encoding_DefaultXml = 792;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModifySubscriptionResponse_Encoding_DefaultXml = 795;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetPublishingModeRequest_Encoding_DefaultXml = 798;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SetPublishingModeResponse_Encoding_DefaultXml = 801;

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NotificationMessage_Encoding_DefaultXml = 804;

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultXml Object.
        /// </summary>
        public const uint NotificationData_Encoding_DefaultXml = 946;

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DataChangeNotification_Encoding_DefaultXml = 810;

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MonitoredItemNotification_Encoding_DefaultXml = 807;

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventNotificationList_Encoding_DefaultXml = 915;

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EventFieldList_Encoding_DefaultXml = 918;

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public const uint HistoryEventFieldList_Encoding_DefaultXml = 921;

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public const uint StatusChangeNotification_Encoding_DefaultXml = 819;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SubscriptionAcknowledgement_Encoding_DefaultXml = 822;

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PublishRequest_Encoding_DefaultXml = 825;

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PublishResponse_Encoding_DefaultXml = 828;

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RepublishRequest_Encoding_DefaultXml = 831;

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RepublishResponse_Encoding_DefaultXml = 834;

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferResult_Encoding_DefaultXml = 837;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferSubscriptionsRequest_Encoding_DefaultXml = 840;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint TransferSubscriptionsResponse_Encoding_DefaultXml = 843;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultXml = 846;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultXml = 849;

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RedundantServerDataType_Encoding_DefaultXml = 854;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = 857;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = 860;

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServerStatusDataType_Encoding_DefaultXml = 863;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SessionDiagnosticsDataType_Encoding_DefaultXml = 866;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = 869;

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ServiceCounterDataType_Encoding_DefaultXml = 872;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultXml = 875;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ModelChangeStructureDataType_Encoding_DefaultXml = 878;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SemanticChangeStructureDataType_Encoding_DefaultXml = 898;

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Range_Encoding_DefaultXml = 885;

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultXml Object.
        /// </summary>
        public const uint EUInformation_Encoding_DefaultXml = 888;

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultXml Object.
        /// </summary>
        public const uint Annotation_Encoding_DefaultXml = 892;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ProgramDiagnosticDataType_Encoding_DefaultXml = 895;

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Node_Encoding_DefaultBinary = 260;

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectNode_Encoding_DefaultBinary = 263;

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectTypeNode_Encoding_DefaultBinary = 266;

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableNode_Encoding_DefaultBinary = 269;

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableTypeNode_Encoding_DefaultBinary = 272;

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceTypeNode_Encoding_DefaultBinary = 275;

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MethodNode_Encoding_DefaultBinary = 278;

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewNode_Encoding_DefaultBinary = 281;

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeNode_Encoding_DefaultBinary = 284;

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceNode_Encoding_DefaultBinary = 287;

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Argument_Encoding_DefaultBinary = 298;

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TimeZoneDataType_Encoding_DefaultBinary = 8917;

        /// <summary>
        /// The identifier for the EnumValueInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EnumValueInfo_Encoding_DefaultBinary = 8251;

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StatusResult_Encoding_DefaultBinary = 301;

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserTokenPolicy_Encoding_DefaultBinary = 306;

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ApplicationDescription_Encoding_DefaultBinary = 310;

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EndpointDescription_Encoding_DefaultBinary = 314;

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserIdentityToken_Encoding_DefaultBinary = 318;

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AnonymousIdentityToken_Encoding_DefaultBinary = 321;

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UserNameIdentityToken_Encoding_DefaultBinary = 324;

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint X509IdentityToken_Encoding_DefaultBinary = 327;

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint IssuedIdentityToken_Encoding_DefaultBinary = 940;

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EndpointConfiguration_Encoding_DefaultBinary = 333;

        /// <summary>
        /// The identifier for the SupportedProfile_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SupportedProfile_Encoding_DefaultBinary = 337;

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BuildInfo_Encoding_DefaultBinary = 340;

        /// <summary>
        /// The identifier for the SoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SoftwareCertificate_Encoding_DefaultBinary = 343;

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SignedSoftwareCertificate_Encoding_DefaultBinary = 346;

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeAttributes_Encoding_DefaultBinary = 351;

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectAttributes_Encoding_DefaultBinary = 354;

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableAttributes_Encoding_DefaultBinary = 357;

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MethodAttributes_Encoding_DefaultBinary = 360;

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ObjectTypeAttributes_Encoding_DefaultBinary = 363;

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint VariableTypeAttributes_Encoding_DefaultBinary = 366;

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceTypeAttributes_Encoding_DefaultBinary = 369;

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataTypeAttributes_Encoding_DefaultBinary = 372;

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewAttributes_Encoding_DefaultBinary = 375;

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesItem_Encoding_DefaultBinary = 378;

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesItem_Encoding_DefaultBinary = 381;

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesItem_Encoding_DefaultBinary = 384;

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesItem_Encoding_DefaultBinary = 387;

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RequestHeader_Encoding_DefaultBinary = 391;

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ResponseHeader_Encoding_DefaultBinary = 394;

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServiceFault_Encoding_DefaultBinary = 397;

        /// <summary>
        /// The identifier for the ScalarTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ScalarTestType_Encoding_DefaultBinary = 401;

        /// <summary>
        /// The identifier for the ArrayTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ArrayTestType_Encoding_DefaultBinary = 404;

        /// <summary>
        /// The identifier for the CompositeTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CompositeTestType_Encoding_DefaultBinary = 407;

        /// <summary>
        /// The identifier for the TestStackRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TestStackRequest_Encoding_DefaultBinary = 410;

        /// <summary>
        /// The identifier for the TestStackResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TestStackResponse_Encoding_DefaultBinary = 413;

        /// <summary>
        /// The identifier for the TestStackExRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TestStackExRequest_Encoding_DefaultBinary = 416;

        /// <summary>
        /// The identifier for the TestStackExResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TestStackExResponse_Encoding_DefaultBinary = 419;

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersRequest_Encoding_DefaultBinary = 422;

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FindServersResponse_Encoding_DefaultBinary = 425;

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint GetEndpointsRequest_Encoding_DefaultBinary = 428;

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint GetEndpointsResponse_Encoding_DefaultBinary = 431;

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisteredServer_Encoding_DefaultBinary = 434;

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServerRequest_Encoding_DefaultBinary = 437;

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterServerResponse_Encoding_DefaultBinary = 440;

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ChannelSecurityToken_Encoding_DefaultBinary = 443;

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint OpenSecureChannelRequest_Encoding_DefaultBinary = 446;

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint OpenSecureChannelResponse_Encoding_DefaultBinary = 449;

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSecureChannelRequest_Encoding_DefaultBinary = 452;

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSecureChannelResponse_Encoding_DefaultBinary = 455;

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SignatureData_Encoding_DefaultBinary = 458;

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSessionRequest_Encoding_DefaultBinary = 461;

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSessionResponse_Encoding_DefaultBinary = 464;

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ActivateSessionRequest_Encoding_DefaultBinary = 467;

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ActivateSessionResponse_Encoding_DefaultBinary = 470;

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSessionRequest_Encoding_DefaultBinary = 473;

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CloseSessionResponse_Encoding_DefaultBinary = 476;

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CancelRequest_Encoding_DefaultBinary = 479;

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CancelResponse_Encoding_DefaultBinary = 482;

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesResult_Encoding_DefaultBinary = 485;

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesRequest_Encoding_DefaultBinary = 488;

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddNodesResponse_Encoding_DefaultBinary = 491;

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesRequest_Encoding_DefaultBinary = 494;

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AddReferencesResponse_Encoding_DefaultBinary = 497;

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesRequest_Encoding_DefaultBinary = 500;

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteNodesResponse_Encoding_DefaultBinary = 503;

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesRequest_Encoding_DefaultBinary = 506;

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteReferencesResponse_Encoding_DefaultBinary = 509;

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ViewDescription_Encoding_DefaultBinary = 513;

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseDescription_Encoding_DefaultBinary = 516;

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReferenceDescription_Encoding_DefaultBinary = 520;

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseResult_Encoding_DefaultBinary = 524;

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseRequest_Encoding_DefaultBinary = 527;

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseResponse_Encoding_DefaultBinary = 530;

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseNextRequest_Encoding_DefaultBinary = 533;

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowseNextResponse_Encoding_DefaultBinary = 536;

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RelativePathElement_Encoding_DefaultBinary = 539;

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RelativePath_Encoding_DefaultBinary = 542;

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePath_Encoding_DefaultBinary = 545;

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePathTarget_Encoding_DefaultBinary = 548;

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BrowsePathResult_Encoding_DefaultBinary = 551;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = 554;

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = 557;

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterNodesRequest_Encoding_DefaultBinary = 560;

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RegisterNodesResponse_Encoding_DefaultBinary = 563;

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UnregisterNodesRequest_Encoding_DefaultBinary = 566;

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UnregisterNodesResponse_Encoding_DefaultBinary = 569;

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryDataDescription_Encoding_DefaultBinary = 572;

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeTypeDescription_Encoding_DefaultBinary = 575;

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryDataSet_Encoding_DefaultBinary = 579;

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NodeReference_Encoding_DefaultBinary = 582;

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterElement_Encoding_DefaultBinary = 585;

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilter_Encoding_DefaultBinary = 588;

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint FilterOperand_Encoding_DefaultBinary = 591;

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ElementOperand_Encoding_DefaultBinary = 594;

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint LiteralOperand_Encoding_DefaultBinary = 597;

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AttributeOperand_Encoding_DefaultBinary = 600;

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SimpleAttributeOperand_Encoding_DefaultBinary = 603;

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterElementResult_Encoding_DefaultBinary = 606;

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ContentFilterResult_Encoding_DefaultBinary = 609;

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ParsingResult_Encoding_DefaultBinary = 612;

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryFirstRequest_Encoding_DefaultBinary = 615;

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryFirstResponse_Encoding_DefaultBinary = 618;

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryNextRequest_Encoding_DefaultBinary = 621;

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint QueryNextResponse_Encoding_DefaultBinary = 624;

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadValueId_Encoding_DefaultBinary = 628;

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadRequest_Encoding_DefaultBinary = 631;

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadResponse_Encoding_DefaultBinary = 634;

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadValueId_Encoding_DefaultBinary = 637;

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadResult_Encoding_DefaultBinary = 640;

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadDetails_Encoding_DefaultBinary = 643;

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadEventDetails_Encoding_DefaultBinary = 646;

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadRawModifiedDetails_Encoding_DefaultBinary = 649;

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadProcessedDetails_Encoding_DefaultBinary = 652;

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ReadAtTimeDetails_Encoding_DefaultBinary = 655;

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryData_Encoding_DefaultBinary = 658;

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryEvent_Encoding_DefaultBinary = 661;

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadRequest_Encoding_DefaultBinary = 664;

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryReadResponse_Encoding_DefaultBinary = 667;

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteValue_Encoding_DefaultBinary = 670;

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteRequest_Encoding_DefaultBinary = 673;

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint WriteResponse_Encoding_DefaultBinary = 676;

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateDetails_Encoding_DefaultBinary = 679;

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UpdateDataDetails_Encoding_DefaultBinary = 682;

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint InsertReplaceEventDetails_Encoding_DefaultBinary = 928;

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint UpdateEventDetails_Encoding_DefaultBinary = 685;

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteRawModifiedDetails_Encoding_DefaultBinary = 688;

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteAtTimeDetails_Encoding_DefaultBinary = 691;

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteEventDetails_Encoding_DefaultBinary = 694;

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateResult_Encoding_DefaultBinary = 697;

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateEventResult_Encoding_DefaultBinary = 931;

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateRequest_Encoding_DefaultBinary = 700;

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryUpdateResponse_Encoding_DefaultBinary = 703;

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallMethodRequest_Encoding_DefaultBinary = 706;

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallMethodResult_Encoding_DefaultBinary = 709;

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallRequest_Encoding_DefaultBinary = 712;

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CallResponse_Encoding_DefaultBinary = 715;

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringFilter_Encoding_DefaultBinary = 721;

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataChangeFilter_Encoding_DefaultBinary = 724;

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFilter_Encoding_DefaultBinary = 727;

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateConfiguration_Encoding_DefaultBinary = 950;

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateFilter_Encoding_DefaultBinary = 730;

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringFilterResult_Encoding_DefaultBinary = 733;

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFilterResult_Encoding_DefaultBinary = 736;

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint AggregateFilterResult_Encoding_DefaultBinary = 739;

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoringParameters_Encoding_DefaultBinary = 742;

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemCreateRequest_Encoding_DefaultBinary = 745;

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemCreateResult_Encoding_DefaultBinary = 748;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateMonitoredItemsRequest_Encoding_DefaultBinary = 751;

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateMonitoredItemsResponse_Encoding_DefaultBinary = 754;

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemModifyRequest_Encoding_DefaultBinary = 757;

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemModifyResult_Encoding_DefaultBinary = 760;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifyMonitoredItemsRequest_Encoding_DefaultBinary = 763;

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifyMonitoredItemsResponse_Encoding_DefaultBinary = 766;

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetMonitoringModeRequest_Encoding_DefaultBinary = 769;

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetMonitoringModeResponse_Encoding_DefaultBinary = 772;

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetTriggeringRequest_Encoding_DefaultBinary = 775;

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetTriggeringResponse_Encoding_DefaultBinary = 778;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteMonitoredItemsRequest_Encoding_DefaultBinary = 781;

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteMonitoredItemsResponse_Encoding_DefaultBinary = 784;

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSubscriptionRequest_Encoding_DefaultBinary = 787;

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint CreateSubscriptionResponse_Encoding_DefaultBinary = 790;

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifySubscriptionRequest_Encoding_DefaultBinary = 793;

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModifySubscriptionResponse_Encoding_DefaultBinary = 796;

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetPublishingModeRequest_Encoding_DefaultBinary = 799;

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SetPublishingModeResponse_Encoding_DefaultBinary = 802;

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NotificationMessage_Encoding_DefaultBinary = 805;

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint NotificationData_Encoding_DefaultBinary = 947;

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DataChangeNotification_Encoding_DefaultBinary = 811;

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MonitoredItemNotification_Encoding_DefaultBinary = 808;

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventNotificationList_Encoding_DefaultBinary = 916;

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EventFieldList_Encoding_DefaultBinary = 919;

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint HistoryEventFieldList_Encoding_DefaultBinary = 922;

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint StatusChangeNotification_Encoding_DefaultBinary = 820;

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SubscriptionAcknowledgement_Encoding_DefaultBinary = 823;

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PublishRequest_Encoding_DefaultBinary = 826;

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PublishResponse_Encoding_DefaultBinary = 829;

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RepublishRequest_Encoding_DefaultBinary = 832;

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RepublishResponse_Encoding_DefaultBinary = 835;

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferResult_Encoding_DefaultBinary = 838;

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferSubscriptionsRequest_Encoding_DefaultBinary = 841;

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint TransferSubscriptionsResponse_Encoding_DefaultBinary = 844;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteSubscriptionsRequest_Encoding_DefaultBinary = 847;

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint DeleteSubscriptionsResponse_Encoding_DefaultBinary = 850;

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RedundantServerDataType_Encoding_DefaultBinary = 855;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = 858;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = 861;

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServerStatusDataType_Encoding_DefaultBinary = 864;

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SessionDiagnosticsDataType_Encoding_DefaultBinary = 867;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = 870;

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ServiceCounterDataType_Encoding_DefaultBinary = 873;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = 876;

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ModelChangeStructureDataType_Encoding_DefaultBinary = 879;

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SemanticChangeStructureDataType_Encoding_DefaultBinary = 899;

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Range_Encoding_DefaultBinary = 886;

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint EUInformation_Encoding_DefaultBinary = 889;

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint Annotation_Encoding_DefaultBinary = 893;

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ProgramDiagnosticDataType_Encoding_DefaultBinary = 896;
    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the BaseObjectType ObjectType.
        /// </summary>
        public const uint BaseObjectType = 58;

        /// <summary>
        /// The identifier for the FolderType ObjectType.
        /// </summary>
        public const uint FolderType = 61;

        /// <summary>
        /// The identifier for the DataTypeSystemType ObjectType.
        /// </summary>
        public const uint DataTypeSystemType = 75;

        /// <summary>
        /// The identifier for the DataTypeEncodingType ObjectType.
        /// </summary>
        public const uint DataTypeEncodingType = 76;

        /// <summary>
        /// The identifier for the ModellingRuleType ObjectType.
        /// </summary>
        public const uint ModellingRuleType = 77;

        /// <summary>
        /// The identifier for the ServerType ObjectType.
        /// </summary>
        public const uint ServerType = 2004;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType ObjectType.
        /// </summary>
        public const uint ServerCapabilitiesType = 2013;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType ObjectType.
        /// </summary>
        public const uint ServerDiagnosticsType = 2020;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType ObjectType.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType = 2026;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType ObjectType.
        /// </summary>
        public const uint SessionDiagnosticsObjectType = 2029;

        /// <summary>
        /// The identifier for the VendorServerInfoType ObjectType.
        /// </summary>
        public const uint VendorServerInfoType = 2033;

        /// <summary>
        /// The identifier for the ServerRedundancyType ObjectType.
        /// </summary>
        public const uint ServerRedundancyType = 2034;

        /// <summary>
        /// The identifier for the TransparentRedundancyType ObjectType.
        /// </summary>
        public const uint TransparentRedundancyType = 2036;

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType ObjectType.
        /// </summary>
        public const uint NonTransparentRedundancyType = 2039;

        /// <summary>
        /// The identifier for the BaseEventType ObjectType.
        /// </summary>
        public const uint BaseEventType = 2041;

        /// <summary>
        /// The identifier for the EventQueueOverflowEventType ObjectType.
        /// </summary>
        public const uint EventQueueOverflowEventType = 3035;

        /// <summary>
        /// The identifier for the AuditEventType ObjectType.
        /// </summary>
        public const uint AuditEventType = 2052;

        /// <summary>
        /// The identifier for the AuditSecurityEventType ObjectType.
        /// </summary>
        public const uint AuditSecurityEventType = 2058;

        /// <summary>
        /// The identifier for the AuditChannelEventType ObjectType.
        /// </summary>
        public const uint AuditChannelEventType = 2059;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType ObjectType.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType = 2060;

        /// <summary>
        /// The identifier for the AuditSessionEventType ObjectType.
        /// </summary>
        public const uint AuditSessionEventType = 2069;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType ObjectType.
        /// </summary>
        public const uint AuditCreateSessionEventType = 2071;

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditUrlMismatchEventType = 2748;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType ObjectType.
        /// </summary>
        public const uint AuditActivateSessionEventType = 2075;

        /// <summary>
        /// The identifier for the AuditCancelEventType ObjectType.
        /// </summary>
        public const uint AuditCancelEventType = 2078;

        /// <summary>
        /// The identifier for the AuditCertificateEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateEventType = 2080;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType = 2082;

        /// <summary>
        /// The identifier for the AuditCertificateExpiredEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateExpiredEventType = 2085;

        /// <summary>
        /// The identifier for the AuditCertificateInvalidEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateInvalidEventType = 2086;

        /// <summary>
        /// The identifier for the AuditCertificateUntrustedEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateUntrustedEventType = 2087;

        /// <summary>
        /// The identifier for the AuditCertificateRevokedEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateRevokedEventType = 2088;

        /// <summary>
        /// The identifier for the AuditCertificateMismatchEventType ObjectType.
        /// </summary>
        public const uint AuditCertificateMismatchEventType = 2089;

        /// <summary>
        /// The identifier for the AuditNodeManagementEventType ObjectType.
        /// </summary>
        public const uint AuditNodeManagementEventType = 2090;

        /// <summary>
        /// The identifier for the AuditAddNodesEventType ObjectType.
        /// </summary>
        public const uint AuditAddNodesEventType = 2091;

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType ObjectType.
        /// </summary>
        public const uint AuditDeleteNodesEventType = 2093;

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType ObjectType.
        /// </summary>
        public const uint AuditAddReferencesEventType = 2095;

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType ObjectType.
        /// </summary>
        public const uint AuditDeleteReferencesEventType = 2097;

        /// <summary>
        /// The identifier for the AuditUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateEventType = 2099;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditWriteUpdateEventType = 2100;

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryUpdateEventType = 2104;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType = 2999;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType = 3006;

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryDeleteEventType = 3012;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType = 3014;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType = 3019;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType ObjectType.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType = 3022;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateMethodEventType = 2127;

        /// <summary>
        /// The identifier for the SystemEventType ObjectType.
        /// </summary>
        public const uint SystemEventType = 2130;

        /// <summary>
        /// The identifier for the DeviceFailureEventType ObjectType.
        /// </summary>
        public const uint DeviceFailureEventType = 2131;

        /// <summary>
        /// The identifier for the BaseModelChangeEventType ObjectType.
        /// </summary>
        public const uint BaseModelChangeEventType = 2132;

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType ObjectType.
        /// </summary>
        public const uint GeneralModelChangeEventType = 2133;

        /// <summary>
        /// The identifier for the SemanticChangeEventType ObjectType.
        /// </summary>
        public const uint SemanticChangeEventType = 2738;

        /// <summary>
        /// The identifier for the StateMachineType ObjectType.
        /// </summary>
        public const uint StateMachineType = 2299;

        /// <summary>
        /// The identifier for the FiniteStateMachineType ObjectType.
        /// </summary>
        public const uint FiniteStateMachineType = 2771;

        /// <summary>
        /// The identifier for the StateType ObjectType.
        /// </summary>
        public const uint StateType = 2307;

        /// <summary>
        /// The identifier for the InitialStateType ObjectType.
        /// </summary>
        public const uint InitialStateType = 2309;

        /// <summary>
        /// The identifier for the TransitionType ObjectType.
        /// </summary>
        public const uint TransitionType = 2310;

        /// <summary>
        /// The identifier for the TransitionEventType ObjectType.
        /// </summary>
        public const uint TransitionEventType = 2311;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType ObjectType.
        /// </summary>
        public const uint AuditUpdateStateEventType = 2315;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType ObjectType.
        /// </summary>
        public const uint HistoricalConfigurationType = 2318;

        /// <summary>
        /// The identifier for the HistoricalEventConfigurationType ObjectType.
        /// </summary>
        public const uint HistoricalEventConfigurationType = 2329;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType ObjectType.
        /// </summary>
        public const uint HistoryServerCapabilitiesType = 2330;

        /// <summary>
        /// The identifier for the AggregateFunctionType ObjectType.
        /// </summary>
        public const uint AggregateFunctionType = 2340;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType ObjectType.
        /// </summary>
        public const uint ProgramTransitionEventType = 2378;

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType ObjectType.
        /// </summary>
        public const uint ProgramTransitionAuditEventType = 3806;

        /// <summary>
        /// The identifier for the ProgramStateMachineType ObjectType.
        /// </summary>
        public const uint ProgramStateMachineType = 2391;

        /// <summary>
        /// The identifier for the BaseConditionType ObjectType.
        /// </summary>
        public const uint BaseConditionType = 2779;

        /// <summary>
        /// The identifier for the ConditionType ObjectType.
        /// </summary>
        public const uint ConditionType = 2782;

        /// <summary>
        /// The identifier for the ConditionGroupType ObjectType.
        /// </summary>
        public const uint ConditionGroupType = 2786;

        /// <summary>
        /// The identifier for the RefreshStartEventType ObjectType.
        /// </summary>
        public const uint RefreshStartEventType = 2787;

        /// <summary>
        /// The identifier for the RefreshEndEventType ObjectType.
        /// </summary>
        public const uint RefreshEndEventType = 2788;

        /// <summary>
        /// The identifier for the RefreshRequiredEventType ObjectType.
        /// </summary>
        public const uint RefreshRequiredEventType = 2789;

        /// <summary>
        /// The identifier for the AuditConditionEventType ObjectType.
        /// </summary>
        public const uint AuditConditionEventType = 2790;

        /// <summary>
        /// The identifier for the BaseConditionStateMachineType ObjectType.
        /// </summary>
        public const uint BaseConditionStateMachineType = 2791;

        /// <summary>
        /// The identifier for the ConditionStateMachineType ObjectType.
        /// </summary>
        public const uint ConditionStateMachineType = 2792;

        /// <summary>
        /// The identifier for the AuditConditionEnableEventType ObjectType.
        /// </summary>
        public const uint AuditConditionEnableEventType = 2803;

        /// <summary>
        /// The identifier for the StatusStateMachineType ObjectType.
        /// </summary>
        public const uint StatusStateMachineType = 2804;

        /// <summary>
        /// The identifier for the SeverityStateMachineType ObjectType.
        /// </summary>
        public const uint SeverityStateMachineType = 2808;

        /// <summary>
        /// The identifier for the CommentStateMachineType ObjectType.
        /// </summary>
        public const uint CommentStateMachineType = 2812;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType ObjectType.
        /// </summary>
        public const uint CommentPreviousStateMachineType = 2820;

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType ObjectType.
        /// </summary>
        public const uint AuditConditionCommentEventType = 2829;

        /// <summary>
        /// The identifier for the DialogConditionType ObjectType.
        /// </summary>
        public const uint DialogConditionType = 2830;

        /// <summary>
        /// The identifier for the OkDialogConditionType ObjectType.
        /// </summary>
        public const uint OkDialogConditionType = 2832;

        /// <summary>
        /// The identifier for the OkDialogStateMachineType ObjectType.
        /// </summary>
        public const uint OkDialogStateMachineType = 2834;

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType ObjectType.
        /// </summary>
        public const uint OkDialogSubStateMachineType = 2836;

        /// <summary>
        /// The identifier for the AuditConditionDialogEventType ObjectType.
        /// </summary>
        public const uint AuditConditionDialogEventType = 2844;

        /// <summary>
        /// The identifier for the OkCancelDialogConditionType ObjectType.
        /// </summary>
        public const uint OkCancelDialogConditionType = 2845;

        /// <summary>
        /// The identifier for the OkCancelDialogStateMachineType ObjectType.
        /// </summary>
        public const uint OkCancelDialogStateMachineType = 2847;

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType ObjectType.
        /// </summary>
        public const uint OkCancelDialogSubStateMachineType = 2849;

        /// <summary>
        /// The identifier for the YesNoCancelDialogConditionType ObjectType.
        /// </summary>
        public const uint YesNoCancelDialogConditionType = 2861;

        /// <summary>
        /// The identifier for the YesNoCancelDialogStateMachineType ObjectType.
        /// </summary>
        public const uint YesNoCancelDialogStateMachineType = 2863;

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType ObjectType.
        /// </summary>
        public const uint YesNoCancelDialogSubStateMachineType = 2865;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType ObjectType.
        /// </summary>
        public const uint AcknowledgeableConditionType = 2881;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType ObjectType.
        /// </summary>
        public const uint AcknowledgeableConditionStateMachineType = 2886;

        /// <summary>
        /// The identifier for the AuditAcknowledgeEventType ObjectType.
        /// </summary>
        public const uint AuditAcknowledgeEventType = 2891;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType ObjectType.
        /// </summary>
        public const uint AcknowledgeStateMachineType = 2892;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType ObjectType.
        /// </summary>
        public const uint ConfirmedStateMachineType = 2900;

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType ObjectType.
        /// </summary>
        public const uint AckPreviousStateMachineType = 2909;

        /// <summary>
        /// The identifier for the AlarmConditionType ObjectType.
        /// </summary>
        public const uint AlarmConditionType = 2915;

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType ObjectType.
        /// </summary>
        public const uint AlarmConditionStateMachineType = 2919;

        /// <summary>
        /// The identifier for the AlarmStateMachineType ObjectType.
        /// </summary>
        public const uint AlarmStateMachineType = 2923;

        /// <summary>
        /// The identifier for the ShelvedAuditEventType ObjectType.
        /// </summary>
        public const uint ShelvedAuditEventType = 2928;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType ObjectType.
        /// </summary>
        public const uint ShelvedStateMachineType = 2929;

        /// <summary>
        /// The identifier for the SuppressedStateMachineType ObjectType.
        /// </summary>
        public const uint SuppressedStateMachineType = 2950;

        /// <summary>
        /// The identifier for the ProcessAlarmType ObjectType.
        /// </summary>
        public const uint ProcessAlarmType = 2955;

        /// <summary>
        /// The identifier for the LevelAlarmType ObjectType.
        /// </summary>
        public const uint LevelAlarmType = 2956;

        /// <summary>
        /// The identifier for the SingleLevelAlarmType ObjectType.
        /// </summary>
        public const uint SingleLevelAlarmType = 2957;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType ObjectType.
        /// </summary>
        public const uint MultiLevelAlarmType = 2959;

        /// <summary>
        /// The identifier for the MultiLevelAlarmConditionStateMachineType ObjectType.
        /// </summary>
        public const uint MultiLevelAlarmConditionStateMachineType = 2965;

        /// <summary>
        /// The identifier for the MultiLevelAlarmStateMachineType ObjectType.
        /// </summary>
        public const uint MultiLevelAlarmStateMachineType = 2967;

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType ObjectType.
        /// </summary>
        public const uint MultiLevelAlarmActiveSubStateMachineType = 2969;
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the References ReferenceType.
        /// </summary>
        public const uint References = 31;

        /// <summary>
        /// The identifier for the NonHierarchicalReferences ReferenceType.
        /// </summary>
        public const uint NonHierarchicalReferences = 32;

        /// <summary>
        /// The identifier for the HierarchicalReferences ReferenceType.
        /// </summary>
        public const uint HierarchicalReferences = 33;

        /// <summary>
        /// The identifier for the HasChild ReferenceType.
        /// </summary>
        public const uint HasChild = 34;

        /// <summary>
        /// The identifier for the Organizes ReferenceType.
        /// </summary>
        public const uint Organizes = 35;

        /// <summary>
        /// The identifier for the HasEventSource ReferenceType.
        /// </summary>
        public const uint HasEventSource = 36;

        /// <summary>
        /// The identifier for the HasModelParent ReferenceType.
        /// </summary>
        public const uint HasModelParent = 50;

        /// <summary>
        /// The identifier for the HasModellingRule ReferenceType.
        /// </summary>
        public const uint HasModellingRule = 37;

        /// <summary>
        /// The identifier for the HasEncoding ReferenceType.
        /// </summary>
        public const uint HasEncoding = 38;

        /// <summary>
        /// The identifier for the HasDescription ReferenceType.
        /// </summary>
        public const uint HasDescription = 39;

        /// <summary>
        /// The identifier for the HasTypeDefinition ReferenceType.
        /// </summary>
        public const uint HasTypeDefinition = 40;

        /// <summary>
        /// The identifier for the GeneratesEvent ReferenceType.
        /// </summary>
        public const uint GeneratesEvent = 41;

        /// <summary>
        /// The identifier for the AlwaysGeneratesEvent ReferenceType.
        /// </summary>
        public const uint AlwaysGeneratesEvent = 3065;

        /// <summary>
        /// The identifier for the HasEventHistory ReferenceType.
        /// </summary>
        public const uint HasEventHistory = 118;

        /// <summary>
        /// The identifier for the Aggregates ReferenceType.
        /// </summary>
        public const uint Aggregates = 44;

        /// <summary>
        /// The identifier for the HasSubtype ReferenceType.
        /// </summary>
        public const uint HasSubtype = 45;

        /// <summary>
        /// The identifier for the HasProperty ReferenceType.
        /// </summary>
        public const uint HasProperty = 46;

        /// <summary>
        /// The identifier for the HasComponent ReferenceType.
        /// </summary>
        public const uint HasComponent = 47;

        /// <summary>
        /// The identifier for the HasNotifier ReferenceType.
        /// </summary>
        public const uint HasNotifier = 48;

        /// <summary>
        /// The identifier for the HasOrderedComponent ReferenceType.
        /// </summary>
        public const uint HasOrderedComponent = 49;

        /// <summary>
        /// The identifier for the FromState ReferenceType.
        /// </summary>
        public const uint FromState = 51;

        /// <summary>
        /// The identifier for the ToState ReferenceType.
        /// </summary>
        public const uint ToState = 52;

        /// <summary>
        /// The identifier for the HasCause ReferenceType.
        /// </summary>
        public const uint HasCause = 53;

        /// <summary>
        /// The identifier for the HasEffect ReferenceType.
        /// </summary>
        public const uint HasEffect = 54;

        /// <summary>
        /// The identifier for the HasSubStateMachine ReferenceType.
        /// </summary>
        public const uint HasSubStateMachine = 117;

        /// <summary>
        /// The identifier for the HasHistoricalConfiguration ReferenceType.
        /// </summary>
        public const uint HasHistoricalConfiguration = 56;

        /// <summary>
        /// The identifier for the HasHistoricalEventConfiguration ReferenceType.
        /// </summary>
        public const uint HasHistoricalEventConfiguration = 57;
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the Enumeration_EnumStrings Variable.
        /// </summary>
        public const uint Enumeration_EnumStrings = 3064;

        /// <summary>
        /// The identifier for the BaseDataVariableType_EnumStrings Variable.
        /// </summary>
        public const uint BaseDataVariableType_EnumStrings = 103;

        /// <summary>
        /// The identifier for the BaseDataVariableType_TimeZone Variable.
        /// </summary>
        public const uint BaseDataVariableType_TimeZone = 101;

        /// <summary>
        /// The identifier for the BaseDataVariableType_DaylightSavingTime Variable.
        /// </summary>
        public const uint BaseDataVariableType_DaylightSavingTime = 102;

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DataTypeVersion Variable.
        /// </summary>
        public const uint DataTypeDescriptionType_DataTypeVersion = 104;

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DictionaryFragment Variable.
        /// </summary>
        public const uint DataTypeDescriptionType_DictionaryFragment = 105;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_DataTypeVersion Variable.
        /// </summary>
        public const uint DataTypeDictionaryType_DataTypeVersion = 106;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_NamespaceUri Variable.
        /// </summary>
        public const uint DataTypeDictionaryType_NamespaceUri = 107;

        /// <summary>
        /// The identifier for the NamingRuleType_EnumStrings Variable.
        /// </summary>
        public const uint NamingRuleType_EnumStrings = 3066;

        /// <summary>
        /// The identifier for the ModellingRuleType_NamingRule Variable.
        /// </summary>
        public const uint ModellingRuleType_NamingRule = 111;

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_Mandatory_NamingRule = 112;

        /// <summary>
        /// The identifier for the ModellingRule_Optional_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_Optional_NamingRule = 113;

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_ExposesItsArray_NamingRule = 114;

        /// <summary>
        /// The identifier for the ModellingRule_CardinalityRestriction_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_CardinalityRestriction_NamingRule = 115;

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared_NamingRule Variable.
        /// </summary>
        public const uint ModellingRule_MandatoryShared_NamingRule = 116;

        /// <summary>
        /// The identifier for the Icon Variable.
        /// </summary>
        public const uint Icon = 3067;

        /// <summary>
        /// The identifier for the NodeVersion Variable.
        /// </summary>
        public const uint NodeVersion = 3068;

        /// <summary>
        /// The identifier for the LocalTime Variable.
        /// </summary>
        public const uint LocalTime = 3069;

        /// <summary>
        /// The identifier for the AllowNulls Variable.
        /// </summary>
        public const uint AllowNulls = 3070;

        /// <summary>
        /// The identifier for the EnumValues Variable.
        /// </summary>
        public const uint EnumValues = 3071;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint InputArguments = 3072;

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public const uint OutputArguments = 3073;

        /// <summary>
        /// The identifier for the ServerType_ServerArray Variable.
        /// </summary>
        public const uint ServerType_ServerArray = 2005;

        /// <summary>
        /// The identifier for the ServerType_NamespaceArray Variable.
        /// </summary>
        public const uint ServerType_NamespaceArray = 2006;

        /// <summary>
        /// The identifier for the ServerType_ServerStatus Variable.
        /// </summary>
        public const uint ServerType_ServerStatus = 2007;

        /// <summary>
        /// The identifier for the ServerType_ServiceLevel Variable.
        /// </summary>
        public const uint ServerType_ServiceLevel = 2008;

        /// <summary>
        /// The identifier for the ServerType_Auditing Variable.
        /// </summary>
        public const uint ServerType_Auditing = 2742;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ServerProfileArray Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_ServerProfileArray = 2014;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_LocaleIdArray Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_LocaleIdArray = 2016;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MinSupportedSampleRate Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MinSupportedSampleRate = 2017;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxBrowseContinuationPoints = 2732;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxQueryContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxQueryContinuationPoints = 2733;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_MaxHistoryContinuationPoints = 2734;

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_SoftwareCertificates Variable.
        /// </summary>
        public const uint ServerCapabilitiesType_SoftwareCertificates = 3049;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_ServerDiagnosticsSummary = 2021;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = 2022;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_SubscriptionDiagnosticsArray = 2023;

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_EnabledFlag Variable.
        /// </summary>
        public const uint ServerDiagnosticsType_EnabledFlag = 2025;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = 2027;

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = 2028;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionDiagnostics = 2030;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SessionSecurityDiagnostics = 2031;

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = 2032;

        /// <summary>
        /// The identifier for the ServerRedundancyType_RedundancySupport Variable.
        /// </summary>
        public const uint ServerRedundancyType_RedundancySupport = 2035;

        /// <summary>
        /// The identifier for the TransparentRedundancyType_CurrentServerId Variable.
        /// </summary>
        public const uint TransparentRedundancyType_CurrentServerId = 2037;

        /// <summary>
        /// The identifier for the TransparentRedundancyType_RedundantServerArray Variable.
        /// </summary>
        public const uint TransparentRedundancyType_RedundantServerArray = 2038;

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType_ServerUriArray Variable.
        /// </summary>
        public const uint NonTransparentRedundancyType_ServerUriArray = 2040;

        /// <summary>
        /// The identifier for the BaseEventType_EventId Variable.
        /// </summary>
        public const uint BaseEventType_EventId = 2042;

        /// <summary>
        /// The identifier for the BaseEventType_EventType Variable.
        /// </summary>
        public const uint BaseEventType_EventType = 2043;

        /// <summary>
        /// The identifier for the BaseEventType_SourceNode Variable.
        /// </summary>
        public const uint BaseEventType_SourceNode = 2044;

        /// <summary>
        /// The identifier for the BaseEventType_SourceName Variable.
        /// </summary>
        public const uint BaseEventType_SourceName = 2045;

        /// <summary>
        /// The identifier for the BaseEventType_Time Variable.
        /// </summary>
        public const uint BaseEventType_Time = 2046;

        /// <summary>
        /// The identifier for the BaseEventType_ReceiveTime Variable.
        /// </summary>
        public const uint BaseEventType_ReceiveTime = 2047;

        /// <summary>
        /// The identifier for the BaseEventType_LocalTime Variable.
        /// </summary>
        public const uint BaseEventType_LocalTime = 3190;

        /// <summary>
        /// The identifier for the BaseEventType_Message Variable.
        /// </summary>
        public const uint BaseEventType_Message = 2050;

        /// <summary>
        /// The identifier for the BaseEventType_Severity Variable.
        /// </summary>
        public const uint BaseEventType_Severity = 2051;

        /// <summary>
        /// The identifier for the BaseEventType_TimeZone Variable.
        /// </summary>
        public const uint BaseEventType_TimeZone = 2048;

        /// <summary>
        /// The identifier for the BaseEventType_DaylightSavingTime Variable.
        /// </summary>
        public const uint BaseEventType_DaylightSavingTime = 2049;

        /// <summary>
        /// The identifier for the AuditEventType_ActionTimeStamp Variable.
        /// </summary>
        public const uint AuditEventType_ActionTimeStamp = 2053;

        /// <summary>
        /// The identifier for the AuditEventType_Status Variable.
        /// </summary>
        public const uint AuditEventType_Status = 2054;

        /// <summary>
        /// The identifier for the AuditEventType_ServerId Variable.
        /// </summary>
        public const uint AuditEventType_ServerId = 2055;

        /// <summary>
        /// The identifier for the AuditEventType_ClientAuditEntryId Variable.
        /// </summary>
        public const uint AuditEventType_ClientAuditEntryId = 2056;

        /// <summary>
        /// The identifier for the AuditEventType_ClientUserId Variable.
        /// </summary>
        public const uint AuditEventType_ClientUserId = 2057;

        /// <summary>
        /// The identifier for the AuditChannelEventType_SecureChannelId Variable.
        /// </summary>
        public const uint AuditChannelEventType_SecureChannelId = 2745;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificate Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_ClientCertificate = 2061;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_ClientCertificateThumbprint = 2746;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestType Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_RequestType = 2062;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityPolicyUri Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_SecurityPolicyUri = 2063;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityMode Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_SecurityMode = 2065;

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestedLifetime Variable.
        /// </summary>
        public const uint AuditOpenSecureChannelEventType_RequestedLifetime = 2066;

        /// <summary>
        /// The identifier for the AuditSessionEventType_SessionId Variable.
        /// </summary>
        public const uint AuditSessionEventType_SessionId = 2070;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_SecureChannelId = 2072;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificate Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_ClientCertificate = 2073;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_ClientCertificateThumbprint = 2747;

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_RevisedSessionTimeout Variable.
        /// </summary>
        public const uint AuditCreateSessionEventType_RevisedSessionTimeout = 2074;

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType_EndpointUrl Variable.
        /// </summary>
        public const uint AuditUrlMismatchEventType_EndpointUrl = 2749;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_ClientSoftwareCertificates Variable.
        /// </summary>
        public const uint AuditActivateSessionEventType_ClientSoftwareCertificates = 2076;

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_UserIdentityToken Variable.
        /// </summary>
        public const uint AuditActivateSessionEventType_UserIdentityToken = 2077;

        /// <summary>
        /// The identifier for the AuditCancelEventType_RequestHandle Variable.
        /// </summary>
        public const uint AuditCancelEventType_RequestHandle = 2079;

        /// <summary>
        /// The identifier for the AuditCertificateEventType_Certificate Variable.
        /// </summary>
        public const uint AuditCertificateEventType_Certificate = 2081;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidHostname Variable.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType_InvalidHostname = 2083;

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidUri Variable.
        /// </summary>
        public const uint AuditCertificateDataMismatchEventType_InvalidUri = 2084;

        /// <summary>
        /// The identifier for the AuditAddNodesEventType_NodesToAdd Variable.
        /// </summary>
        public const uint AuditAddNodesEventType_NodesToAdd = 2092;

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType_NodesToDelete Variable.
        /// </summary>
        public const uint AuditDeleteNodesEventType_NodesToDelete = 2094;

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType_ReferencesToAdd Variable.
        /// </summary>
        public const uint AuditAddReferencesEventType_ReferencesToAdd = 2096;

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType_ReferencesToDelete Variable.
        /// </summary>
        public const uint AuditDeleteReferencesEventType_ReferencesToDelete = 2098;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_AttributeId Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_AttributeId = 2750;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_IndexRange Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_IndexRange = 2101;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_OldValue Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_OldValue = 2102;

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_NewValue Variable.
        /// </summary>
        public const uint AuditWriteUpdateEventType_NewValue = 2103;

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType_ParameterDataTypeId Variable.
        /// </summary>
        public const uint AuditHistoryUpdateEventType_ParameterDataTypeId = 2751;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_UpdatedNode = 3025;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_PerformInsertReplace = 3028;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_Filter Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_Filter = 3003;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_NewValues Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_NewValues = 3029;

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryEventUpdateEventType_OldValues = 3030;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_UpdatedNode = 3026;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_PerformInsertReplace = 3031;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_NewValues Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_NewValues = 3032;

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryValueUpdateEventType_OldValues = 3033;

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType_UpdatedNode Variable.
        /// </summary>
        public const uint AuditHistoryDeleteEventType_UpdatedNode = 3027;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_IsDeleteModified Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_IsDeleteModified = 3015;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_StartTime Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_StartTime = 3016;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_EndTime Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_EndTime = 3017;

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryRawModifyDeleteEventType_OldValues = 3034;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_ReqTimes Variable.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType_ReqTimes = 3020;

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryAtTimeDeleteEventType_OldValues = 3021;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_EventIds Variable.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType_EventIds = 3023;

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_OldValues Variable.
        /// </summary>
        public const uint AuditHistoryEventDeleteEventType_OldValues = 3024;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_MethodId Variable.
        /// </summary>
        public const uint AuditUpdateMethodEventType_MethodId = 2128;

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_InputArguments Variable.
        /// </summary>
        public const uint AuditUpdateMethodEventType_InputArguments = 2129;

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType_Changes Variable.
        /// </summary>
        public const uint GeneralModelChangeEventType_Changes = 2134;

        /// <summary>
        /// The identifier for the SemanticChangeEventType_Changes Variable.
        /// </summary>
        public const uint SemanticChangeEventType_Changes = 2739;

        /// <summary>
        /// The identifier for the ServerStatusType_StartTime Variable.
        /// </summary>
        public const uint ServerStatusType_StartTime = 2139;

        /// <summary>
        /// The identifier for the ServerStatusType_CurrentTime Variable.
        /// </summary>
        public const uint ServerStatusType_CurrentTime = 2140;

        /// <summary>
        /// The identifier for the ServerStatusType_State Variable.
        /// </summary>
        public const uint ServerStatusType_State = 2141;

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo Variable.
        /// </summary>
        public const uint ServerStatusType_BuildInfo = 2142;

        /// <summary>
        /// The identifier for the ServerStatusType_SecondsTillShutdown Variable.
        /// </summary>
        public const uint ServerStatusType_SecondsTillShutdown = 2752;

        /// <summary>
        /// The identifier for the ServerStatusType_ShutdownReason Variable.
        /// </summary>
        public const uint ServerStatusType_ShutdownReason = 2753;

        /// <summary>
        /// The identifier for the BuildInfoType_ProductUri Variable.
        /// </summary>
        public const uint BuildInfoType_ProductUri = 3052;

        /// <summary>
        /// The identifier for the BuildInfoType_ManufacturerName Variable.
        /// </summary>
        public const uint BuildInfoType_ManufacturerName = 3053;

        /// <summary>
        /// The identifier for the BuildInfoType_ProductName Variable.
        /// </summary>
        public const uint BuildInfoType_ProductName = 3054;

        /// <summary>
        /// The identifier for the BuildInfoType_SoftwareVersion Variable.
        /// </summary>
        public const uint BuildInfoType_SoftwareVersion = 3055;

        /// <summary>
        /// The identifier for the BuildInfoType_BuildNumber Variable.
        /// </summary>
        public const uint BuildInfoType_BuildNumber = 3056;

        /// <summary>
        /// The identifier for the BuildInfoType_BuildDate Variable.
        /// </summary>
        public const uint BuildInfoType_BuildDate = 3057;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_ServerViewCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_ServerViewCount = 2151;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CurrentSessionCount = 2152;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CumulatedSessionCount = 2153;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = 2154;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedSessionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_RejectedSessionCount = 2155;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionTimeoutCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SessionTimeoutCount = 2156;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionAbortCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SessionAbortCount = 2157;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CurrentSubscriptionCount = 2160;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = 2161;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_PublishingIntervalCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_PublishingIntervalCount = 2159;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = 2162;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedRequestsCount Variable.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType_RejectedRequestsCount = 2163;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SamplingInterval Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_SamplingInterval = 2166;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_MonitoredItemCount = 8885;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MaxMonitoredItemCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_MaxMonitoredItemCount = 8886;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType_DisabledMonitoredItemCount = 8887;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SessionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_SessionId = 2173;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SubscriptionId Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_SubscriptionId = 2174;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_Priority Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_Priority = 2175;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingInterval Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishingInterval = 2176;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxKeepAliveCount = 2177;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxLifetimeCount = 8888;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxNotificationsPerPublish Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MaxNotificationsPerPublish = 2179;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingEnabled Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishingEnabled = 2180;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_ModifyCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_ModifyCount = 2181;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EnableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EnableCount = 2182;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisableCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DisableCount = 2183;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishRequestCount = 2184;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishMessageRequestCount = 2185;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_RepublishMessageCount = 2186;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferRequestCount = 2187;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToAltClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferredToAltClientCount = 2188;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToSameClientCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_TransferredToSameClientCount = 2189;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_PublishRequestCount = 2190;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DataChangeNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DataChangeNotificationsCount = 2191;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventNotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EventNotificationsCount = 2998;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NotificationsCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_NotificationsCount = 2193;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_LatePublishRequestCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_LatePublishRequestCount = 8889;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentKeepAliveCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_CurrentKeepAliveCount = 8890;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentLifetimeCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_CurrentLifetimeCount = 8891;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_UnacknowledgedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_UnacknowledgedMessageCount = 8892;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DiscardedMessageCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DiscardedMessageCount = 8893;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MonitoredItemCount = 8894;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_DisabledMonitoredItemCount = 8895;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = 8896;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NextSequenceNumber Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_NextSequenceNumber = 8897;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventQueueOverFlowCount Variable.
        /// </summary>
        public const uint SubscriptionDiagnosticsType_EventQueueOverFlowCount = 8902;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionId Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SessionId = 2198;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionName Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SessionName = 2199;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientDescription Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientDescription = 2200;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ServerUri Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ServerUri = 2201;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_EndpointUrl Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_EndpointUrl = 2202;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_LocaleIds Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_LocaleIds = 2203;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ActualSessionTimeout Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ActualSessionTimeout = 2204;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_MaxResponseMessageSize Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_MaxResponseMessageSize = 3050;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientConnectionTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientConnectionTime = 2205;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientLastContactTime Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ClientLastContactTime = 2206;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentSubscriptionsCount = 2207;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = 2208;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = 2209;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TotalRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TotalRequestCount = 8900;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnauthorizedRequestCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_UnauthorizedRequestCount = 8901;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ReadCount = 2217;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryReadCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_HistoryReadCount = 2218;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_WriteCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_WriteCount = 2219;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryUpdateCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_HistoryUpdateCount = 2220;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CallCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CallCount = 2221;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CreateMonitoredItemsCount = 2222;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = 2223;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetMonitoringModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetMonitoringModeCount = 2224;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetTriggeringCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetTriggeringCount = 2225;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = 2226;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateSubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_CreateSubscriptionCount = 2227;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifySubscriptionCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_ModifySubscriptionCount = 2228;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetPublishingModeCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_SetPublishingModeCount = 2229;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_PublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_PublishCount = 2230;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RepublishCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_RepublishCount = 2231;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TransferSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TransferSubscriptionsCount = 2232;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteSubscriptionsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteSubscriptionsCount = 2233;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_AddNodesCount = 2234;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_AddReferencesCount = 2235;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteNodesCount = 2236;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteReferencesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_DeleteReferencesCount = 2237;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_BrowseCount = 2238;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_BrowseNextCount = 2239;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = 2240;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryFirstCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_QueryFirstCount = 2241;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryNextCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_QueryNextCount = 2242;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RegisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_RegisterNodesCount = 2730;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnregisterNodesCount Variable.
        /// </summary>
        public const uint SessionDiagnosticsVariableType_UnregisterNodesCount = 2731;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SessionId Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SessionId = 2245;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdOfSession Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientUserIdOfSession = 2246;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdHistory Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientUserIdHistory = 2247;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_AuthenticationMechanism Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_AuthenticationMechanism = 2248;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_Encoding Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_Encoding = 2249;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_TransportProtocol Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_TransportProtocol = 2250;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityMode Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SecurityMode = 2251;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityPolicyUri Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_SecurityPolicyUri = 2252;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientCertificate Variable.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType_ClientCertificate = 3058;

        /// <summary>
        /// The identifier for the Server_ServerArray Variable.
        /// </summary>
        public const uint Server_ServerArray = 2254;

        /// <summary>
        /// The identifier for the Server_NamespaceArray Variable.
        /// </summary>
        public const uint Server_NamespaceArray = 2255;

        /// <summary>
        /// The identifier for the Server_ServerStatus Variable.
        /// </summary>
        public const uint Server_ServerStatus = 2256;

        /// <summary>
        /// The identifier for the Server_ServerStatus_StartTime Variable.
        /// </summary>
        public const uint Server_ServerStatus_StartTime = 2257;

        /// <summary>
        /// The identifier for the Server_ServerStatus_CurrentTime Variable.
        /// </summary>
        public const uint Server_ServerStatus_CurrentTime = 2258;

        /// <summary>
        /// The identifier for the Server_ServerStatus_State Variable.
        /// </summary>
        public const uint Server_ServerStatus_State = 2259;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo = 2260;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ProductUri = 2262;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ManufacturerName = 2263;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_ProductName = 2261;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_SoftwareVersion = 2264;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_BuildNumber = 2265;

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public const uint Server_ServerStatus_BuildInfo_BuildDate = 2266;

        /// <summary>
        /// The identifier for the Server_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public const uint Server_ServerStatus_SecondsTillShutdown = 2992;

        /// <summary>
        /// The identifier for the Server_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public const uint Server_ServerStatus_ShutdownReason = 2993;

        /// <summary>
        /// The identifier for the Server_ServiceLevel Variable.
        /// </summary>
        public const uint Server_ServiceLevel = 2267;

        /// <summary>
        /// The identifier for the Server_Auditing Variable.
        /// </summary>
        public const uint Server_Auditing = 2994;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_ServerProfileArray = 2269;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_LocaleIdArray = 2271;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MinSupportedSampleRate = 2272;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxBrowseContinuationPoints = 2735;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxQueryContinuationPoints = 2736;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_MaxHistoryContinuationPoints = 2737;

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public const uint Server_ServerCapabilities_SoftwareCertificates = 3704;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary = 2275;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = 2276;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = 2277;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = 2278;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = 2279;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = 3705;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = 2281;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = 2282;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = 2285;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = 2286;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = 2284;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = 2287;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = 2288;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = 2289;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SubscriptionDiagnosticsArray = 2290;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = 3707;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = 3708;

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public const uint Server_ServerDiagnostics_EnabledFlag = 2294;

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public const uint Server_ServerRedundancy_RedundancySupport = 3709;

        /// <summary>
        /// The identifier for the Dictionary_XmlSchema Variable.
        /// </summary>
        public const uint Dictionary_XmlSchema = 2297;

        /// <summary>
        /// The identifier for the Dictionary_BinarySchema Variable.
        /// </summary>
        public const uint Dictionary_BinarySchema = 2298;

        /// <summary>
        /// The identifier for the StateVariableType_Id Variable.
        /// </summary>
        public const uint StateVariableType_Id = 2756;

        /// <summary>
        /// The identifier for the StateVariableType_Name Variable.
        /// </summary>
        public const uint StateVariableType_Name = 2757;

        /// <summary>
        /// The identifier for the StateVariableType_Number Variable.
        /// </summary>
        public const uint StateVariableType_Number = 2758;

        /// <summary>
        /// The identifier for the StateVariableType_EffectiveDisplayName Variable.
        /// </summary>
        public const uint StateVariableType_EffectiveDisplayName = 2759;

        /// <summary>
        /// The identifier for the FiniteStateVariableType_Id Variable.
        /// </summary>
        public const uint FiniteStateVariableType_Id = 2761;

        /// <summary>
        /// The identifier for the TransitionVariableType_Id Variable.
        /// </summary>
        public const uint TransitionVariableType_Id = 2763;

        /// <summary>
        /// The identifier for the TransitionVariableType_Name Variable.
        /// </summary>
        public const uint TransitionVariableType_Name = 2764;

        /// <summary>
        /// The identifier for the TransitionVariableType_Number Variable.
        /// </summary>
        public const uint TransitionVariableType_Number = 2765;

        /// <summary>
        /// The identifier for the TransitionVariableType_TransitionTime Variable.
        /// </summary>
        public const uint TransitionVariableType_TransitionTime = 2766;

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType_Id Variable.
        /// </summary>
        public const uint FiniteTransitionVariableType_Id = 2768;

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState Variable.
        /// </summary>
        public const uint StateMachineType_CurrentState = 2769;

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition Variable.
        /// </summary>
        public const uint StateMachineType_LastTransition = 2770;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState Variable.
        /// </summary>
        public const uint FiniteStateMachineType_CurrentState = 2772;

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition Variable.
        /// </summary>
        public const uint FiniteStateMachineType_LastTransition = 2773;

        /// <summary>
        /// The identifier for the StateType_StateNumber Variable.
        /// </summary>
        public const uint StateType_StateNumber = 2308;

        /// <summary>
        /// The identifier for the TransitionEventType_FromState Variable.
        /// </summary>
        public const uint TransitionEventType_FromState = 2775;

        /// <summary>
        /// The identifier for the TransitionEventType_ToState Variable.
        /// </summary>
        public const uint TransitionEventType_ToState = 2776;

        /// <summary>
        /// The identifier for the TransitionEventType_Transition Variable.
        /// </summary>
        public const uint TransitionEventType_Transition = 2774;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_OldStateId Variable.
        /// </summary>
        public const uint AuditUpdateStateEventType_OldStateId = 2777;

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_NewStateId Variable.
        /// </summary>
        public const uint AuditUpdateStateEventType_NewStateId = 2778;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_AggregateConfiguration Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_AggregateConfiguration = 3059;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_Stepped Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_Stepped = 2323;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_Definition Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_Definition = 2324;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_MaxTimeInterval Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_MaxTimeInterval = 2325;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_MinTimeInterval Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_MinTimeInterval = 2326;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_ExceptionDeviation Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_ExceptionDeviation = 2327;

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_ExceptionDeviationFormat Variable.
        /// </summary>
        public const uint HistoricalConfigurationType_ExceptionDeviationFormat = 2328;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_AccessHistoryDataCapability = 2331;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessEventsCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_AccessEventsCapability = 2332;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnValues Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_MaxReturnValues = 2333;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_InsertDataCapability = 2334;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_ReplaceDataCapability = 2335;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateDataCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_UpdateDataCapability = 2336;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteRawCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_DeleteRawCapability = 2337;

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteAtTimeCapability Variable.
        /// </summary>
        public const uint HistoryServerCapabilitiesType_DeleteAtTimeCapability = 2338;

        /// <summary>
        /// The identifier for the DataItemType_Definition Variable.
        /// </summary>
        public const uint DataItemType_Definition = 2366;

        /// <summary>
        /// The identifier for the DataItemType_ValuePrecision Variable.
        /// </summary>
        public const uint DataItemType_ValuePrecision = 2367;

        /// <summary>
        /// The identifier for the AnalogItemType_EURange Variable.
        /// </summary>
        public const uint AnalogItemType_EURange = 2369;

        /// <summary>
        /// The identifier for the AnalogItemType_InstrumentRange Variable.
        /// </summary>
        public const uint AnalogItemType_InstrumentRange = 2370;

        /// <summary>
        /// The identifier for the AnalogItemType_EngineeringUnits Variable.
        /// </summary>
        public const uint AnalogItemType_EngineeringUnits = 2371;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_FalseState Variable.
        /// </summary>
        public const uint TwoStateDiscreteType_FalseState = 2374;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_TrueState Variable.
        /// </summary>
        public const uint TwoStateDiscreteType_TrueState = 2375;

        /// <summary>
        /// The identifier for the MultiStateDiscreteType_EnumStrings Variable.
        /// </summary>
        public const uint MultiStateDiscreteType_EnumStrings = 2377;

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_IntermediateResult Variable.
        /// </summary>
        public const uint ProgramTransitionEventType_IntermediateResult = 2379;

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition Variable.
        /// </summary>
        public const uint ProgramTransitionAuditEventType_Transition = 3825;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateSessionId Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_CreateSessionId = 2381;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateClientName Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_CreateClientName = 2382;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_InvocationCreationTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_InvocationCreationTime = 2383;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastTransitionTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastTransitionTime = 2384;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCall Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodCall = 2385;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodSessionId Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodSessionId = 2386;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodInputArguments Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodInputArguments = 2387;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodOutputArguments Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodOutputArguments = 2388;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCallTime Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodCallTime = 2389;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodReturnStatus Variable.
        /// </summary>
        public const uint ProgramDiagnosticType_LastMethodReturnStatus = 2390;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState Variable.
        /// </summary>
        public const uint ProgramStateMachineType_CurrentState = 3830;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Number Variable.
        /// </summary>
        public const uint ProgramStateMachineType_CurrentState_Number = 3833;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition = 3835;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Number Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition_Number = 3838;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_TransitionTime Variable.
        /// </summary>
        public const uint ProgramStateMachineType_LastTransition_TransitionTime = 3839;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Creatable Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Creatable = 2392;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Deletable Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Deletable = 2393;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_AutoDelete Variable.
        /// </summary>
        public const uint ProgramStateMachineType_AutoDelete = 2394;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RecycleCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RecycleCount = 2395;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_InstanceCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_InstanceCount = 2396;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxInstanceCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_MaxInstanceCount = 2397;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxRecycleCount Variable.
        /// </summary>
        public const uint ProgramStateMachineType_MaxRecycleCount = 2398;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ProgramDiagnostics = 2399;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Ready_StateNumber = 2401;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Running_StateNumber = 2403;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Suspended_StateNumber = 2405;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_Halted_StateNumber = 2407;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_HaltedToReady_TransitionNumber = 2409;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToRunning_TransitionNumber = 2411;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToHalted_TransitionNumber = 2413;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToReady_TransitionNumber = 2415;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_RunningToSuspended_TransitionNumber = 2417;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToRunning_TransitionNumber = 2419;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToHalted_TransitionNumber = 2421;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_SuspendedToReady_TransitionNumber = 2423;

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint ProgramStateMachineType_ReadyToHalted_TransitionNumber = 2425;

        /// <summary>
        /// The identifier for the BaseConditionType_Retain Variable.
        /// </summary>
        public const uint BaseConditionType_Retain = 2780;

        /// <summary>
        /// The identifier for the BaseConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint BaseConditionType_ConditionRefresh_InputArguments = 2979;

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType_InputArguments Variable.
        /// </summary>
        public const uint AddCommentByEventIdsMethodType_InputArguments = 3861;

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType_OutputArguments Variable.
        /// </summary>
        public const uint AddCommentByEventIdsMethodType_OutputArguments = 3862;

        /// <summary>
        /// The identifier for the AddCommentMethodType_InputArguments Variable.
        /// </summary>
        public const uint AddCommentMethodType_InputArguments = 3864;

        /// <summary>
        /// The identifier for the ConditionType_GroupingId Variable.
        /// </summary>
        public const uint ConditionType_GroupingId = 2784;

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds_InputArguments Variable.
        /// </summary>
        public const uint ConditionType_AddCommentByEventIds_InputArguments = 2980;

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds_OutputArguments Variable.
        /// </summary>
        public const uint ConditionType_AddCommentByEventIds_OutputArguments = 2981;

        /// <summary>
        /// The identifier for the StatusStateMachineType_Status Variable.
        /// </summary>
        public const uint StatusStateMachineType_Status = 2805;

        /// <summary>
        /// The identifier for the SeverityStateMachineType_LastSeverity Variable.
        /// </summary>
        public const uint SeverityStateMachineType_LastSeverity = 2809;

        /// <summary>
        /// The identifier for the CommentStateMachineType_Comment Variable.
        /// </summary>
        public const uint CommentStateMachineType_Comment = 2813;

        /// <summary>
        /// The identifier for the CommentStateMachineType_ClientUserId Variable.
        /// </summary>
        public const uint CommentStateMachineType_ClientUserId = 2814;

        /// <summary>
        /// The identifier for the CommentStateMachineType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint CommentStateMachineType_AddComment_InputArguments = 2982;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_EventId Variable.
        /// </summary>
        public const uint CommentPreviousStateMachineType_EventId = 2821;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_Comment Variable.
        /// </summary>
        public const uint CommentPreviousStateMachineType_Comment = 2822;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ClientUserId Variable.
        /// </summary>
        public const uint CommentPreviousStateMachineType_ClientUserId = 2823;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds_InputArguments Variable.
        /// </summary>
        public const uint CommentPreviousStateMachineType_AddCommentByEventIds_InputArguments = 2983;

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds_OutputArguments Variable.
        /// </summary>
        public const uint CommentPreviousStateMachineType_AddCommentByEventIds_OutputArguments = 2984;

        /// <summary>
        /// The identifier for the DialogConditionType_Prompt Variable.
        /// </summary>
        public const uint DialogConditionType_Prompt = 2831;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckPrevious Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AckPrevious = 2883;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AcknowledgeByEventIds_InputArguments = 2985;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds_OutputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_AcknowledgeByEventIds_OutputArguments = 2986;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmByEventIds_InputArguments = 2987;

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds_OutputArguments Variable.
        /// </summary>
        public const uint AcknowledgeableConditionType_ConfirmByEventIds_OutputArguments = 2988;

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint AcknowledgeStateMachineType_Acknowledge_InputArguments = 2989;

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint ConfirmedStateMachineType_Confirm_InputArguments = 2990;

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedOrShelved Variable.
        /// </summary>
        public const uint AlarmConditionType_SuppressedOrShelved = 2917;

        /// <summary>
        /// The identifier for the AlarmConditionType_MaxTimeShelved Variable.
        /// </summary>
        public const uint AlarmConditionType_MaxTimeShelved = 2918;

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve_InputArguments Variable.
        /// </summary>
        public const uint ShelvedStateMachineType_TimedShelve_InputArguments = 2991;

        /// <summary>
        /// The identifier for the TimedShelveMethodType_InputArguments Variable.
        /// </summary>
        public const uint TimedShelveMethodType_InputArguments = 6103;

        /// <summary>
        /// The identifier for the SingleLevelAlarmType_Limit Variable.
        /// </summary>
        public const uint SingleLevelAlarmType_Limit = 2958;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_HighHighLimit Variable.
        /// </summary>
        public const uint MultiLevelAlarmType_HighHighLimit = 2961;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_HighLimit Variable.
        /// </summary>
        public const uint MultiLevelAlarmType_HighLimit = 2962;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_LowLimit Variable.
        /// </summary>
        public const uint MultiLevelAlarmType_LowLimit = 2963;

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_LowLowLimit Variable.
        /// </summary>
        public const uint MultiLevelAlarmType_LowLowLimit = 2964;

        /// <summary>
        /// The identifier for the IdType_EnumStrings Variable.
        /// </summary>
        public const uint IdType_EnumStrings = 7591;

        /// <summary>
        /// The identifier for the NodeClass_EnumStrings Variable.
        /// </summary>
        public const uint NodeClass_EnumStrings = 7592;

        /// <summary>
        /// The identifier for the MessageSecurityMode_EnumStrings Variable.
        /// </summary>
        public const uint MessageSecurityMode_EnumStrings = 7595;

        /// <summary>
        /// The identifier for the UserTokenType_EnumStrings Variable.
        /// </summary>
        public const uint UserTokenType_EnumStrings = 7596;

        /// <summary>
        /// The identifier for the ApplicationType_EnumStrings Variable.
        /// </summary>
        public const uint ApplicationType_EnumStrings = 7597;

        /// <summary>
        /// The identifier for the SecurityTokenRequestType_EnumStrings Variable.
        /// </summary>
        public const uint SecurityTokenRequestType_EnumStrings = 7598;

        /// <summary>
        /// The identifier for the ComplianceLevel_EnumStrings Variable.
        /// </summary>
        public const uint ComplianceLevel_EnumStrings = 7599;

        /// <summary>
        /// The identifier for the AttributeWriteMask_EnumStrings Variable.
        /// </summary>
        public const uint AttributeWriteMask_EnumStrings = 7600;

        /// <summary>
        /// The identifier for the NodeAttributesMask_EnumStrings Variable.
        /// </summary>
        public const uint NodeAttributesMask_EnumStrings = 7601;

        /// <summary>
        /// The identifier for the EnumeratedTestType_EnumStrings Variable.
        /// </summary>
        public const uint EnumeratedTestType_EnumStrings = 7602;

        /// <summary>
        /// The identifier for the BrowseDirection_EnumStrings Variable.
        /// </summary>
        public const uint BrowseDirection_EnumStrings = 7603;

        /// <summary>
        /// The identifier for the BrowseResultMask_EnumStrings Variable.
        /// </summary>
        public const uint BrowseResultMask_EnumStrings = 7604;

        /// <summary>
        /// The identifier for the FilterOperator_EnumStrings Variable.
        /// </summary>
        public const uint FilterOperator_EnumStrings = 7605;

        /// <summary>
        /// The identifier for the TimestampsToReturn_EnumStrings Variable.
        /// </summary>
        public const uint TimestampsToReturn_EnumStrings = 7606;

        /// <summary>
        /// The identifier for the HistoryUpdateMode_EnumStrings Variable.
        /// </summary>
        public const uint HistoryUpdateMode_EnumStrings = 7607;

        /// <summary>
        /// The identifier for the MonitoringMode_EnumStrings Variable.
        /// </summary>
        public const uint MonitoringMode_EnumStrings = 7608;

        /// <summary>
        /// The identifier for the DataChangeTrigger_EnumStrings Variable.
        /// </summary>
        public const uint DataChangeTrigger_EnumStrings = 7609;

        /// <summary>
        /// The identifier for the DeadbandType_EnumStrings Variable.
        /// </summary>
        public const uint DeadbandType_EnumStrings = 7610;

        /// <summary>
        /// The identifier for the RedundancySupport_EnumStrings Variable.
        /// </summary>
        public const uint RedundancySupport_EnumStrings = 7611;

        /// <summary>
        /// The identifier for the ServerState_EnumStrings Variable.
        /// </summary>
        public const uint ServerState_EnumStrings = 7612;

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask_EnumStrings Variable.
        /// </summary>
        public const uint ModelChangeStructureVerbMask_EnumStrings = 7613;

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat_EnumStrings Variable.
        /// </summary>
        public const uint ExceptionDeviationFormat_EnumStrings = 7614;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema = 7617;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NamespaceUri = 7619;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Node Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Node = 7620;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ObjectNode = 7623;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectTypeNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ObjectTypeNode = 7626;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_VariableNode = 7629;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableTypeNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_VariableTypeNode = 7632;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceTypeNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReferenceTypeNode = 7635;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MethodNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MethodNode = 7638;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ViewNode = 7641;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataTypeNode = 7644;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceNode Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReferenceNode = 7647;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Argument Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Argument = 7650;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TimeZoneDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TimeZoneDataType = 8914;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumValueInfo Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EnumValueInfo = 7656;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StatusResult = 7659;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserTokenPolicy Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserTokenPolicy = 7662;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ApplicationDescription = 7665;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EndpointDescription = 7668;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserIdentityToken = 7671;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AnonymousIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AnonymousIdentityToken = 7674;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserNameIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UserNameIdentityToken = 7677;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_X509IdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_X509IdentityToken = 7680;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IssuedIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_IssuedIdentityToken = 7683;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EndpointConfiguration = 7686;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SupportedProfile Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SupportedProfile = 7689;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BuildInfo Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BuildInfo = 7692;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SoftwareCertificate = 7695;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SignedSoftwareCertificate = 7698;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NodeAttributes = 7701;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ObjectAttributes = 7704;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_VariableAttributes = 7707;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MethodAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MethodAttributes = 7710;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ObjectTypeAttributes = 7713;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_VariableTypeAttributes = 7716;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReferenceTypeAttributes = 7719;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataTypeAttributes = 7722;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewAttributes Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ViewAttributes = 7725;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddNodesItem = 7728;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddReferencesItem = 7731;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteNodesItem = 7734;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteReferencesItem = 7737;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RequestHeader Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RequestHeader = 7740;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ResponseHeader Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ResponseHeader = 7743;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceFault Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServiceFault = 7746;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ScalarTestType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ScalarTestType = 7749;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ArrayTestType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ArrayTestType = 7752;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CompositeTestType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CompositeTestType = 7755;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TestStackRequest = 7758;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TestStackResponse = 7761;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackExRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TestStackExRequest = 7764;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackExResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TestStackExResponse = 7767;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FindServersRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_FindServersRequest = 7770;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FindServersResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_FindServersResponse = 7773;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_GetEndpointsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_GetEndpointsRequest = 7776;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_GetEndpointsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_GetEndpointsResponse = 7779;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisteredServer Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisteredServer = 7782;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterServerRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisterServerRequest = 7785;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterServerResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisterServerResponse = 7788;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ChannelSecurityToken Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ChannelSecurityToken = 7791;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OpenSecureChannelRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_OpenSecureChannelRequest = 7794;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OpenSecureChannelResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_OpenSecureChannelResponse = 7797;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSecureChannelRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CloseSecureChannelRequest = 7800;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSecureChannelResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CloseSecureChannelResponse = 7803;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignatureData Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SignatureData = 7806;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateSessionRequest = 7809;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateSessionResponse = 7812;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ActivateSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ActivateSessionRequest = 7815;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ActivateSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ActivateSessionResponse = 7818;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CloseSessionRequest = 7821;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CloseSessionResponse = 7824;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CancelRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CancelRequest = 7827;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CancelResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CancelResponse = 7830;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddNodesResult = 7833;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddNodesRequest = 7836;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddNodesResponse = 7839;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddReferencesRequest = 7842;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AddReferencesResponse = 7845;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteNodesRequest = 7848;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteNodesResponse = 7851;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteReferencesRequest = 7854;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteReferencesResponse = 7857;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ViewDescription = 7860;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseDescription = 7863;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReferenceDescription = 7866;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseResult = 7869;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseRequest = 7872;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseResponse = 7875;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseNextRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseNextRequest = 7878;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseNextResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowseNextResponse = 7881;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePathElement Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RelativePathElement = 7884;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePath Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RelativePath = 7887;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePath Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowsePath = 7890;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePathTarget Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowsePathTarget = 7893;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePathResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_BrowsePathResult = 7896;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsRequest = 7899;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsResponse = 7902;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisterNodesRequest = 7905;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RegisterNodesResponse = 7908;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UnregisterNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UnregisterNodesRequest = 7911;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UnregisterNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UnregisterNodesResponse = 7914;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryDataDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryDataDescription = 7917;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeTypeDescription Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NodeTypeDescription = 7920;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryDataSet Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryDataSet = 7923;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeReference Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NodeReference = 7926;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElement Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilterElement = 7929;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilter = 7932;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FilterOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_FilterOperand = 7935;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ElementOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ElementOperand = 7938;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_LiteralOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_LiteralOperand = 7941;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AttributeOperand = 7944;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SimpleAttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SimpleAttributeOperand = 7947;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElementResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilterElementResult = 7950;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ContentFilterResult = 7953;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ParsingResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ParsingResult = 7956;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryFirstRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryFirstRequest = 7959;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryFirstResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryFirstResponse = 7962;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryNextRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryNextRequest = 7965;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryNextResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_QueryNextResponse = 7968;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadValueId Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadValueId = 7971;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadRequest = 7974;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadResponse = 7977;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadValueId Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryReadValueId = 7980;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryReadResult = 7983;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryReadDetails = 7986;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadEventDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadEventDetails = 7989;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadRawModifiedDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadRawModifiedDetails = 7992;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadProcessedDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadProcessedDetails = 7995;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadAtTimeDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ReadAtTimeDetails = 7998;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryData Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryData = 8001;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEvent Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryEvent = 8004;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryReadRequest = 8007;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryReadResponse = 8010;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteValue Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_WriteValue = 8013;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_WriteRequest = 8016;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_WriteResponse = 8019;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryUpdateDetails = 8022;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UpdateDataDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UpdateDataDetails = 8025;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_InsertReplaceEventDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_InsertReplaceEventDetails = 8028;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UpdateEventDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_UpdateEventDetails = 8031;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteRawModifiedDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteRawModifiedDetails = 8034;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteAtTimeDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteAtTimeDetails = 8037;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteEventDetails Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteEventDetails = 8040;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryUpdateResult = 8043;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateEventResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryUpdateEventResult = 8046;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryUpdateRequest = 8049;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryUpdateResponse = 8052;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallMethodRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CallMethodRequest = 8055;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallMethodResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CallMethodResult = 8058;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CallRequest = 8061;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CallResponse = 8064;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoringFilter = 8067;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataChangeFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataChangeFilter = 8070;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EventFilter = 8073;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateConfiguration Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AggregateConfiguration = 8076;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateFilter Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AggregateFilter = 8079;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilterResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoringFilterResult = 8082;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilterResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EventFilterResult = 8085;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateFilterResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_AggregateFilterResult = 8088;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringParameters Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoringParameters = 8091;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemCreateRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoredItemCreateRequest = 8094;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemCreateResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoredItemCreateResult = 8097;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateMonitoredItemsRequest = 8100;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateMonitoredItemsResponse = 8103;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemModifyRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoredItemModifyRequest = 8106;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemModifyResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoredItemModifyResult = 8109;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifyMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModifyMonitoredItemsRequest = 8112;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifyMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModifyMonitoredItemsResponse = 8115;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetMonitoringModeRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetMonitoringModeRequest = 8118;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetMonitoringModeResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetMonitoringModeResponse = 8121;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetTriggeringRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetTriggeringRequest = 8124;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetTriggeringResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetTriggeringResponse = 8127;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteMonitoredItemsRequest = 8130;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteMonitoredItemsResponse = 8133;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSubscriptionRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateSubscriptionRequest = 8136;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSubscriptionResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_CreateSubscriptionResponse = 8139;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifySubscriptionRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModifySubscriptionRequest = 8142;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifySubscriptionResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModifySubscriptionResponse = 8145;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetPublishingModeRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetPublishingModeRequest = 8148;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetPublishingModeResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SetPublishingModeResponse = 8151;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NotificationMessage Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NotificationMessage = 8154;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NotificationData Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_NotificationData = 8157;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataChangeNotification Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DataChangeNotification = 8160;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemNotification Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_MonitoredItemNotification = 8163;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventNotificationList Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EventNotificationList = 8166;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFieldList Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EventFieldList = 8169;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEventFieldList Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_HistoryEventFieldList = 8172;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusChangeNotification Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_StatusChangeNotification = 8175;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionAcknowledgement Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SubscriptionAcknowledgement = 8178;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_PublishRequest = 8181;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_PublishResponse = 8184;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RepublishRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RepublishRequest = 8187;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RepublishResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RepublishResponse = 8190;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferResult Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TransferResult = 8193;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferSubscriptionsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TransferSubscriptionsRequest = 8196;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferSubscriptionsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_TransferSubscriptionsResponse = 8199;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteSubscriptionsRequest Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteSubscriptionsRequest = 8202;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteSubscriptionsResponse Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_DeleteSubscriptionsResponse = 8205;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RedundantServerDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_RedundantServerDataType = 8208;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = 8211;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = 8214;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerStatusDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServerStatusDataType = 8217;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SessionDiagnosticsDataType = 8220;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = 8223;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceCounterDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ServiceCounterDataType = 8226;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = 8229;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ModelChangeStructureDataType = 8232;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_SemanticChangeStructureDataType = 8235;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Range Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Range = 8238;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EUInformation Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_EUInformation = 8241;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Annotation Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_Annotation = 8244;

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public const uint OpcUa_BinarySchema_ProgramDiagnosticDataType = 8247;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema = 8252;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NamespaceUri = 8254;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Node Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Node = 8255;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ObjectNode = 8258;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectTypeNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ObjectTypeNode = 8261;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_VariableNode = 8264;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableTypeNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_VariableTypeNode = 8267;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceTypeNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReferenceTypeNode = 8270;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MethodNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MethodNode = 8273;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ViewNode = 8276;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataTypeNode = 8279;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceNode Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReferenceNode = 8282;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Argument Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Argument = 8285;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TimeZoneDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TimeZoneDataType = 8918;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumValueInfo Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EnumValueInfo = 8291;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StatusResult = 8294;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserTokenPolicy Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserTokenPolicy = 8297;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ApplicationDescription = 8300;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EndpointDescription = 8303;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserIdentityToken = 8306;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AnonymousIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AnonymousIdentityToken = 8309;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserNameIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UserNameIdentityToken = 8312;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_X509IdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_X509IdentityToken = 8315;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IssuedIdentityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_IssuedIdentityToken = 8318;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EndpointConfiguration = 8321;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SupportedProfile Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SupportedProfile = 8324;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BuildInfo Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BuildInfo = 8327;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SoftwareCertificate = 8330;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SignedSoftwareCertificate = 8333;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NodeAttributes = 8336;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ObjectAttributes = 8339;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_VariableAttributes = 8342;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MethodAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MethodAttributes = 8345;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ObjectTypeAttributes = 8348;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_VariableTypeAttributes = 8351;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReferenceTypeAttributes = 8354;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataTypeAttributes = 8357;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewAttributes Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ViewAttributes = 8360;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddNodesItem = 8363;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddReferencesItem = 8366;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteNodesItem = 8369;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesItem Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteReferencesItem = 8372;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RequestHeader Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RequestHeader = 8375;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ResponseHeader Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ResponseHeader = 8378;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceFault Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServiceFault = 8381;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ScalarTestType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ScalarTestType = 8384;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ArrayTestType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ArrayTestType = 8387;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CompositeTestType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CompositeTestType = 8390;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TestStackRequest = 8393;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TestStackResponse = 8396;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackExRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TestStackExRequest = 8399;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackExResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TestStackExResponse = 8402;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FindServersRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_FindServersRequest = 8405;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FindServersResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_FindServersResponse = 8408;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_GetEndpointsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_GetEndpointsRequest = 8411;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_GetEndpointsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_GetEndpointsResponse = 8414;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisteredServer Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisteredServer = 8417;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterServerRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisterServerRequest = 8420;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterServerResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisterServerResponse = 8423;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ChannelSecurityToken Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ChannelSecurityToken = 8426;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OpenSecureChannelRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_OpenSecureChannelRequest = 8429;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OpenSecureChannelResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_OpenSecureChannelResponse = 8432;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSecureChannelRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CloseSecureChannelRequest = 8435;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSecureChannelResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CloseSecureChannelResponse = 8438;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignatureData Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SignatureData = 8441;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateSessionRequest = 8444;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateSessionResponse = 8447;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ActivateSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ActivateSessionRequest = 8450;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ActivateSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ActivateSessionResponse = 8453;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSessionRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CloseSessionRequest = 8456;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSessionResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CloseSessionResponse = 8459;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CancelRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CancelRequest = 8462;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CancelResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CancelResponse = 8465;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddNodesResult = 8468;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddNodesRequest = 8471;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddNodesResponse = 8474;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddReferencesRequest = 8477;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AddReferencesResponse = 8480;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteNodesRequest = 8483;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteNodesResponse = 8486;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteReferencesRequest = 8489;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteReferencesResponse = 8492;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ViewDescription = 8495;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseDescription = 8498;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReferenceDescription = 8501;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseResult = 8504;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseRequest = 8507;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseResponse = 8510;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseNextRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseNextRequest = 8513;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseNextResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowseNextResponse = 8516;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePathElement Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RelativePathElement = 8519;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePath Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RelativePath = 8522;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePath Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowsePath = 8525;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePathTarget Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowsePathTarget = 8528;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePathResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_BrowsePathResult = 8531;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsRequest = 8534;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsResponse = 8537;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisterNodesRequest = 8540;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RegisterNodesResponse = 8543;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UnregisterNodesRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UnregisterNodesRequest = 8546;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UnregisterNodesResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UnregisterNodesResponse = 8549;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryDataDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryDataDescription = 8552;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeTypeDescription Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NodeTypeDescription = 8555;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryDataSet Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryDataSet = 8558;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeReference Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NodeReference = 8561;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElement Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilterElement = 8564;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilter = 8567;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FilterOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_FilterOperand = 8570;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ElementOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ElementOperand = 8573;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_LiteralOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_LiteralOperand = 8576;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AttributeOperand = 8579;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SimpleAttributeOperand Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SimpleAttributeOperand = 8582;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElementResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilterElementResult = 8585;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ContentFilterResult = 8588;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ParsingResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ParsingResult = 8591;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryFirstRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryFirstRequest = 8594;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryFirstResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryFirstResponse = 8597;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryNextRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryNextRequest = 8600;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryNextResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_QueryNextResponse = 8603;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadValueId Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadValueId = 8606;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadRequest = 8609;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadResponse = 8612;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadValueId Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryReadValueId = 8615;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryReadResult = 8618;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryReadDetails = 8621;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadEventDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadEventDetails = 8624;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadRawModifiedDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadRawModifiedDetails = 8627;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadProcessedDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadProcessedDetails = 8630;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadAtTimeDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ReadAtTimeDetails = 8633;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryData Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryData = 8636;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEvent Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryEvent = 8639;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryReadRequest = 8642;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryReadResponse = 8645;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteValue Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_WriteValue = 8648;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_WriteRequest = 8651;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_WriteResponse = 8654;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryUpdateDetails = 8657;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UpdateDataDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UpdateDataDetails = 8660;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_InsertReplaceEventDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_InsertReplaceEventDetails = 8663;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UpdateEventDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_UpdateEventDetails = 8666;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteRawModifiedDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteRawModifiedDetails = 8669;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteAtTimeDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteAtTimeDetails = 8672;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteEventDetails Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteEventDetails = 8675;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryUpdateResult = 8678;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateEventResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryUpdateEventResult = 8681;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryUpdateRequest = 8684;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryUpdateResponse = 8687;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallMethodRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CallMethodRequest = 8690;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallMethodResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CallMethodResult = 8693;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CallRequest = 8696;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CallResponse = 8699;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoringFilter = 8702;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataChangeFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataChangeFilter = 8705;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EventFilter = 8708;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateConfiguration Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AggregateConfiguration = 8711;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateFilter Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AggregateFilter = 8714;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilterResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoringFilterResult = 8717;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilterResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EventFilterResult = 8720;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateFilterResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_AggregateFilterResult = 8723;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringParameters Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoringParameters = 8726;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemCreateRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoredItemCreateRequest = 8729;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemCreateResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoredItemCreateResult = 8732;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateMonitoredItemsRequest = 8735;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateMonitoredItemsResponse = 8738;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemModifyRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoredItemModifyRequest = 8741;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemModifyResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoredItemModifyResult = 8744;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifyMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModifyMonitoredItemsRequest = 8747;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifyMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModifyMonitoredItemsResponse = 8750;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetMonitoringModeRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetMonitoringModeRequest = 8753;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetMonitoringModeResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetMonitoringModeResponse = 8756;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetTriggeringRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetTriggeringRequest = 8759;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetTriggeringResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetTriggeringResponse = 8762;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteMonitoredItemsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteMonitoredItemsRequest = 8765;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteMonitoredItemsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteMonitoredItemsResponse = 8768;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSubscriptionRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateSubscriptionRequest = 8771;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSubscriptionResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_CreateSubscriptionResponse = 8774;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifySubscriptionRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModifySubscriptionRequest = 8777;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifySubscriptionResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModifySubscriptionResponse = 8780;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetPublishingModeRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetPublishingModeRequest = 8783;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetPublishingModeResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SetPublishingModeResponse = 8786;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NotificationMessage Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NotificationMessage = 8789;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NotificationData Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_NotificationData = 8792;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataChangeNotification Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DataChangeNotification = 8795;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemNotification Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_MonitoredItemNotification = 8798;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventNotificationList Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EventNotificationList = 8801;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFieldList Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EventFieldList = 8804;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEventFieldList Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_HistoryEventFieldList = 8807;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusChangeNotification Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_StatusChangeNotification = 8810;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionAcknowledgement Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SubscriptionAcknowledgement = 8813;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_PublishRequest = 8816;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_PublishResponse = 8819;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RepublishRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RepublishRequest = 8822;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RepublishResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RepublishResponse = 8825;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferResult Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TransferResult = 8828;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferSubscriptionsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TransferSubscriptionsRequest = 8831;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferSubscriptionsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_TransferSubscriptionsResponse = 8834;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteSubscriptionsRequest Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteSubscriptionsRequest = 8837;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteSubscriptionsResponse Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_DeleteSubscriptionsResponse = 8840;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RedundantServerDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_RedundantServerDataType = 8843;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = 8846;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = 8849;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerStatusDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServerStatusDataType = 8852;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SessionDiagnosticsDataType = 8855;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = 8858;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceCounterDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ServiceCounterDataType = 8861;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = 8864;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ModelChangeStructureDataType = 8867;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_SemanticChangeStructureDataType = 8870;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Range Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Range = 8873;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EUInformation Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_EUInformation = 8876;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Annotation Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_Annotation = 8879;

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public const uint OpcUa_XmlSchema_ProgramDiagnosticDataType = 8882;
    }
    #endregion

    #region VariableType Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class VariableTypes
    {
        /// <summary>
        /// The identifier for the BaseVariableType VariableType.
        /// </summary>
        public const uint BaseVariableType = 62;

        /// <summary>
        /// The identifier for the BaseDataVariableType VariableType.
        /// </summary>
        public const uint BaseDataVariableType = 63;

        /// <summary>
        /// The identifier for the PropertyType VariableType.
        /// </summary>
        public const uint PropertyType = 68;

        /// <summary>
        /// The identifier for the DataTypeDescriptionType VariableType.
        /// </summary>
        public const uint DataTypeDescriptionType = 69;

        /// <summary>
        /// The identifier for the DataTypeDictionaryType VariableType.
        /// </summary>
        public const uint DataTypeDictionaryType = 72;

        /// <summary>
        /// The identifier for the ServerVendorCapabilityType VariableType.
        /// </summary>
        public const uint ServerVendorCapabilityType = 2137;

        /// <summary>
        /// The identifier for the ServerStatusType VariableType.
        /// </summary>
        public const uint ServerStatusType = 2138;

        /// <summary>
        /// The identifier for the BuildInfoType VariableType.
        /// </summary>
        public const uint BuildInfoType = 3051;

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType VariableType.
        /// </summary>
        public const uint ServerDiagnosticsSummaryType = 2150;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsArrayType = 2164;

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType VariableType.
        /// </summary>
        public const uint SamplingIntervalDiagnosticsType = 2165;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SubscriptionDiagnosticsArrayType = 2171;

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType VariableType.
        /// </summary>
        public const uint SubscriptionDiagnosticsType = 2172;

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SessionDiagnosticsArrayType = 2196;

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType VariableType.
        /// </summary>
        public const uint SessionDiagnosticsVariableType = 2197;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType VariableType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsArrayType = 2243;

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType VariableType.
        /// </summary>
        public const uint SessionSecurityDiagnosticsType = 2244;

        /// <summary>
        /// The identifier for the StateVariableType VariableType.
        /// </summary>
        public const uint StateVariableType = 2755;

        /// <summary>
        /// The identifier for the FiniteStateVariableType VariableType.
        /// </summary>
        public const uint FiniteStateVariableType = 2760;

        /// <summary>
        /// The identifier for the TransitionVariableType VariableType.
        /// </summary>
        public const uint TransitionVariableType = 2762;

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType VariableType.
        /// </summary>
        public const uint FiniteTransitionVariableType = 2767;

        /// <summary>
        /// The identifier for the DataItemType VariableType.
        /// </summary>
        public const uint DataItemType = 2365;

        /// <summary>
        /// The identifier for the AnalogItemType VariableType.
        /// </summary>
        public const uint AnalogItemType = 2368;

        /// <summary>
        /// The identifier for the DiscreteItemType VariableType.
        /// </summary>
        public const uint DiscreteItemType = 2372;

        /// <summary>
        /// The identifier for the TwoStateDiscreteType VariableType.
        /// </summary>
        public const uint TwoStateDiscreteType = 2373;

        /// <summary>
        /// The identifier for the MultiStateDiscreteType VariableType.
        /// </summary>
        public const uint MultiStateDiscreteType = 2376;

        /// <summary>
        /// The identifier for the ProgramDiagnosticType VariableType.
        /// </summary>
        public const uint ProgramDiagnosticType = 2380;

        /// <summary>
        /// The identifier for the AlarmLimitType VariableType.
        /// </summary>
        public const uint AlarmLimitType = 2978;
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the BaseDataType DataType.
        /// </summary>
        public static readonly NodeId BaseDataType = new NodeId(DataTypes.BaseDataType);

        /// <summary>
        /// The identifier for the Number DataType.
        /// </summary>
        public static readonly NodeId Number = new NodeId(DataTypes.Number);

        /// <summary>
        /// The identifier for the Integer DataType.
        /// </summary>
        public static readonly NodeId Integer = new NodeId(DataTypes.Integer);

        /// <summary>
        /// The identifier for the UInteger DataType.
        /// </summary>
        public static readonly NodeId UInteger = new NodeId(DataTypes.UInteger);

        /// <summary>
        /// The identifier for the Enumeration DataType.
        /// </summary>
        public static readonly NodeId Enumeration = new NodeId(DataTypes.Enumeration);

        /// <summary>
        /// The identifier for the Boolean DataType.
        /// </summary>
        public static readonly NodeId Boolean = new NodeId(DataTypes.Boolean);

        /// <summary>
        /// The identifier for the SByte DataType.
        /// </summary>
        public static readonly NodeId SByte = new NodeId(DataTypes.SByte);

        /// <summary>
        /// The identifier for the Byte DataType.
        /// </summary>
        public static readonly NodeId Byte = new NodeId(DataTypes.Byte);

        /// <summary>
        /// The identifier for the Int16 DataType.
        /// </summary>
        public static readonly NodeId Int16 = new NodeId(DataTypes.Int16);

        /// <summary>
        /// The identifier for the UInt16 DataType.
        /// </summary>
        public static readonly NodeId UInt16 = new NodeId(DataTypes.UInt16);

        /// <summary>
        /// The identifier for the Int32 DataType.
        /// </summary>
        public static readonly NodeId Int32 = new NodeId(DataTypes.Int32);

        /// <summary>
        /// The identifier for the UInt32 DataType.
        /// </summary>
        public static readonly NodeId UInt32 = new NodeId(DataTypes.UInt32);

        /// <summary>
        /// The identifier for the Int64 DataType.
        /// </summary>
        public static readonly NodeId Int64 = new NodeId(DataTypes.Int64);

        /// <summary>
        /// The identifier for the UInt64 DataType.
        /// </summary>
        public static readonly NodeId UInt64 = new NodeId(DataTypes.UInt64);

        /// <summary>
        /// The identifier for the Float DataType.
        /// </summary>
        public static readonly NodeId Float = new NodeId(DataTypes.Float);

        /// <summary>
        /// The identifier for the Double DataType.
        /// </summary>
        public static readonly NodeId Double = new NodeId(DataTypes.Double);

        /// <summary>
        /// The identifier for the String DataType.
        /// </summary>
        public static readonly NodeId String = new NodeId(DataTypes.String);

        /// <summary>
        /// The identifier for the DateTime DataType.
        /// </summary>
        public static readonly NodeId DateTime = new NodeId(DataTypes.DateTime);

        /// <summary>
        /// The identifier for the Guid DataType.
        /// </summary>
        public static readonly NodeId Guid = new NodeId(DataTypes.Guid);

        /// <summary>
        /// The identifier for the ByteString DataType.
        /// </summary>
        public static readonly NodeId ByteString = new NodeId(DataTypes.ByteString);

        /// <summary>
        /// The identifier for the XmlElement DataType.
        /// </summary>
        public static readonly NodeId XmlElement = new NodeId(DataTypes.XmlElement);

        /// <summary>
        /// The identifier for the NodeId DataType.
        /// </summary>
        public static readonly NodeId NodeId = new NodeId(DataTypes.NodeId);

        /// <summary>
        /// The identifier for the ExpandedNodeId DataType.
        /// </summary>
        public static readonly NodeId ExpandedNodeId = new NodeId(DataTypes.ExpandedNodeId);

        /// <summary>
        /// The identifier for the StatusCode DataType.
        /// </summary>
        public static readonly NodeId StatusCode = new NodeId(DataTypes.StatusCode);

        /// <summary>
        /// The identifier for the QualifiedName DataType.
        /// </summary>
        public static readonly NodeId QualifiedName = new NodeId(DataTypes.QualifiedName);

        /// <summary>
        /// The identifier for the LocalizedText DataType.
        /// </summary>
        public static readonly NodeId LocalizedText = new NodeId(DataTypes.LocalizedText);

        /// <summary>
        /// The identifier for the Structure DataType.
        /// </summary>
        public static readonly NodeId Structure = new NodeId(DataTypes.Structure);

        /// <summary>
        /// The identifier for the DataValue DataType.
        /// </summary>
        public static readonly NodeId DataValue = new NodeId(DataTypes.DataValue);

        /// <summary>
        /// The identifier for the DiagnosticInfo DataType.
        /// </summary>
        public static readonly NodeId DiagnosticInfo = new NodeId(DataTypes.DiagnosticInfo);

        /// <summary>
        /// The identifier for the Image DataType.
        /// </summary>
        public static readonly NodeId Image = new NodeId(DataTypes.Image);

        /// <summary>
        /// The identifier for the NamingRuleType DataType.
        /// </summary>
        public static readonly NodeId NamingRuleType = new NodeId(DataTypes.NamingRuleType);

        /// <summary>
        /// The identifier for the ImageBMP DataType.
        /// </summary>
        public static readonly NodeId ImageBMP = new NodeId(DataTypes.ImageBMP);

        /// <summary>
        /// The identifier for the ImageGIF DataType.
        /// </summary>
        public static readonly NodeId ImageGIF = new NodeId(DataTypes.ImageGIF);

        /// <summary>
        /// The identifier for the ImageJPG DataType.
        /// </summary>
        public static readonly NodeId ImageJPG = new NodeId(DataTypes.ImageJPG);

        /// <summary>
        /// The identifier for the ImagePNG DataType.
        /// </summary>
        public static readonly NodeId ImagePNG = new NodeId(DataTypes.ImagePNG);

        /// <summary>
        /// The identifier for the IdType DataType.
        /// </summary>
        public static readonly NodeId IdType = new NodeId(DataTypes.IdType);

        /// <summary>
        /// The identifier for the NodeClass DataType.
        /// </summary>
        public static readonly NodeId NodeClass = new NodeId(DataTypes.NodeClass);

        /// <summary>
        /// The identifier for the Node DataType.
        /// </summary>
        public static readonly NodeId Node = new NodeId(DataTypes.Node);

        /// <summary>
        /// The identifier for the ObjectNode DataType.
        /// </summary>
        public static readonly NodeId ObjectNode = new NodeId(DataTypes.ObjectNode);

        /// <summary>
        /// The identifier for the ObjectTypeNode DataType.
        /// </summary>
        public static readonly NodeId ObjectTypeNode = new NodeId(DataTypes.ObjectTypeNode);

        /// <summary>
        /// The identifier for the VariableNode DataType.
        /// </summary>
        public static readonly NodeId VariableNode = new NodeId(DataTypes.VariableNode);

        /// <summary>
        /// The identifier for the VariableTypeNode DataType.
        /// </summary>
        public static readonly NodeId VariableTypeNode = new NodeId(DataTypes.VariableTypeNode);

        /// <summary>
        /// The identifier for the ReferenceTypeNode DataType.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode = new NodeId(DataTypes.ReferenceTypeNode);

        /// <summary>
        /// The identifier for the MethodNode DataType.
        /// </summary>
        public static readonly NodeId MethodNode = new NodeId(DataTypes.MethodNode);

        /// <summary>
        /// The identifier for the ViewNode DataType.
        /// </summary>
        public static readonly NodeId ViewNode = new NodeId(DataTypes.ViewNode);

        /// <summary>
        /// The identifier for the DataTypeNode DataType.
        /// </summary>
        public static readonly NodeId DataTypeNode = new NodeId(DataTypes.DataTypeNode);

        /// <summary>
        /// The identifier for the ReferenceNode DataType.
        /// </summary>
        public static readonly NodeId ReferenceNode = new NodeId(DataTypes.ReferenceNode);

        /// <summary>
        /// The identifier for the IntegerId DataType.
        /// </summary>
        public static readonly NodeId IntegerId = new NodeId(DataTypes.IntegerId);

        /// <summary>
        /// The identifier for the Counter DataType.
        /// </summary>
        public static readonly NodeId Counter = new NodeId(DataTypes.Counter);

        /// <summary>
        /// The identifier for the Duration DataType.
        /// </summary>
        public static readonly NodeId Duration = new NodeId(DataTypes.Duration);

        /// <summary>
        /// The identifier for the NumericRange DataType.
        /// </summary>
        public static readonly NodeId NumericRange = new NodeId(DataTypes.NumericRange);

        /// <summary>
        /// The identifier for the Time DataType.
        /// </summary>
        public static readonly NodeId Time = new NodeId(DataTypes.Time);

        /// <summary>
        /// The identifier for the Date DataType.
        /// </summary>
        public static readonly NodeId Date = new NodeId(DataTypes.Date);

        /// <summary>
        /// The identifier for the UtcTime DataType.
        /// </summary>
        public static readonly NodeId UtcTime = new NodeId(DataTypes.UtcTime);

        /// <summary>
        /// The identifier for the LocaleId DataType.
        /// </summary>
        public static readonly NodeId LocaleId = new NodeId(DataTypes.LocaleId);

        /// <summary>
        /// The identifier for the Argument DataType.
        /// </summary>
        public static readonly NodeId Argument = new NodeId(DataTypes.Argument);

        /// <summary>
        /// The identifier for the TimeZoneDataType DataType.
        /// </summary>
        public static readonly NodeId TimeZoneDataType = new NodeId(DataTypes.TimeZoneDataType);

        /// <summary>
        /// The identifier for the EnumValueInfo DataType.
        /// </summary>
        public static readonly NodeId EnumValueInfo = new NodeId(DataTypes.EnumValueInfo);

        /// <summary>
        /// The identifier for the StatusResult DataType.
        /// </summary>
        public static readonly NodeId StatusResult = new NodeId(DataTypes.StatusResult);

        /// <summary>
        /// The identifier for the MessageSecurityMode DataType.
        /// </summary>
        public static readonly NodeId MessageSecurityMode = new NodeId(DataTypes.MessageSecurityMode);

        /// <summary>
        /// The identifier for the UserTokenType DataType.
        /// </summary>
        public static readonly NodeId UserTokenType = new NodeId(DataTypes.UserTokenType);

        /// <summary>
        /// The identifier for the UserTokenPolicy DataType.
        /// </summary>
        public static readonly NodeId UserTokenPolicy = new NodeId(DataTypes.UserTokenPolicy);

        /// <summary>
        /// The identifier for the ApplicationType DataType.
        /// </summary>
        public static readonly NodeId ApplicationType = new NodeId(DataTypes.ApplicationType);

        /// <summary>
        /// The identifier for the ApplicationDescription DataType.
        /// </summary>
        public static readonly NodeId ApplicationDescription = new NodeId(DataTypes.ApplicationDescription);

        /// <summary>
        /// The identifier for the ApplicationInstanceCertificate DataType.
        /// </summary>
        public static readonly NodeId ApplicationInstanceCertificate = new NodeId(DataTypes.ApplicationInstanceCertificate);

        /// <summary>
        /// The identifier for the EndpointDescription DataType.
        /// </summary>
        public static readonly NodeId EndpointDescription = new NodeId(DataTypes.EndpointDescription);

        /// <summary>
        /// The identifier for the SecurityTokenRequestType DataType.
        /// </summary>
        public static readonly NodeId SecurityTokenRequestType = new NodeId(DataTypes.SecurityTokenRequestType);

        /// <summary>
        /// The identifier for the UserIdentityToken DataType.
        /// </summary>
        public static readonly NodeId UserIdentityToken = new NodeId(DataTypes.UserIdentityToken);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken DataType.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken = new NodeId(DataTypes.AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the UserNameIdentityToken DataType.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken = new NodeId(DataTypes.UserNameIdentityToken);

        /// <summary>
        /// The identifier for the X509IdentityToken DataType.
        /// </summary>
        public static readonly NodeId X509IdentityToken = new NodeId(DataTypes.X509IdentityToken);

        /// <summary>
        /// The identifier for the IssuedIdentityToken DataType.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken = new NodeId(DataTypes.IssuedIdentityToken);

        /// <summary>
        /// The identifier for the EndpointConfiguration DataType.
        /// </summary>
        public static readonly NodeId EndpointConfiguration = new NodeId(DataTypes.EndpointConfiguration);

        /// <summary>
        /// The identifier for the ComplianceLevel DataType.
        /// </summary>
        public static readonly NodeId ComplianceLevel = new NodeId(DataTypes.ComplianceLevel);

        /// <summary>
        /// The identifier for the SupportedProfile DataType.
        /// </summary>
        public static readonly NodeId SupportedProfile = new NodeId(DataTypes.SupportedProfile);

        /// <summary>
        /// The identifier for the BuildInfo DataType.
        /// </summary>
        public static readonly NodeId BuildInfo = new NodeId(DataTypes.BuildInfo);

        /// <summary>
        /// The identifier for the SoftwareCertificate DataType.
        /// </summary>
        public static readonly NodeId SoftwareCertificate = new NodeId(DataTypes.SoftwareCertificate);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate DataType.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate = new NodeId(DataTypes.SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the AttributeWriteMask DataType.
        /// </summary>
        public static readonly NodeId AttributeWriteMask = new NodeId(DataTypes.AttributeWriteMask);

        /// <summary>
        /// The identifier for the NodeAttributesMask DataType.
        /// </summary>
        public static readonly NodeId NodeAttributesMask = new NodeId(DataTypes.NodeAttributesMask);

        /// <summary>
        /// The identifier for the NodeAttributes DataType.
        /// </summary>
        public static readonly NodeId NodeAttributes = new NodeId(DataTypes.NodeAttributes);

        /// <summary>
        /// The identifier for the ObjectAttributes DataType.
        /// </summary>
        public static readonly NodeId ObjectAttributes = new NodeId(DataTypes.ObjectAttributes);

        /// <summary>
        /// The identifier for the VariableAttributes DataType.
        /// </summary>
        public static readonly NodeId VariableAttributes = new NodeId(DataTypes.VariableAttributes);

        /// <summary>
        /// The identifier for the MethodAttributes DataType.
        /// </summary>
        public static readonly NodeId MethodAttributes = new NodeId(DataTypes.MethodAttributes);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes = new NodeId(DataTypes.ObjectTypeAttributes);

        /// <summary>
        /// The identifier for the VariableTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes = new NodeId(DataTypes.VariableTypeAttributes);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes = new NodeId(DataTypes.ReferenceTypeAttributes);

        /// <summary>
        /// The identifier for the DataTypeAttributes DataType.
        /// </summary>
        public static readonly NodeId DataTypeAttributes = new NodeId(DataTypes.DataTypeAttributes);

        /// <summary>
        /// The identifier for the ViewAttributes DataType.
        /// </summary>
        public static readonly NodeId ViewAttributes = new NodeId(DataTypes.ViewAttributes);

        /// <summary>
        /// The identifier for the AddNodesItem DataType.
        /// </summary>
        public static readonly NodeId AddNodesItem = new NodeId(DataTypes.AddNodesItem);

        /// <summary>
        /// The identifier for the AddReferencesItem DataType.
        /// </summary>
        public static readonly NodeId AddReferencesItem = new NodeId(DataTypes.AddReferencesItem);

        /// <summary>
        /// The identifier for the DeleteNodesItem DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesItem = new NodeId(DataTypes.DeleteNodesItem);

        /// <summary>
        /// The identifier for the DeleteReferencesItem DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem = new NodeId(DataTypes.DeleteReferencesItem);

        /// <summary>
        /// The identifier for the SessionAuthenticationToken DataType.
        /// </summary>
        public static readonly NodeId SessionAuthenticationToken = new NodeId(DataTypes.SessionAuthenticationToken);

        /// <summary>
        /// The identifier for the RequestHeader DataType.
        /// </summary>
        public static readonly NodeId RequestHeader = new NodeId(DataTypes.RequestHeader);

        /// <summary>
        /// The identifier for the ResponseHeader DataType.
        /// </summary>
        public static readonly NodeId ResponseHeader = new NodeId(DataTypes.ResponseHeader);

        /// <summary>
        /// The identifier for the ServiceFault DataType.
        /// </summary>
        public static readonly NodeId ServiceFault = new NodeId(DataTypes.ServiceFault);

        /// <summary>
        /// The identifier for the EnumeratedTestType DataType.
        /// </summary>
        public static readonly NodeId EnumeratedTestType = new NodeId(DataTypes.EnumeratedTestType);

        /// <summary>
        /// The identifier for the ScalarTestType DataType.
        /// </summary>
        public static readonly NodeId ScalarTestType = new NodeId(DataTypes.ScalarTestType);

        /// <summary>
        /// The identifier for the ArrayTestType DataType.
        /// </summary>
        public static readonly NodeId ArrayTestType = new NodeId(DataTypes.ArrayTestType);

        /// <summary>
        /// The identifier for the CompositeTestType DataType.
        /// </summary>
        public static readonly NodeId CompositeTestType = new NodeId(DataTypes.CompositeTestType);

        /// <summary>
        /// The identifier for the TestStackRequest DataType.
        /// </summary>
        public static readonly NodeId TestStackRequest = new NodeId(DataTypes.TestStackRequest);

        /// <summary>
        /// The identifier for the TestStackResponse DataType.
        /// </summary>
        public static readonly NodeId TestStackResponse = new NodeId(DataTypes.TestStackResponse);

        /// <summary>
        /// The identifier for the TestStackExRequest DataType.
        /// </summary>
        public static readonly NodeId TestStackExRequest = new NodeId(DataTypes.TestStackExRequest);

        /// <summary>
        /// The identifier for the TestStackExResponse DataType.
        /// </summary>
        public static readonly NodeId TestStackExResponse = new NodeId(DataTypes.TestStackExResponse);

        /// <summary>
        /// The identifier for the FindServersRequest DataType.
        /// </summary>
        public static readonly NodeId FindServersRequest = new NodeId(DataTypes.FindServersRequest);

        /// <summary>
        /// The identifier for the FindServersResponse DataType.
        /// </summary>
        public static readonly NodeId FindServersResponse = new NodeId(DataTypes.FindServersResponse);

        /// <summary>
        /// The identifier for the GetEndpointsRequest DataType.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest = new NodeId(DataTypes.GetEndpointsRequest);

        /// <summary>
        /// The identifier for the GetEndpointsResponse DataType.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse = new NodeId(DataTypes.GetEndpointsResponse);

        /// <summary>
        /// The identifier for the RegisteredServer DataType.
        /// </summary>
        public static readonly NodeId RegisteredServer = new NodeId(DataTypes.RegisteredServer);

        /// <summary>
        /// The identifier for the RegisterServerRequest DataType.
        /// </summary>
        public static readonly NodeId RegisterServerRequest = new NodeId(DataTypes.RegisterServerRequest);

        /// <summary>
        /// The identifier for the RegisterServerResponse DataType.
        /// </summary>
        public static readonly NodeId RegisterServerResponse = new NodeId(DataTypes.RegisterServerResponse);

        /// <summary>
        /// The identifier for the ChannelSecurityToken DataType.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken = new NodeId(DataTypes.ChannelSecurityToken);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest DataType.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest = new NodeId(DataTypes.OpenSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse DataType.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse = new NodeId(DataTypes.OpenSecureChannelResponse);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest DataType.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest = new NodeId(DataTypes.CloseSecureChannelRequest);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse DataType.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse = new NodeId(DataTypes.CloseSecureChannelResponse);

        /// <summary>
        /// The identifier for the SignatureData DataType.
        /// </summary>
        public static readonly NodeId SignatureData = new NodeId(DataTypes.SignatureData);

        /// <summary>
        /// The identifier for the CreateSessionRequest DataType.
        /// </summary>
        public static readonly NodeId CreateSessionRequest = new NodeId(DataTypes.CreateSessionRequest);

        /// <summary>
        /// The identifier for the CreateSessionResponse DataType.
        /// </summary>
        public static readonly NodeId CreateSessionResponse = new NodeId(DataTypes.CreateSessionResponse);

        /// <summary>
        /// The identifier for the ActivateSessionRequest DataType.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest = new NodeId(DataTypes.ActivateSessionRequest);

        /// <summary>
        /// The identifier for the ActivateSessionResponse DataType.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse = new NodeId(DataTypes.ActivateSessionResponse);

        /// <summary>
        /// The identifier for the CloseSessionRequest DataType.
        /// </summary>
        public static readonly NodeId CloseSessionRequest = new NodeId(DataTypes.CloseSessionRequest);

        /// <summary>
        /// The identifier for the CloseSessionResponse DataType.
        /// </summary>
        public static readonly NodeId CloseSessionResponse = new NodeId(DataTypes.CloseSessionResponse);

        /// <summary>
        /// The identifier for the CancelRequest DataType.
        /// </summary>
        public static readonly NodeId CancelRequest = new NodeId(DataTypes.CancelRequest);

        /// <summary>
        /// The identifier for the CancelResponse DataType.
        /// </summary>
        public static readonly NodeId CancelResponse = new NodeId(DataTypes.CancelResponse);

        /// <summary>
        /// The identifier for the AddNodesResult DataType.
        /// </summary>
        public static readonly NodeId AddNodesResult = new NodeId(DataTypes.AddNodesResult);

        /// <summary>
        /// The identifier for the AddNodesRequest DataType.
        /// </summary>
        public static readonly NodeId AddNodesRequest = new NodeId(DataTypes.AddNodesRequest);

        /// <summary>
        /// The identifier for the AddNodesResponse DataType.
        /// </summary>
        public static readonly NodeId AddNodesResponse = new NodeId(DataTypes.AddNodesResponse);

        /// <summary>
        /// The identifier for the AddReferencesRequest DataType.
        /// </summary>
        public static readonly NodeId AddReferencesRequest = new NodeId(DataTypes.AddReferencesRequest);

        /// <summary>
        /// The identifier for the AddReferencesResponse DataType.
        /// </summary>
        public static readonly NodeId AddReferencesResponse = new NodeId(DataTypes.AddReferencesResponse);

        /// <summary>
        /// The identifier for the DeleteNodesRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest = new NodeId(DataTypes.DeleteNodesRequest);

        /// <summary>
        /// The identifier for the DeleteNodesResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse = new NodeId(DataTypes.DeleteNodesResponse);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest = new NodeId(DataTypes.DeleteReferencesRequest);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse = new NodeId(DataTypes.DeleteReferencesResponse);

        /// <summary>
        /// The identifier for the BrowseDirection DataType.
        /// </summary>
        public static readonly NodeId BrowseDirection = new NodeId(DataTypes.BrowseDirection);

        /// <summary>
        /// The identifier for the ViewDescription DataType.
        /// </summary>
        public static readonly NodeId ViewDescription = new NodeId(DataTypes.ViewDescription);

        /// <summary>
        /// The identifier for the BrowseDescription DataType.
        /// </summary>
        public static readonly NodeId BrowseDescription = new NodeId(DataTypes.BrowseDescription);

        /// <summary>
        /// The identifier for the BrowseResultMask DataType.
        /// </summary>
        public static readonly NodeId BrowseResultMask = new NodeId(DataTypes.BrowseResultMask);

        /// <summary>
        /// The identifier for the ReferenceDescription DataType.
        /// </summary>
        public static readonly NodeId ReferenceDescription = new NodeId(DataTypes.ReferenceDescription);

        /// <summary>
        /// The identifier for the ContinuationPoint DataType.
        /// </summary>
        public static readonly NodeId ContinuationPoint = new NodeId(DataTypes.ContinuationPoint);

        /// <summary>
        /// The identifier for the BrowseResult DataType.
        /// </summary>
        public static readonly NodeId BrowseResult = new NodeId(DataTypes.BrowseResult);

        /// <summary>
        /// The identifier for the BrowseRequest DataType.
        /// </summary>
        public static readonly NodeId BrowseRequest = new NodeId(DataTypes.BrowseRequest);

        /// <summary>
        /// The identifier for the BrowseResponse DataType.
        /// </summary>
        public static readonly NodeId BrowseResponse = new NodeId(DataTypes.BrowseResponse);

        /// <summary>
        /// The identifier for the BrowseNextRequest DataType.
        /// </summary>
        public static readonly NodeId BrowseNextRequest = new NodeId(DataTypes.BrowseNextRequest);

        /// <summary>
        /// The identifier for the BrowseNextResponse DataType.
        /// </summary>
        public static readonly NodeId BrowseNextResponse = new NodeId(DataTypes.BrowseNextResponse);

        /// <summary>
        /// The identifier for the RelativePathElement DataType.
        /// </summary>
        public static readonly NodeId RelativePathElement = new NodeId(DataTypes.RelativePathElement);

        /// <summary>
        /// The identifier for the RelativePath DataType.
        /// </summary>
        public static readonly NodeId RelativePath = new NodeId(DataTypes.RelativePath);

        /// <summary>
        /// The identifier for the BrowsePath DataType.
        /// </summary>
        public static readonly NodeId BrowsePath = new NodeId(DataTypes.BrowsePath);

        /// <summary>
        /// The identifier for the BrowsePathTarget DataType.
        /// </summary>
        public static readonly NodeId BrowsePathTarget = new NodeId(DataTypes.BrowsePathTarget);

        /// <summary>
        /// The identifier for the BrowsePathResult DataType.
        /// </summary>
        public static readonly NodeId BrowsePathResult = new NodeId(DataTypes.BrowsePathResult);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest DataType.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest = new NodeId(DataTypes.TranslateBrowsePathsToNodeIdsRequest);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse DataType.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse = new NodeId(DataTypes.TranslateBrowsePathsToNodeIdsResponse);

        /// <summary>
        /// The identifier for the RegisterNodesRequest DataType.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest = new NodeId(DataTypes.RegisterNodesRequest);

        /// <summary>
        /// The identifier for the RegisterNodesResponse DataType.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse = new NodeId(DataTypes.RegisterNodesResponse);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest DataType.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest = new NodeId(DataTypes.UnregisterNodesRequest);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse DataType.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse = new NodeId(DataTypes.UnregisterNodesResponse);

        /// <summary>
        /// The identifier for the QueryDataDescription DataType.
        /// </summary>
        public static readonly NodeId QueryDataDescription = new NodeId(DataTypes.QueryDataDescription);

        /// <summary>
        /// The identifier for the NodeTypeDescription DataType.
        /// </summary>
        public static readonly NodeId NodeTypeDescription = new NodeId(DataTypes.NodeTypeDescription);

        /// <summary>
        /// The identifier for the FilterOperator DataType.
        /// </summary>
        public static readonly NodeId FilterOperator = new NodeId(DataTypes.FilterOperator);

        /// <summary>
        /// The identifier for the QueryDataSet DataType.
        /// </summary>
        public static readonly NodeId QueryDataSet = new NodeId(DataTypes.QueryDataSet);

        /// <summary>
        /// The identifier for the NodeReference DataType.
        /// </summary>
        public static readonly NodeId NodeReference = new NodeId(DataTypes.NodeReference);

        /// <summary>
        /// The identifier for the ContentFilterElement DataType.
        /// </summary>
        public static readonly NodeId ContentFilterElement = new NodeId(DataTypes.ContentFilterElement);

        /// <summary>
        /// The identifier for the ContentFilter DataType.
        /// </summary>
        public static readonly NodeId ContentFilter = new NodeId(DataTypes.ContentFilter);

        /// <summary>
        /// The identifier for the FilterOperand DataType.
        /// </summary>
        public static readonly NodeId FilterOperand = new NodeId(DataTypes.FilterOperand);

        /// <summary>
        /// The identifier for the ElementOperand DataType.
        /// </summary>
        public static readonly NodeId ElementOperand = new NodeId(DataTypes.ElementOperand);

        /// <summary>
        /// The identifier for the LiteralOperand DataType.
        /// </summary>
        public static readonly NodeId LiteralOperand = new NodeId(DataTypes.LiteralOperand);

        /// <summary>
        /// The identifier for the AttributeOperand DataType.
        /// </summary>
        public static readonly NodeId AttributeOperand = new NodeId(DataTypes.AttributeOperand);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand DataType.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand = new NodeId(DataTypes.SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the ContentFilterElementResult DataType.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult = new NodeId(DataTypes.ContentFilterElementResult);

        /// <summary>
        /// The identifier for the ContentFilterResult DataType.
        /// </summary>
        public static readonly NodeId ContentFilterResult = new NodeId(DataTypes.ContentFilterResult);

        /// <summary>
        /// The identifier for the ParsingResult DataType.
        /// </summary>
        public static readonly NodeId ParsingResult = new NodeId(DataTypes.ParsingResult);

        /// <summary>
        /// The identifier for the QueryFirstRequest DataType.
        /// </summary>
        public static readonly NodeId QueryFirstRequest = new NodeId(DataTypes.QueryFirstRequest);

        /// <summary>
        /// The identifier for the QueryFirstResponse DataType.
        /// </summary>
        public static readonly NodeId QueryFirstResponse = new NodeId(DataTypes.QueryFirstResponse);

        /// <summary>
        /// The identifier for the QueryNextRequest DataType.
        /// </summary>
        public static readonly NodeId QueryNextRequest = new NodeId(DataTypes.QueryNextRequest);

        /// <summary>
        /// The identifier for the QueryNextResponse DataType.
        /// </summary>
        public static readonly NodeId QueryNextResponse = new NodeId(DataTypes.QueryNextResponse);

        /// <summary>
        /// The identifier for the TimestampsToReturn DataType.
        /// </summary>
        public static readonly NodeId TimestampsToReturn = new NodeId(DataTypes.TimestampsToReturn);

        /// <summary>
        /// The identifier for the ReadValueId DataType.
        /// </summary>
        public static readonly NodeId ReadValueId = new NodeId(DataTypes.ReadValueId);

        /// <summary>
        /// The identifier for the ReadRequest DataType.
        /// </summary>
        public static readonly NodeId ReadRequest = new NodeId(DataTypes.ReadRequest);

        /// <summary>
        /// The identifier for the ReadResponse DataType.
        /// </summary>
        public static readonly NodeId ReadResponse = new NodeId(DataTypes.ReadResponse);

        /// <summary>
        /// The identifier for the HistoryReadValueId DataType.
        /// </summary>
        public static readonly NodeId HistoryReadValueId = new NodeId(DataTypes.HistoryReadValueId);

        /// <summary>
        /// The identifier for the HistoryReadResult DataType.
        /// </summary>
        public static readonly NodeId HistoryReadResult = new NodeId(DataTypes.HistoryReadResult);

        /// <summary>
        /// The identifier for the HistoryReadDetails DataType.
        /// </summary>
        public static readonly NodeId HistoryReadDetails = new NodeId(DataTypes.HistoryReadDetails);

        /// <summary>
        /// The identifier for the ReadEventDetails DataType.
        /// </summary>
        public static readonly NodeId ReadEventDetails = new NodeId(DataTypes.ReadEventDetails);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails DataType.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails = new NodeId(DataTypes.ReadRawModifiedDetails);

        /// <summary>
        /// The identifier for the ReadProcessedDetails DataType.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails = new NodeId(DataTypes.ReadProcessedDetails);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails DataType.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails = new NodeId(DataTypes.ReadAtTimeDetails);

        /// <summary>
        /// The identifier for the HistoryData DataType.
        /// </summary>
        public static readonly NodeId HistoryData = new NodeId(DataTypes.HistoryData);

        /// <summary>
        /// The identifier for the HistoryEvent DataType.
        /// </summary>
        public static readonly NodeId HistoryEvent = new NodeId(DataTypes.HistoryEvent);

        /// <summary>
        /// The identifier for the HistoryReadRequest DataType.
        /// </summary>
        public static readonly NodeId HistoryReadRequest = new NodeId(DataTypes.HistoryReadRequest);

        /// <summary>
        /// The identifier for the HistoryReadResponse DataType.
        /// </summary>
        public static readonly NodeId HistoryReadResponse = new NodeId(DataTypes.HistoryReadResponse);

        /// <summary>
        /// The identifier for the WriteValue DataType.
        /// </summary>
        public static readonly NodeId WriteValue = new NodeId(DataTypes.WriteValue);

        /// <summary>
        /// The identifier for the WriteRequest DataType.
        /// </summary>
        public static readonly NodeId WriteRequest = new NodeId(DataTypes.WriteRequest);

        /// <summary>
        /// The identifier for the WriteResponse DataType.
        /// </summary>
        public static readonly NodeId WriteResponse = new NodeId(DataTypes.WriteResponse);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails = new NodeId(DataTypes.HistoryUpdateDetails);

        /// <summary>
        /// The identifier for the HistoryUpdateMode DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateMode = new NodeId(DataTypes.HistoryUpdateMode);

        /// <summary>
        /// The identifier for the UpdateDataDetails DataType.
        /// </summary>
        public static readonly NodeId UpdateDataDetails = new NodeId(DataTypes.UpdateDataDetails);

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails DataType.
        /// </summary>
        public static readonly NodeId InsertReplaceEventDetails = new NodeId(DataTypes.InsertReplaceEventDetails);

        /// <summary>
        /// The identifier for the UpdateEventDetails DataType.
        /// </summary>
        public static readonly NodeId UpdateEventDetails = new NodeId(DataTypes.UpdateEventDetails);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails = new NodeId(DataTypes.DeleteRawModifiedDetails);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails = new NodeId(DataTypes.DeleteAtTimeDetails);

        /// <summary>
        /// The identifier for the DeleteEventDetails DataType.
        /// </summary>
        public static readonly NodeId DeleteEventDetails = new NodeId(DataTypes.DeleteEventDetails);

        /// <summary>
        /// The identifier for the HistoryUpdateResult DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult = new NodeId(DataTypes.HistoryUpdateResult);

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateEventResult = new NodeId(DataTypes.HistoryUpdateEventResult);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest = new NodeId(DataTypes.HistoryUpdateRequest);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse DataType.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse = new NodeId(DataTypes.HistoryUpdateResponse);

        /// <summary>
        /// The identifier for the CallMethodRequest DataType.
        /// </summary>
        public static readonly NodeId CallMethodRequest = new NodeId(DataTypes.CallMethodRequest);

        /// <summary>
        /// The identifier for the CallMethodResult DataType.
        /// </summary>
        public static readonly NodeId CallMethodResult = new NodeId(DataTypes.CallMethodResult);

        /// <summary>
        /// The identifier for the CallRequest DataType.
        /// </summary>
        public static readonly NodeId CallRequest = new NodeId(DataTypes.CallRequest);

        /// <summary>
        /// The identifier for the CallResponse DataType.
        /// </summary>
        public static readonly NodeId CallResponse = new NodeId(DataTypes.CallResponse);

        /// <summary>
        /// The identifier for the MonitoringMode DataType.
        /// </summary>
        public static readonly NodeId MonitoringMode = new NodeId(DataTypes.MonitoringMode);

        /// <summary>
        /// The identifier for the DataChangeTrigger DataType.
        /// </summary>
        public static readonly NodeId DataChangeTrigger = new NodeId(DataTypes.DataChangeTrigger);

        /// <summary>
        /// The identifier for the DeadbandType DataType.
        /// </summary>
        public static readonly NodeId DeadbandType = new NodeId(DataTypes.DeadbandType);

        /// <summary>
        /// The identifier for the MonitoringFilter DataType.
        /// </summary>
        public static readonly NodeId MonitoringFilter = new NodeId(DataTypes.MonitoringFilter);

        /// <summary>
        /// The identifier for the DataChangeFilter DataType.
        /// </summary>
        public static readonly NodeId DataChangeFilter = new NodeId(DataTypes.DataChangeFilter);

        /// <summary>
        /// The identifier for the EventFilter DataType.
        /// </summary>
        public static readonly NodeId EventFilter = new NodeId(DataTypes.EventFilter);

        /// <summary>
        /// The identifier for the AggregateConfiguration DataType.
        /// </summary>
        public static readonly NodeId AggregateConfiguration = new NodeId(DataTypes.AggregateConfiguration);

        /// <summary>
        /// The identifier for the AggregateFilter DataType.
        /// </summary>
        public static readonly NodeId AggregateFilter = new NodeId(DataTypes.AggregateFilter);

        /// <summary>
        /// The identifier for the MonitoringFilterResult DataType.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult = new NodeId(DataTypes.MonitoringFilterResult);

        /// <summary>
        /// The identifier for the EventFilterResult DataType.
        /// </summary>
        public static readonly NodeId EventFilterResult = new NodeId(DataTypes.EventFilterResult);

        /// <summary>
        /// The identifier for the AggregateFilterResult DataType.
        /// </summary>
        public static readonly NodeId AggregateFilterResult = new NodeId(DataTypes.AggregateFilterResult);

        /// <summary>
        /// The identifier for the MonitoringParameters DataType.
        /// </summary>
        public static readonly NodeId MonitoringParameters = new NodeId(DataTypes.MonitoringParameters);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest = new NodeId(DataTypes.MonitoredItemCreateRequest);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult = new NodeId(DataTypes.MonitoredItemCreateResult);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest = new NodeId(DataTypes.CreateMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse = new NodeId(DataTypes.CreateMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest = new NodeId(DataTypes.MonitoredItemModifyRequest);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult = new NodeId(DataTypes.MonitoredItemModifyResult);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest = new NodeId(DataTypes.ModifyMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse = new NodeId(DataTypes.ModifyMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest DataType.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest = new NodeId(DataTypes.SetMonitoringModeRequest);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse DataType.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse = new NodeId(DataTypes.SetMonitoringModeResponse);

        /// <summary>
        /// The identifier for the SetTriggeringRequest DataType.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest = new NodeId(DataTypes.SetTriggeringRequest);

        /// <summary>
        /// The identifier for the SetTriggeringResponse DataType.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse = new NodeId(DataTypes.SetTriggeringResponse);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest = new NodeId(DataTypes.DeleteMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse = new NodeId(DataTypes.DeleteMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest DataType.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest = new NodeId(DataTypes.CreateSubscriptionRequest);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse DataType.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse = new NodeId(DataTypes.CreateSubscriptionResponse);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest DataType.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest = new NodeId(DataTypes.ModifySubscriptionRequest);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse DataType.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse = new NodeId(DataTypes.ModifySubscriptionResponse);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest DataType.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest = new NodeId(DataTypes.SetPublishingModeRequest);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse DataType.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse = new NodeId(DataTypes.SetPublishingModeResponse);

        /// <summary>
        /// The identifier for the NotificationMessage DataType.
        /// </summary>
        public static readonly NodeId NotificationMessage = new NodeId(DataTypes.NotificationMessage);

        /// <summary>
        /// The identifier for the NotificationData DataType.
        /// </summary>
        public static readonly NodeId NotificationData = new NodeId(DataTypes.NotificationData);

        /// <summary>
        /// The identifier for the DataChangeNotification DataType.
        /// </summary>
        public static readonly NodeId DataChangeNotification = new NodeId(DataTypes.DataChangeNotification);

        /// <summary>
        /// The identifier for the MonitoredItemNotification DataType.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification = new NodeId(DataTypes.MonitoredItemNotification);

        /// <summary>
        /// The identifier for the EventNotificationList DataType.
        /// </summary>
        public static readonly NodeId EventNotificationList = new NodeId(DataTypes.EventNotificationList);

        /// <summary>
        /// The identifier for the EventFieldList DataType.
        /// </summary>
        public static readonly NodeId EventFieldList = new NodeId(DataTypes.EventFieldList);

        /// <summary>
        /// The identifier for the HistoryEventFieldList DataType.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList = new NodeId(DataTypes.HistoryEventFieldList);

        /// <summary>
        /// The identifier for the StatusChangeNotification DataType.
        /// </summary>
        public static readonly NodeId StatusChangeNotification = new NodeId(DataTypes.StatusChangeNotification);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement DataType.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement = new NodeId(DataTypes.SubscriptionAcknowledgement);

        /// <summary>
        /// The identifier for the PublishRequest DataType.
        /// </summary>
        public static readonly NodeId PublishRequest = new NodeId(DataTypes.PublishRequest);

        /// <summary>
        /// The identifier for the PublishResponse DataType.
        /// </summary>
        public static readonly NodeId PublishResponse = new NodeId(DataTypes.PublishResponse);

        /// <summary>
        /// The identifier for the RepublishRequest DataType.
        /// </summary>
        public static readonly NodeId RepublishRequest = new NodeId(DataTypes.RepublishRequest);

        /// <summary>
        /// The identifier for the RepublishResponse DataType.
        /// </summary>
        public static readonly NodeId RepublishResponse = new NodeId(DataTypes.RepublishResponse);

        /// <summary>
        /// The identifier for the TransferResult DataType.
        /// </summary>
        public static readonly NodeId TransferResult = new NodeId(DataTypes.TransferResult);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest DataType.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest = new NodeId(DataTypes.TransferSubscriptionsRequest);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse DataType.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse = new NodeId(DataTypes.TransferSubscriptionsResponse);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest DataType.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest = new NodeId(DataTypes.DeleteSubscriptionsRequest);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse DataType.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse = new NodeId(DataTypes.DeleteSubscriptionsResponse);

        /// <summary>
        /// The identifier for the RedundancySupport DataType.
        /// </summary>
        public static readonly NodeId RedundancySupport = new NodeId(DataTypes.RedundancySupport);

        /// <summary>
        /// The identifier for the ServerState DataType.
        /// </summary>
        public static readonly NodeId ServerState = new NodeId(DataTypes.ServerState);

        /// <summary>
        /// The identifier for the RedundantServerDataType DataType.
        /// </summary>
        public static readonly NodeId RedundantServerDataType = new NodeId(DataTypes.RedundantServerDataType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType = new NodeId(DataTypes.SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType DataType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType = new NodeId(DataTypes.ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the ServerStatusDataType DataType.
        /// </summary>
        public static readonly NodeId ServerStatusDataType = new NodeId(DataTypes.ServerStatusDataType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType = new NodeId(DataTypes.SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType = new NodeId(DataTypes.SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ServiceCounterDataType DataType.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType = new NodeId(DataTypes.ServiceCounterDataType);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType DataType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType = new NodeId(DataTypes.SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType DataType.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType = new NodeId(DataTypes.ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask DataType.
        /// </summary>
        public static readonly NodeId ModelChangeStructureVerbMask = new NodeId(DataTypes.ModelChangeStructureVerbMask);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType DataType.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType = new NodeId(DataTypes.SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the Range DataType.
        /// </summary>
        public static readonly NodeId Range = new NodeId(DataTypes.Range);

        /// <summary>
        /// The identifier for the EUInformation DataType.
        /// </summary>
        public static readonly NodeId EUInformation = new NodeId(DataTypes.EUInformation);

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat DataType.
        /// </summary>
        public static readonly NodeId ExceptionDeviationFormat = new NodeId(DataTypes.ExceptionDeviationFormat);

        /// <summary>
        /// The identifier for the Annotation DataType.
        /// </summary>
        public static readonly NodeId Annotation = new NodeId(DataTypes.Annotation);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType DataType.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType = new NodeId(DataTypes.ProgramDiagnosticDataType);
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the ProgramStateMachineType_Start Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Start = new NodeId(Methods.ProgramStateMachineType_Start);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspend Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspend = new NodeId(Methods.ProgramStateMachineType_Suspend);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Resume Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Resume = new NodeId(Methods.ProgramStateMachineType_Resume);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halt Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halt = new NodeId(Methods.ProgramStateMachineType_Halt);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Reset Method.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Reset = new NodeId(Methods.ProgramStateMachineType_Reset);

        /// <summary>
        /// The identifier for the BaseConditionType_ConditionRefresh Method.
        /// </summary>
        public static readonly NodeId BaseConditionType_ConditionRefresh = new NodeId(Methods.BaseConditionType_ConditionRefresh);

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType Method.
        /// </summary>
        public static readonly NodeId AddCommentByEventIdsMethodType = new NodeId(Methods.AddCommentByEventIdsMethodType);

        /// <summary>
        /// The identifier for the AddCommentMethodType Method.
        /// </summary>
        public static readonly NodeId AddCommentMethodType = new NodeId(Methods.AddCommentMethodType);

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds Method.
        /// </summary>
        public static readonly NodeId ConditionType_AddCommentByEventIds = new NodeId(Methods.ConditionType_AddCommentByEventIds);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Enable Method.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Enable = new NodeId(Methods.ConditionStateMachineType_Enable);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Disable Method.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Disable = new NodeId(Methods.ConditionStateMachineType_Disable);

        /// <summary>
        /// The identifier for the CommentStateMachineType_AddComment Method.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_AddComment = new NodeId(Methods.CommentStateMachineType_AddComment);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds Method.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_AddCommentByEventIds = new NodeId(Methods.CommentPreviousStateMachineType_AddCommentByEventIds);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Ok Method.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_Ok = new NodeId(Methods.OkDialogSubStateMachineType_Ok);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Ok Method.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Ok = new NodeId(Methods.OkCancelDialogSubStateMachineType_Ok);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Cancel Method.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Cancel = new NodeId(Methods.OkCancelDialogSubStateMachineType_Cancel);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Yes Method.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Yes = new NodeId(Methods.YesNoCancelDialogSubStateMachineType_Yes);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_No Method.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_No = new NodeId(Methods.YesNoCancelDialogSubStateMachineType_No);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Cancel Method.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Cancel = new NodeId(Methods.YesNoCancelDialogSubStateMachineType_Cancel);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds Method.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AcknowledgeByEventIds = new NodeId(Methods.AcknowledgeableConditionType_AcknowledgeByEventIds);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds Method.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmByEventIds = new NodeId(Methods.AcknowledgeableConditionType_ConfirmByEventIds);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledge Method.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_Acknowledge = new NodeId(Methods.AcknowledgeStateMachineType_Acknowledge);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirm Method.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_Confirm = new NodeId(Methods.ConfirmedStateMachineType_Confirm);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_ManualShelve = new NodeId(Methods.ShelvedStateMachineType_ManualShelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_Unshelve = new NodeId(Methods.ShelvedStateMachineType_Unshelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelve = new NodeId(Methods.ShelvedStateMachineType_OneShotShelve);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve Method.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelve = new NodeId(Methods.ShelvedStateMachineType_TimedShelve);

        /// <summary>
        /// The identifier for the TimedShelveMethodType Method.
        /// </summary>
        public static readonly NodeId TimedShelveMethodType = new NodeId(Methods.TimedShelveMethodType);
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DefaultBinary = new NodeId(Objects.DefaultBinary);

        /// <summary>
        /// The identifier for the DefaultXml Object.
        /// </summary>
        public static readonly NodeId DefaultXml = new NodeId(Objects.DefaultXml);

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory Object.
        /// </summary>
        public static readonly NodeId ModellingRule_Mandatory = new NodeId(Objects.ModellingRule_Mandatory);

        /// <summary>
        /// The identifier for the ModellingRule_Optional Object.
        /// </summary>
        public static readonly NodeId ModellingRule_Optional = new NodeId(Objects.ModellingRule_Optional);

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray Object.
        /// </summary>
        public static readonly NodeId ModellingRule_ExposesItsArray = new NodeId(Objects.ModellingRule_ExposesItsArray);

        /// <summary>
        /// The identifier for the ModellingRule_CardinalityRestriction Object.
        /// </summary>
        public static readonly NodeId ModellingRule_CardinalityRestriction = new NodeId(Objects.ModellingRule_CardinalityRestriction);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared Object.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryShared = new NodeId(Objects.ModellingRule_MandatoryShared);

        /// <summary>
        /// The identifier for the RootFolder Object.
        /// </summary>
        public static readonly NodeId RootFolder = new NodeId(Objects.RootFolder);

        /// <summary>
        /// The identifier for the ObjectsFolder Object.
        /// </summary>
        public static readonly NodeId ObjectsFolder = new NodeId(Objects.ObjectsFolder);

        /// <summary>
        /// The identifier for the TypesFolder Object.
        /// </summary>
        public static readonly NodeId TypesFolder = new NodeId(Objects.TypesFolder);

        /// <summary>
        /// The identifier for the ViewsFolder Object.
        /// </summary>
        public static readonly NodeId ViewsFolder = new NodeId(Objects.ViewsFolder);

        /// <summary>
        /// The identifier for the ObjectTypesFolder Object.
        /// </summary>
        public static readonly NodeId ObjectTypesFolder = new NodeId(Objects.ObjectTypesFolder);

        /// <summary>
        /// The identifier for the VariableTypesFolder Object.
        /// </summary>
        public static readonly NodeId VariableTypesFolder = new NodeId(Objects.VariableTypesFolder);

        /// <summary>
        /// The identifier for the DataTypesFolder Object.
        /// </summary>
        public static readonly NodeId DataTypesFolder = new NodeId(Objects.DataTypesFolder);

        /// <summary>
        /// The identifier for the ReferenceTypesFolder Object.
        /// </summary>
        public static readonly NodeId ReferenceTypesFolder = new NodeId(Objects.ReferenceTypesFolder);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem Object.
        /// </summary>
        public static readonly NodeId XmlSchema_TypeSystem = new NodeId(Objects.XmlSchema_TypeSystem);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem Object.
        /// </summary>
        public static readonly NodeId OPCBinarySchema_TypeSystem = new NodeId(Objects.OPCBinarySchema_TypeSystem);

        /// <summary>
        /// The identifier for the EventTypesFolder Object.
        /// </summary>
        public static readonly NodeId EventTypesFolder = new NodeId(Objects.EventTypesFolder);

        /// <summary>
        /// The identifier for the ServerType_ServerCapabilities Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerCapabilities = new NodeId(Objects.ServerType_ServerCapabilities);

        /// <summary>
        /// The identifier for the ServerType_ServerDiagnostics Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerDiagnostics = new NodeId(Objects.ServerType_ServerDiagnostics);

        /// <summary>
        /// The identifier for the ServerType_VendorServerInfo Object.
        /// </summary>
        public static readonly NodeId ServerType_VendorServerInfo = new NodeId(Objects.ServerType_VendorServerInfo);

        /// <summary>
        /// The identifier for the ServerType_ServerRedundancy Object.
        /// </summary>
        public static readonly NodeId ServerType_ServerRedundancy = new NodeId(Objects.ServerType_ServerRedundancy);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ModellingRules Object.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_ModellingRules = new NodeId(Objects.ServerCapabilitiesType_ModellingRules);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_AggregateFunctions = new NodeId(Objects.ServerCapabilitiesType_AggregateFunctions);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SessionsDiagnosticsSummary Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SessionsDiagnosticsSummary = new NodeId(Objects.ServerDiagnosticsType_SessionsDiagnosticsSummary);

        /// <summary>
        /// The identifier for the Server Object.
        /// </summary>
        public static readonly NodeId Server = new NodeId(Objects.Server);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities = new NodeId(Objects.Server_ServerCapabilities);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ModellingRules Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_ModellingRules = new NodeId(Objects.Server_ServerCapabilities_ModellingRules);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_AggregateFunctions Object.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_AggregateFunctions = new NodeId(Objects.Server_ServerCapabilities_AggregateFunctions);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics Object.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics = new NodeId(Objects.Server_ServerDiagnostics);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary Object.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary = new NodeId(Objects.Server_ServerDiagnostics_SessionsDiagnosticsSummary);

        /// <summary>
        /// The identifier for the Server_VendorServerInfo Object.
        /// </summary>
        public static readonly NodeId Server_VendorServerInfo = new NodeId(Objects.Server_VendorServerInfo);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy Object.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy = new NodeId(Objects.Server_ServerRedundancy);

        /// <summary>
        /// The identifier for the AggregateFunction_Interpolative Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Interpolative = new NodeId(Objects.AggregateFunction_Interpolative);

        /// <summary>
        /// The identifier for the AggregateFunction_Average Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Average = new NodeId(Objects.AggregateFunction_Average);

        /// <summary>
        /// The identifier for the AggregateFunction_TimeAverage Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_TimeAverage = new NodeId(Objects.AggregateFunction_TimeAverage);

        /// <summary>
        /// The identifier for the AggregateFunction_Total Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Total = new NodeId(Objects.AggregateFunction_Total);

        /// <summary>
        /// The identifier for the AggregateFunction_TotalizeAverage Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_TotalizeAverage = new NodeId(Objects.AggregateFunction_TotalizeAverage);

        /// <summary>
        /// The identifier for the AggregateFunction_Minimum Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Minimum = new NodeId(Objects.AggregateFunction_Minimum);

        /// <summary>
        /// The identifier for the AggregateFunction_Maximum Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Maximum = new NodeId(Objects.AggregateFunction_Maximum);

        /// <summary>
        /// The identifier for the AggregateFunction_MinimumActualTime Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MinimumActualTime = new NodeId(Objects.AggregateFunction_MinimumActualTime);

        /// <summary>
        /// The identifier for the AggregateFunction_MaximumActualTime Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_MaximumActualTime = new NodeId(Objects.AggregateFunction_MaximumActualTime);

        /// <summary>
        /// The identifier for the AggregateFunction_Range Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Range = new NodeId(Objects.AggregateFunction_Range);

        /// <summary>
        /// The identifier for the AggregateFunction_AnnotationCount Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_AnnotationCount = new NodeId(Objects.AggregateFunction_AnnotationCount);

        /// <summary>
        /// The identifier for the AggregateFunction_Count Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Count = new NodeId(Objects.AggregateFunction_Count);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInState0 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationInState0 = new NodeId(Objects.AggregateFunction_DurationInState0);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationInState1 Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationInState1 = new NodeId(Objects.AggregateFunction_DurationInState1);

        /// <summary>
        /// The identifier for the AggregateFunction_NumberOfTransitions Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_NumberOfTransitions = new NodeId(Objects.AggregateFunction_NumberOfTransitions);

        /// <summary>
        /// The identifier for the AggregateFunction_Time Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Time = new NodeId(Objects.AggregateFunction_Time);

        /// <summary>
        /// The identifier for the AggregateFunction_Start Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Start = new NodeId(Objects.AggregateFunction_Start);

        /// <summary>
        /// The identifier for the AggregateFunction_End Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_End = new NodeId(Objects.AggregateFunction_End);

        /// <summary>
        /// The identifier for the AggregateFunction_Delta Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_Delta = new NodeId(Objects.AggregateFunction_Delta);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationGood Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationGood = new NodeId(Objects.AggregateFunction_DurationGood);

        /// <summary>
        /// The identifier for the AggregateFunction_DurationBad Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_DurationBad = new NodeId(Objects.AggregateFunction_DurationBad);

        /// <summary>
        /// The identifier for the AggregateFunction_PercentGood Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_PercentGood = new NodeId(Objects.AggregateFunction_PercentGood);

        /// <summary>
        /// The identifier for the AggregateFunction_PercentBad Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_PercentBad = new NodeId(Objects.AggregateFunction_PercentBad);

        /// <summary>
        /// The identifier for the AggregateFunction_WorstQuality Object.
        /// </summary>
        public static readonly NodeId AggregateFunction_WorstQuality = new NodeId(Objects.AggregateFunction_WorstQuality);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_FinalResultData Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_FinalResultData = new NodeId(Objects.ProgramStateMachineType_FinalResultData);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Ready = new NodeId(Objects.ProgramStateMachineType_Ready);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Running = new NodeId(Objects.ProgramStateMachineType_Running);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspended = new NodeId(Objects.ProgramStateMachineType_Suspended);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halted = new NodeId(Objects.ProgramStateMachineType_Halted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_HaltedToReady = new NodeId(Objects.ProgramStateMachineType_HaltedToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning = new NodeId(Objects.ProgramStateMachineType_ReadyToRunning);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToHalted = new NodeId(Objects.ProgramStateMachineType_RunningToHalted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToReady = new NodeId(Objects.ProgramStateMachineType_RunningToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended = new NodeId(Objects.ProgramStateMachineType_RunningToSuspended);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning = new NodeId(Objects.ProgramStateMachineType_SuspendedToRunning);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted = new NodeId(Objects.ProgramStateMachineType_SuspendedToHalted);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady = new NodeId(Objects.ProgramStateMachineType_SuspendedToReady);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted Object.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted = new NodeId(Objects.ProgramStateMachineType_ReadyToHalted);

        /// <summary>
        /// The identifier for the ConditionType_State Object.
        /// </summary>
        public static readonly NodeId ConditionType_State = new NodeId(Objects.ConditionType_State);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Enabled Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Enabled = new NodeId(Objects.ConditionStateMachineType_Enabled);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Disabled Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Disabled = new NodeId(Objects.ConditionStateMachineType_Disabled);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_ToEnabled Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_ToEnabled = new NodeId(Objects.ConditionStateMachineType_ToEnabled);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_ToDisabled Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_ToDisabled = new NodeId(Objects.ConditionStateMachineType_ToDisabled);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Status Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Status = new NodeId(Objects.ConditionStateMachineType_Status);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Severity Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Severity = new NodeId(Objects.ConditionStateMachineType_Severity);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_Comment Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_Comment = new NodeId(Objects.ConditionStateMachineType_Comment);

        /// <summary>
        /// The identifier for the ConditionStateMachineType_CommentPrevious Object.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType_CommentPrevious = new NodeId(Objects.ConditionStateMachineType_CommentPrevious);

        /// <summary>
        /// The identifier for the StatusStateMachineType_Change Object.
        /// </summary>
        public static readonly NodeId StatusStateMachineType_Change = new NodeId(Objects.StatusStateMachineType_Change);

        /// <summary>
        /// The identifier for the StatusStateMachineType_ToChange Object.
        /// </summary>
        public static readonly NodeId StatusStateMachineType_ToChange = new NodeId(Objects.StatusStateMachineType_ToChange);

        /// <summary>
        /// The identifier for the SeverityStateMachineType_Change Object.
        /// </summary>
        public static readonly NodeId SeverityStateMachineType_Change = new NodeId(Objects.SeverityStateMachineType_Change);

        /// <summary>
        /// The identifier for the SeverityStateMachineType_SeverityChange Object.
        /// </summary>
        public static readonly NodeId SeverityStateMachineType_SeverityChange = new NodeId(Objects.SeverityStateMachineType_SeverityChange);

        /// <summary>
        /// The identifier for the CommentStateMachineType_LastComment Object.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_LastComment = new NodeId(Objects.CommentStateMachineType_LastComment);

        /// <summary>
        /// The identifier for the CommentStateMachineType_CommentAdded Object.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_CommentAdded = new NodeId(Objects.CommentStateMachineType_CommentAdded);

        /// <summary>
        /// The identifier for the CommentStateMachineType_ToCommentAdded Object.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_ToCommentAdded = new NodeId(Objects.CommentStateMachineType_ToCommentAdded);

        /// <summary>
        /// The identifier for the CommentStateMachineType_ToLastComment Object.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_ToLastComment = new NodeId(Objects.CommentStateMachineType_ToLastComment);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_LastComment Object.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_LastComment = new NodeId(Objects.CommentPreviousStateMachineType_LastComment);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_CommentAdded Object.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_CommentAdded = new NodeId(Objects.CommentPreviousStateMachineType_CommentAdded);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ToCommentAdded Object.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_ToCommentAdded = new NodeId(Objects.CommentPreviousStateMachineType_ToCommentAdded);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ToLastComment Object.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_ToLastComment = new NodeId(Objects.CommentPreviousStateMachineType_ToLastComment);

        /// <summary>
        /// The identifier for the OkDialogConditionType_State Object.
        /// </summary>
        public static readonly NodeId OkDialogConditionType_State = new NodeId(Objects.OkDialogConditionType_State);

        /// <summary>
        /// The identifier for the OkDialogStateMachineType_Dialog Object.
        /// </summary>
        public static readonly NodeId OkDialogStateMachineType_Dialog = new NodeId(Objects.OkDialogStateMachineType_Dialog);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_Inactive = new NodeId(Objects.OkDialogSubStateMachineType_Inactive);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Active Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_Active = new NodeId(Objects.OkDialogSubStateMachineType_Active);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_Accepting = new NodeId(Objects.OkDialogSubStateMachineType_Accepting);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_ToAccepting = new NodeId(Objects.OkDialogSubStateMachineType_ToAccepting);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_ToActive = new NodeId(Objects.OkDialogSubStateMachineType_ToActive);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType_ToInactive Object.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType_ToInactive = new NodeId(Objects.OkDialogSubStateMachineType_ToInactive);

        /// <summary>
        /// The identifier for the OkCancelDialogConditionType_State Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogConditionType_State = new NodeId(Objects.OkCancelDialogConditionType_State);

        /// <summary>
        /// The identifier for the OkCancelDialogStateMachineType_Dialog Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogStateMachineType_Dialog = new NodeId(Objects.OkCancelDialogStateMachineType_Dialog);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Inactive = new NodeId(Objects.OkCancelDialogSubStateMachineType_Inactive);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Active Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Active = new NodeId(Objects.OkCancelDialogSubStateMachineType_Active);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Accepting = new NodeId(Objects.OkCancelDialogSubStateMachineType_Accepting);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_Cancelling Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_Cancelling = new NodeId(Objects.OkCancelDialogSubStateMachineType_Cancelling);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_ToActive = new NodeId(Objects.OkCancelDialogSubStateMachineType_ToActive);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_ToAccepting = new NodeId(Objects.OkCancelDialogSubStateMachineType_ToAccepting);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_AcceptingToInactive Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_AcceptingToInactive = new NodeId(Objects.OkCancelDialogSubStateMachineType_AcceptingToInactive);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_ToCancelling Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_ToCancelling = new NodeId(Objects.OkCancelDialogSubStateMachineType_ToCancelling);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType_CancellingToInactive Object.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType_CancellingToInactive = new NodeId(Objects.OkCancelDialogSubStateMachineType_CancellingToInactive);

        /// <summary>
        /// The identifier for the YesNoCancelDialogConditionType_State Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogConditionType_State = new NodeId(Objects.YesNoCancelDialogConditionType_State);

        /// <summary>
        /// The identifier for the YesNoCancelDialogStateMachineType_Dialog Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogStateMachineType_Dialog = new NodeId(Objects.YesNoCancelDialogStateMachineType_Dialog);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Inactive Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Inactive = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_Inactive);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Active Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Active = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_Active);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Accepting Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Accepting = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_Accepting);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Cancelling Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Cancelling = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_Cancelling);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_Rejecting Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_Rejecting = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_Rejecting);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToActive Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_ToActive = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_ToActive);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToAccepting Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_ToAccepting = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_ToAccepting);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_AcceptingToInactive Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_AcceptingToInactive = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_AcceptingToInactive);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToCancelling Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_ToCancelling = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_ToCancelling);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_CancellingToInactive Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_CancellingToInactive = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_CancellingToInactive);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_ToRejecting Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_ToRejecting = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_ToRejecting);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType_RejectingToInactive Object.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType_RejectingToInactive = new NodeId(Objects.YesNoCancelDialogSubStateMachineType_RejectingToInactive);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_State Object.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_State = new NodeId(Objects.AcknowledgeableConditionType_State);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_Acknowledged Object.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionStateMachineType_Acknowledged = new NodeId(Objects.AcknowledgeableConditionStateMachineType_Acknowledged);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_AckPreviousRequired Object.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionStateMachineType_AckPreviousRequired = new NodeId(Objects.AcknowledgeableConditionStateMachineType_AckPreviousRequired);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_Confirm Object.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionStateMachineType_Confirm = new NodeId(Objects.AcknowledgeableConditionStateMachineType_Confirm);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType_ConfirmPrevious Object.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionStateMachineType_ConfirmPrevious = new NodeId(Objects.AcknowledgeableConditionStateMachineType_ConfirmPrevious);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Unacknowledged Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_Unacknowledged = new NodeId(Objects.AcknowledgeStateMachineType_Unacknowledged);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledged Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_Acknowledged = new NodeId(Objects.AcknowledgeStateMachineType_Acknowledged);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledging Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_Acknowledging = new NodeId(Objects.AcknowledgeStateMachineType_Acknowledging);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToAcknowledging Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_ToAcknowledging = new NodeId(Objects.AcknowledgeStateMachineType_ToAcknowledging);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToAcknowledged Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_ToAcknowledged = new NodeId(Objects.AcknowledgeStateMachineType_ToAcknowledged);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_ToUnacknowledged Object.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_ToUnacknowledged = new NodeId(Objects.AcknowledgeStateMachineType_ToUnacknowledged);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Unconfirmed Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_Unconfirmed = new NodeId(Objects.ConfirmedStateMachineType_Unconfirmed);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirmed Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_Confirmed = new NodeId(Objects.ConfirmedStateMachineType_Confirmed);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirming Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_Confirming = new NodeId(Objects.ConfirmedStateMachineType_Confirming);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ToConfirming Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_ToConfirming = new NodeId(Objects.ConfirmedStateMachineType_ToConfirming);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ToConfirmed Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_ToConfirmed = new NodeId(Objects.ConfirmedStateMachineType_ToConfirmed);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ConfirmingToUnconfirmed Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_ConfirmingToUnconfirmed = new NodeId(Objects.ConfirmedStateMachineType_ConfirmingToUnconfirmed);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_ConfirmedToUnconfirmed Object.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_ConfirmedToUnconfirmed = new NodeId(Objects.ConfirmedStateMachineType_ConfirmedToUnconfirmed);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Inactive Object.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType_Inactive = new NodeId(Objects.AckPreviousStateMachineType_Inactive);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Active Object.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType_Active = new NodeId(Objects.AckPreviousStateMachineType_Active);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_Confirming Object.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType_Confirming = new NodeId(Objects.AckPreviousStateMachineType_Confirming);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_ToActive Object.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType_ToActive = new NodeId(Objects.AckPreviousStateMachineType_ToActive);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType_ToInactive Object.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType_ToInactive = new NodeId(Objects.AckPreviousStateMachineType_ToInactive);

        /// <summary>
        /// The identifier for the AlarmConditionType_State Object.
        /// </summary>
        public static readonly NodeId AlarmConditionType_State = new NodeId(Objects.AlarmConditionType_State);

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmActive Object.
        /// </summary>
        public static readonly NodeId AlarmConditionStateMachineType_AlarmActive = new NodeId(Objects.AlarmConditionStateMachineType_AlarmActive);

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmShelved Object.
        /// </summary>
        public static readonly NodeId AlarmConditionStateMachineType_AlarmShelved = new NodeId(Objects.AlarmConditionStateMachineType_AlarmShelved);

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType_AlarmSuppressed Object.
        /// </summary>
        public static readonly NodeId AlarmConditionStateMachineType_AlarmSuppressed = new NodeId(Objects.AlarmConditionStateMachineType_AlarmSuppressed);

        /// <summary>
        /// The identifier for the AlarmStateMachineType_Inactive Object.
        /// </summary>
        public static readonly NodeId AlarmStateMachineType_Inactive = new NodeId(Objects.AlarmStateMachineType_Inactive);

        /// <summary>
        /// The identifier for the AlarmStateMachineType_Active Object.
        /// </summary>
        public static readonly NodeId AlarmStateMachineType_Active = new NodeId(Objects.AlarmStateMachineType_Active);

        /// <summary>
        /// The identifier for the AlarmStateMachineType_ToActive Object.
        /// </summary>
        public static readonly NodeId AlarmStateMachineType_ToActive = new NodeId(Objects.AlarmStateMachineType_ToActive);

        /// <summary>
        /// The identifier for the AlarmStateMachineType_ToInactive Object.
        /// </summary>
        public static readonly NodeId AlarmStateMachineType_ToInactive = new NodeId(Objects.AlarmStateMachineType_ToInactive);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_Unshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_Unshelved = new NodeId(Objects.ShelvedStateMachineType_Unshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_ManualShelved = new NodeId(Objects.ShelvedStateMachineType_ManualShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelved = new NodeId(Objects.ShelvedStateMachineType_TimedShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelved = new NodeId(Objects.ShelvedStateMachineType_OneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToManualShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToManualShelved = new NodeId(Objects.ShelvedStateMachineType_UnshelvedToManualShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToTimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToTimedShelved = new NodeId(Objects.ShelvedStateMachineType_UnshelvedToTimedShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_UnshelvedToOneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_UnshelvedToOneShotShelved = new NodeId(Objects.ShelvedStateMachineType_UnshelvedToOneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToUnshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_ManualShelvedToUnshelved = new NodeId(Objects.ShelvedStateMachineType_ManualShelvedToUnshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToTimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_ManualShelvedToTimedShelved = new NodeId(Objects.ShelvedStateMachineType_ManualShelvedToTimedShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_ManualShelvedToOneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_ManualShelvedToOneShotShelved = new NodeId(Objects.ShelvedStateMachineType_ManualShelvedToOneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToUnshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToUnshelved = new NodeId(Objects.ShelvedStateMachineType_TimedShelvedToUnshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToManualShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToManualShelved = new NodeId(Objects.ShelvedStateMachineType_TimedShelvedToManualShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelvedToOneShotShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelvedToOneShotShelved = new NodeId(Objects.ShelvedStateMachineType_TimedShelvedToOneShotShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToUnshelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToUnshelved = new NodeId(Objects.ShelvedStateMachineType_OneShotShelvedToUnshelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToManualShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToManualShelved = new NodeId(Objects.ShelvedStateMachineType_OneShotShelvedToManualShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_OneShotShelvedToTimedShelved Object.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_OneShotShelvedToTimedShelved = new NodeId(Objects.ShelvedStateMachineType_OneShotShelvedToTimedShelved);

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_Unsuppressed Object.
        /// </summary>
        public static readonly NodeId SuppressedStateMachineType_Unsuppressed = new NodeId(Objects.SuppressedStateMachineType_Unsuppressed);

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_Suppressed Object.
        /// </summary>
        public static readonly NodeId SuppressedStateMachineType_Suppressed = new NodeId(Objects.SuppressedStateMachineType_Suppressed);

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_ToUnsuppressed Object.
        /// </summary>
        public static readonly NodeId SuppressedStateMachineType_ToUnsuppressed = new NodeId(Objects.SuppressedStateMachineType_ToUnsuppressed);

        /// <summary>
        /// The identifier for the SuppressedStateMachineType_ToSuppressed Object.
        /// </summary>
        public static readonly NodeId SuppressedStateMachineType_ToSuppressed = new NodeId(Objects.SuppressedStateMachineType_ToSuppressed);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_State Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType_State = new NodeId(Objects.MultiLevelAlarmType_State);

        /// <summary>
        /// The identifier for the MultiLevelAlarmConditionStateMachineType_AlarmActive Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmConditionStateMachineType_AlarmActive = new NodeId(Objects.MultiLevelAlarmConditionStateMachineType_AlarmActive);

        /// <summary>
        /// The identifier for the MultiLevelAlarmStateMachineType_ActiveSubState Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmStateMachineType_ActiveSubState = new NodeId(Objects.MultiLevelAlarmStateMachineType_ActiveSubState);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighHigh Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_HighHigh = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_HighHigh);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_High Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_High = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_High);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_Low Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_Low = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_Low);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowLow Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_LowLow = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_LowLow);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighToHighHigh Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_HighToHighHigh = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_HighToHighHigh);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_HighHighToHigh Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_HighHighToHigh = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_HighHighToHigh);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowToLowLow Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_LowToLowLow = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_LowToLowLow);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType_LowLowToLow Object.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType_LowLowToLow = new NodeId(Objects.MultiLevelAlarmActiveSubStateMachineType_LowLowToLow);

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Node_Encoding_DefaultXml = new NodeId(Objects.Node_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectNode_Encoding_DefaultXml = new NodeId(Objects.ObjectNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultXml = new NodeId(Objects.ObjectTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableNode_Encoding_DefaultXml = new NodeId(Objects.VariableNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableTypeNode_Encoding_DefaultXml = new NodeId(Objects.VariableTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultXml = new NodeId(Objects.ReferenceTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MethodNode_Encoding_DefaultXml = new NodeId(Objects.MethodNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewNode_Encoding_DefaultXml = new NodeId(Objects.ViewNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeNode_Encoding_DefaultXml = new NodeId(Objects.DataTypeNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceNode_Encoding_DefaultXml = new NodeId(Objects.ReferenceNode_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Argument_Encoding_DefaultXml = new NodeId(Objects.Argument_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultXml = new NodeId(Objects.TimeZoneDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EnumValueInfo_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EnumValueInfo_Encoding_DefaultXml = new NodeId(Objects.EnumValueInfo_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StatusResult_Encoding_DefaultXml = new NodeId(Objects.StatusResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultXml = new NodeId(Objects.UserTokenPolicy_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ApplicationDescription_Encoding_DefaultXml = new NodeId(Objects.ApplicationDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EndpointDescription_Encoding_DefaultXml = new NodeId(Objects.EndpointDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserIdentityToken_Encoding_DefaultXml = new NodeId(Objects.UserIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultXml = new NodeId(Objects.AnonymousIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultXml = new NodeId(Objects.UserNameIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId X509IdentityToken_Encoding_DefaultXml = new NodeId(Objects.X509IdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultXml = new NodeId(Objects.IssuedIdentityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultXml = new NodeId(Objects.EndpointConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SupportedProfile_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SupportedProfile_Encoding_DefaultXml = new NodeId(Objects.SupportedProfile_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BuildInfo_Encoding_DefaultXml = new NodeId(Objects.BuildInfo_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SoftwareCertificate_Encoding_DefaultXml = new NodeId(Objects.SoftwareCertificate_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultXml = new NodeId(Objects.SignedSoftwareCertificate_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeAttributes_Encoding_DefaultXml = new NodeId(Objects.NodeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectAttributes_Encoding_DefaultXml = new NodeId(Objects.ObjectAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableAttributes_Encoding_DefaultXml = new NodeId(Objects.VariableAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MethodAttributes_Encoding_DefaultXml = new NodeId(Objects.MethodAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultXml = new NodeId(Objects.ObjectTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultXml = new NodeId(Objects.VariableTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultXml = new NodeId(Objects.ReferenceTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultXml = new NodeId(Objects.DataTypeAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewAttributes_Encoding_DefaultXml = new NodeId(Objects.ViewAttributes_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesItem_Encoding_DefaultXml = new NodeId(Objects.AddNodesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesItem_Encoding_DefaultXml = new NodeId(Objects.AddReferencesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultXml = new NodeId(Objects.DeleteNodesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultXml = new NodeId(Objects.DeleteReferencesItem_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RequestHeader_Encoding_DefaultXml = new NodeId(Objects.RequestHeader_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ResponseHeader_Encoding_DefaultXml = new NodeId(Objects.ResponseHeader_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServiceFault_Encoding_DefaultXml = new NodeId(Objects.ServiceFault_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ScalarTestType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ScalarTestType_Encoding_DefaultXml = new NodeId(Objects.ScalarTestType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ArrayTestType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ArrayTestType_Encoding_DefaultXml = new NodeId(Objects.ArrayTestType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CompositeTestType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CompositeTestType_Encoding_DefaultXml = new NodeId(Objects.CompositeTestType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TestStackRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TestStackRequest_Encoding_DefaultXml = new NodeId(Objects.TestStackRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TestStackResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TestStackResponse_Encoding_DefaultXml = new NodeId(Objects.TestStackResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TestStackExRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TestStackExRequest_Encoding_DefaultXml = new NodeId(Objects.TestStackExRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TestStackExResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TestStackExResponse_Encoding_DefaultXml = new NodeId(Objects.TestStackExResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersRequest_Encoding_DefaultXml = new NodeId(Objects.FindServersRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FindServersResponse_Encoding_DefaultXml = new NodeId(Objects.FindServersResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultXml = new NodeId(Objects.GetEndpointsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultXml = new NodeId(Objects.GetEndpointsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisteredServer_Encoding_DefaultXml = new NodeId(Objects.RegisteredServer_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultXml = new NodeId(Objects.RegisterServerRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultXml = new NodeId(Objects.RegisterServerResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultXml = new NodeId(Objects.ChannelSecurityToken_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultXml = new NodeId(Objects.OpenSecureChannelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultXml = new NodeId(Objects.OpenSecureChannelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultXml = new NodeId(Objects.CloseSecureChannelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultXml = new NodeId(Objects.CloseSecureChannelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SignatureData_Encoding_DefaultXml = new NodeId(Objects.SignatureData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultXml = new NodeId(Objects.CreateSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultXml = new NodeId(Objects.CreateSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultXml = new NodeId(Objects.ActivateSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultXml = new NodeId(Objects.ActivateSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultXml = new NodeId(Objects.CloseSessionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultXml = new NodeId(Objects.CloseSessionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CancelRequest_Encoding_DefaultXml = new NodeId(Objects.CancelRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CancelResponse_Encoding_DefaultXml = new NodeId(Objects.CancelResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesResult_Encoding_DefaultXml = new NodeId(Objects.AddNodesResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesRequest_Encoding_DefaultXml = new NodeId(Objects.AddNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddNodesResponse_Encoding_DefaultXml = new NodeId(Objects.AddNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultXml = new NodeId(Objects.AddReferencesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultXml = new NodeId(Objects.AddReferencesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultXml = new NodeId(Objects.DeleteNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultXml = new NodeId(Objects.DeleteNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultXml = new NodeId(Objects.DeleteReferencesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultXml = new NodeId(Objects.DeleteReferencesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ViewDescription_Encoding_DefaultXml = new NodeId(Objects.ViewDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseDescription_Encoding_DefaultXml = new NodeId(Objects.BrowseDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReferenceDescription_Encoding_DefaultXml = new NodeId(Objects.ReferenceDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseResult_Encoding_DefaultXml = new NodeId(Objects.BrowseResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseRequest_Encoding_DefaultXml = new NodeId(Objects.BrowseRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseResponse_Encoding_DefaultXml = new NodeId(Objects.BrowseResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultXml = new NodeId(Objects.BrowseNextRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultXml = new NodeId(Objects.BrowseNextResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RelativePathElement_Encoding_DefaultXml = new NodeId(Objects.RelativePathElement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RelativePath_Encoding_DefaultXml = new NodeId(Objects.RelativePath_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePath_Encoding_DefaultXml = new NodeId(Objects.BrowsePath_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultXml = new NodeId(Objects.BrowsePathTarget_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId BrowsePathResult_Encoding_DefaultXml = new NodeId(Objects.BrowsePathResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml = new NodeId(Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml = new NodeId(Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultXml = new NodeId(Objects.RegisterNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultXml = new NodeId(Objects.RegisterNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultXml = new NodeId(Objects.UnregisterNodesRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultXml = new NodeId(Objects.UnregisterNodesResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryDataDescription_Encoding_DefaultXml = new NodeId(Objects.QueryDataDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultXml = new NodeId(Objects.NodeTypeDescription_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryDataSet_Encoding_DefaultXml = new NodeId(Objects.QueryDataSet_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NodeReference_Encoding_DefaultXml = new NodeId(Objects.NodeReference_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterElement_Encoding_DefaultXml = new NodeId(Objects.ContentFilterElement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilter_Encoding_DefaultXml = new NodeId(Objects.ContentFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId FilterOperand_Encoding_DefaultXml = new NodeId(Objects.FilterOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ElementOperand_Encoding_DefaultXml = new NodeId(Objects.ElementOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId LiteralOperand_Encoding_DefaultXml = new NodeId(Objects.LiteralOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AttributeOperand_Encoding_DefaultXml = new NodeId(Objects.AttributeOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultXml = new NodeId(Objects.SimpleAttributeOperand_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultXml = new NodeId(Objects.ContentFilterElementResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ContentFilterResult_Encoding_DefaultXml = new NodeId(Objects.ContentFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ParsingResult_Encoding_DefaultXml = new NodeId(Objects.ParsingResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultXml = new NodeId(Objects.QueryFirstRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultXml = new NodeId(Objects.QueryFirstResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryNextRequest_Encoding_DefaultXml = new NodeId(Objects.QueryNextRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId QueryNextResponse_Encoding_DefaultXml = new NodeId(Objects.QueryNextResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadValueId_Encoding_DefaultXml = new NodeId(Objects.ReadValueId_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadRequest_Encoding_DefaultXml = new NodeId(Objects.ReadRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadResponse_Encoding_DefaultXml = new NodeId(Objects.ReadResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultXml = new NodeId(Objects.HistoryReadValueId_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadResult_Encoding_DefaultXml = new NodeId(Objects.HistoryReadResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultXml = new NodeId(Objects.HistoryReadDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadEventDetails_Encoding_DefaultXml = new NodeId(Objects.ReadEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultXml = new NodeId(Objects.ReadRawModifiedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultXml = new NodeId(Objects.ReadProcessedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultXml = new NodeId(Objects.ReadAtTimeDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryData_Encoding_DefaultXml = new NodeId(Objects.HistoryData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryEvent_Encoding_DefaultXml = new NodeId(Objects.HistoryEvent_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultXml = new NodeId(Objects.HistoryReadRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultXml = new NodeId(Objects.HistoryReadResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteValue_Encoding_DefaultXml = new NodeId(Objects.WriteValue_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteRequest_Encoding_DefaultXml = new NodeId(Objects.WriteRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId WriteResponse_Encoding_DefaultXml = new NodeId(Objects.WriteResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultXml = new NodeId(Objects.HistoryUpdateDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultXml = new NodeId(Objects.UpdateDataDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId InsertReplaceEventDetails_Encoding_DefaultXml = new NodeId(Objects.InsertReplaceEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultXml = new NodeId(Objects.UpdateEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultXml = new NodeId(Objects.DeleteRawModifiedDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultXml = new NodeId(Objects.DeleteAtTimeDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultXml = new NodeId(Objects.DeleteEventDetails_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultXml = new NodeId(Objects.HistoryUpdateResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateEventResult_Encoding_DefaultXml = new NodeId(Objects.HistoryUpdateEventResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultXml = new NodeId(Objects.HistoryUpdateRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultXml = new NodeId(Objects.HistoryUpdateResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallMethodRequest_Encoding_DefaultXml = new NodeId(Objects.CallMethodRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallMethodResult_Encoding_DefaultXml = new NodeId(Objects.CallMethodResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallRequest_Encoding_DefaultXml = new NodeId(Objects.CallRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CallResponse_Encoding_DefaultXml = new NodeId(Objects.CallResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringFilter_Encoding_DefaultXml = new NodeId(Objects.MonitoringFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataChangeFilter_Encoding_DefaultXml = new NodeId(Objects.DataChangeFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFilter_Encoding_DefaultXml = new NodeId(Objects.EventFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultXml = new NodeId(Objects.AggregateConfiguration_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateFilter_Encoding_DefaultXml = new NodeId(Objects.AggregateFilter_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultXml = new NodeId(Objects.MonitoringFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFilterResult_Encoding_DefaultXml = new NodeId(Objects.EventFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultXml = new NodeId(Objects.AggregateFilterResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoringParameters_Encoding_DefaultXml = new NodeId(Objects.MonitoringParameters_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultXml = new NodeId(Objects.MonitoredItemCreateRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultXml = new NodeId(Objects.MonitoredItemCreateResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Objects.CreateMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Objects.CreateMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultXml = new NodeId(Objects.MonitoredItemModifyRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultXml = new NodeId(Objects.MonitoredItemModifyResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Objects.ModifyMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Objects.ModifyMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultXml = new NodeId(Objects.SetMonitoringModeRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultXml = new NodeId(Objects.SetMonitoringModeResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultXml = new NodeId(Objects.SetTriggeringRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultXml = new NodeId(Objects.SetTriggeringResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultXml = new NodeId(Objects.DeleteMonitoredItemsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultXml = new NodeId(Objects.DeleteMonitoredItemsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultXml = new NodeId(Objects.CreateSubscriptionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultXml = new NodeId(Objects.CreateSubscriptionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultXml = new NodeId(Objects.ModifySubscriptionRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultXml = new NodeId(Objects.ModifySubscriptionResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultXml = new NodeId(Objects.SetPublishingModeRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultXml = new NodeId(Objects.SetPublishingModeResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NotificationMessage_Encoding_DefaultXml = new NodeId(Objects.NotificationMessage_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId NotificationData_Encoding_DefaultXml = new NodeId(Objects.NotificationData_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DataChangeNotification_Encoding_DefaultXml = new NodeId(Objects.DataChangeNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultXml = new NodeId(Objects.MonitoredItemNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventNotificationList_Encoding_DefaultXml = new NodeId(Objects.EventNotificationList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EventFieldList_Encoding_DefaultXml = new NodeId(Objects.EventFieldList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultXml = new NodeId(Objects.HistoryEventFieldList_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultXml = new NodeId(Objects.StatusChangeNotification_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultXml = new NodeId(Objects.SubscriptionAcknowledgement_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId PublishRequest_Encoding_DefaultXml = new NodeId(Objects.PublishRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId PublishResponse_Encoding_DefaultXml = new NodeId(Objects.PublishResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RepublishRequest_Encoding_DefaultXml = new NodeId(Objects.RepublishRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RepublishResponse_Encoding_DefaultXml = new NodeId(Objects.RepublishResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferResult_Encoding_DefaultXml = new NodeId(Objects.TransferResult_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Objects.TransferSubscriptionsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Objects.TransferSubscriptionsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultXml = new NodeId(Objects.DeleteSubscriptionsRequest_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultXml = new NodeId(Objects.DeleteSubscriptionsResponse_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultXml = new NodeId(Objects.RedundantServerDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultXml = new NodeId(Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultXml = new NodeId(Objects.ServerStatusDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Objects.SessionDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultXml = new NodeId(Objects.ServiceCounterDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultXml = new NodeId(Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultXml = new NodeId(Objects.ModelChangeStructureDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultXml = new NodeId(Objects.SemanticChangeStructureDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Range_Encoding_DefaultXml = new NodeId(Objects.Range_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId EUInformation_Encoding_DefaultXml = new NodeId(Objects.EUInformation_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId Annotation_Encoding_DefaultXml = new NodeId(Objects.Annotation_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultXml = new NodeId(Objects.ProgramDiagnosticDataType_Encoding_DefaultXml);

        /// <summary>
        /// The identifier for the Node_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Node_Encoding_DefaultBinary = new NodeId(Objects.Node_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectNode_Encoding_DefaultBinary = new NodeId(Objects.ObjectNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectTypeNode_Encoding_DefaultBinary = new NodeId(Objects.ObjectTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableNode_Encoding_DefaultBinary = new NodeId(Objects.VariableNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableTypeNode_Encoding_DefaultBinary = new NodeId(Objects.VariableTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeNode_Encoding_DefaultBinary = new NodeId(Objects.ReferenceTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MethodNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MethodNode_Encoding_DefaultBinary = new NodeId(Objects.MethodNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewNode_Encoding_DefaultBinary = new NodeId(Objects.ViewNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeNode_Encoding_DefaultBinary = new NodeId(Objects.DataTypeNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceNode_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceNode_Encoding_DefaultBinary = new NodeId(Objects.ReferenceNode_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Argument_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Argument_Encoding_DefaultBinary = new NodeId(Objects.Argument_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TimeZoneDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TimeZoneDataType_Encoding_DefaultBinary = new NodeId(Objects.TimeZoneDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EnumValueInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EnumValueInfo_Encoding_DefaultBinary = new NodeId(Objects.EnumValueInfo_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StatusResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StatusResult_Encoding_DefaultBinary = new NodeId(Objects.StatusResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserTokenPolicy_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserTokenPolicy_Encoding_DefaultBinary = new NodeId(Objects.UserTokenPolicy_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ApplicationDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ApplicationDescription_Encoding_DefaultBinary = new NodeId(Objects.ApplicationDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EndpointDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EndpointDescription_Encoding_DefaultBinary = new NodeId(Objects.EndpointDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserIdentityToken_Encoding_DefaultBinary = new NodeId(Objects.UserIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AnonymousIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AnonymousIdentityToken_Encoding_DefaultBinary = new NodeId(Objects.AnonymousIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UserNameIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UserNameIdentityToken_Encoding_DefaultBinary = new NodeId(Objects.UserNameIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the X509IdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId X509IdentityToken_Encoding_DefaultBinary = new NodeId(Objects.X509IdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the IssuedIdentityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId IssuedIdentityToken_Encoding_DefaultBinary = new NodeId(Objects.IssuedIdentityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EndpointConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EndpointConfiguration_Encoding_DefaultBinary = new NodeId(Objects.EndpointConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SupportedProfile_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SupportedProfile_Encoding_DefaultBinary = new NodeId(Objects.SupportedProfile_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BuildInfo_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BuildInfo_Encoding_DefaultBinary = new NodeId(Objects.BuildInfo_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SoftwareCertificate_Encoding_DefaultBinary = new NodeId(Objects.SoftwareCertificate_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SignedSoftwareCertificate_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SignedSoftwareCertificate_Encoding_DefaultBinary = new NodeId(Objects.SignedSoftwareCertificate_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeAttributes_Encoding_DefaultBinary = new NodeId(Objects.NodeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectAttributes_Encoding_DefaultBinary = new NodeId(Objects.ObjectAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableAttributes_Encoding_DefaultBinary = new NodeId(Objects.VariableAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MethodAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MethodAttributes_Encoding_DefaultBinary = new NodeId(Objects.MethodAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ObjectTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ObjectTypeAttributes_Encoding_DefaultBinary = new NodeId(Objects.ObjectTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the VariableTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId VariableTypeAttributes_Encoding_DefaultBinary = new NodeId(Objects.VariableTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceTypeAttributes_Encoding_DefaultBinary = new NodeId(Objects.ReferenceTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataTypeAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataTypeAttributes_Encoding_DefaultBinary = new NodeId(Objects.DataTypeAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewAttributes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewAttributes_Encoding_DefaultBinary = new NodeId(Objects.ViewAttributes_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesItem_Encoding_DefaultBinary = new NodeId(Objects.AddNodesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesItem_Encoding_DefaultBinary = new NodeId(Objects.AddReferencesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesItem_Encoding_DefaultBinary = new NodeId(Objects.DeleteNodesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesItem_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesItem_Encoding_DefaultBinary = new NodeId(Objects.DeleteReferencesItem_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RequestHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RequestHeader_Encoding_DefaultBinary = new NodeId(Objects.RequestHeader_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ResponseHeader_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ResponseHeader_Encoding_DefaultBinary = new NodeId(Objects.ResponseHeader_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServiceFault_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServiceFault_Encoding_DefaultBinary = new NodeId(Objects.ServiceFault_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ScalarTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ScalarTestType_Encoding_DefaultBinary = new NodeId(Objects.ScalarTestType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ArrayTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ArrayTestType_Encoding_DefaultBinary = new NodeId(Objects.ArrayTestType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CompositeTestType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CompositeTestType_Encoding_DefaultBinary = new NodeId(Objects.CompositeTestType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TestStackRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TestStackRequest_Encoding_DefaultBinary = new NodeId(Objects.TestStackRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TestStackResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TestStackResponse_Encoding_DefaultBinary = new NodeId(Objects.TestStackResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TestStackExRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TestStackExRequest_Encoding_DefaultBinary = new NodeId(Objects.TestStackExRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TestStackExResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TestStackExResponse_Encoding_DefaultBinary = new NodeId(Objects.TestStackExResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersRequest_Encoding_DefaultBinary = new NodeId(Objects.FindServersRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FindServersResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FindServersResponse_Encoding_DefaultBinary = new NodeId(Objects.FindServersResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the GetEndpointsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId GetEndpointsRequest_Encoding_DefaultBinary = new NodeId(Objects.GetEndpointsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the GetEndpointsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId GetEndpointsResponse_Encoding_DefaultBinary = new NodeId(Objects.GetEndpointsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisteredServer_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisteredServer_Encoding_DefaultBinary = new NodeId(Objects.RegisteredServer_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServerRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServerRequest_Encoding_DefaultBinary = new NodeId(Objects.RegisterServerRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterServerResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterServerResponse_Encoding_DefaultBinary = new NodeId(Objects.RegisterServerResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ChannelSecurityToken_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ChannelSecurityToken_Encoding_DefaultBinary = new NodeId(Objects.ChannelSecurityToken_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the OpenSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Objects.OpenSecureChannelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the OpenSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId OpenSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Objects.OpenSecureChannelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSecureChannelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelRequest_Encoding_DefaultBinary = new NodeId(Objects.CloseSecureChannelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSecureChannelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSecureChannelResponse_Encoding_DefaultBinary = new NodeId(Objects.CloseSecureChannelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SignatureData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SignatureData_Encoding_DefaultBinary = new NodeId(Objects.SignatureData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSessionRequest_Encoding_DefaultBinary = new NodeId(Objects.CreateSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSessionResponse_Encoding_DefaultBinary = new NodeId(Objects.CreateSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ActivateSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ActivateSessionRequest_Encoding_DefaultBinary = new NodeId(Objects.ActivateSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ActivateSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ActivateSessionResponse_Encoding_DefaultBinary = new NodeId(Objects.ActivateSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSessionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSessionRequest_Encoding_DefaultBinary = new NodeId(Objects.CloseSessionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CloseSessionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CloseSessionResponse_Encoding_DefaultBinary = new NodeId(Objects.CloseSessionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CancelRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CancelRequest_Encoding_DefaultBinary = new NodeId(Objects.CancelRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CancelResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CancelResponse_Encoding_DefaultBinary = new NodeId(Objects.CancelResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesResult_Encoding_DefaultBinary = new NodeId(Objects.AddNodesResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesRequest_Encoding_DefaultBinary = new NodeId(Objects.AddNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddNodesResponse_Encoding_DefaultBinary = new NodeId(Objects.AddNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesRequest_Encoding_DefaultBinary = new NodeId(Objects.AddReferencesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AddReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AddReferencesResponse_Encoding_DefaultBinary = new NodeId(Objects.AddReferencesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesRequest_Encoding_DefaultBinary = new NodeId(Objects.DeleteNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteNodesResponse_Encoding_DefaultBinary = new NodeId(Objects.DeleteNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesRequest_Encoding_DefaultBinary = new NodeId(Objects.DeleteReferencesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteReferencesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteReferencesResponse_Encoding_DefaultBinary = new NodeId(Objects.DeleteReferencesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ViewDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ViewDescription_Encoding_DefaultBinary = new NodeId(Objects.ViewDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseDescription_Encoding_DefaultBinary = new NodeId(Objects.BrowseDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReferenceDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReferenceDescription_Encoding_DefaultBinary = new NodeId(Objects.ReferenceDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseResult_Encoding_DefaultBinary = new NodeId(Objects.BrowseResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseRequest_Encoding_DefaultBinary = new NodeId(Objects.BrowseRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseResponse_Encoding_DefaultBinary = new NodeId(Objects.BrowseResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseNextRequest_Encoding_DefaultBinary = new NodeId(Objects.BrowseNextRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowseNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowseNextResponse_Encoding_DefaultBinary = new NodeId(Objects.BrowseNextResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RelativePathElement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RelativePathElement_Encoding_DefaultBinary = new NodeId(Objects.RelativePathElement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RelativePath_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RelativePath_Encoding_DefaultBinary = new NodeId(Objects.RelativePath_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePath_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePath_Encoding_DefaultBinary = new NodeId(Objects.BrowsePath_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePathTarget_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePathTarget_Encoding_DefaultBinary = new NodeId(Objects.BrowsePathTarget_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the BrowsePathResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId BrowsePathResult_Encoding_DefaultBinary = new NodeId(Objects.BrowsePathResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary = new NodeId(Objects.TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary = new NodeId(Objects.TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterNodesRequest_Encoding_DefaultBinary = new NodeId(Objects.RegisterNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RegisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RegisterNodesResponse_Encoding_DefaultBinary = new NodeId(Objects.RegisterNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UnregisterNodesRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesRequest_Encoding_DefaultBinary = new NodeId(Objects.UnregisterNodesRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UnregisterNodesResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UnregisterNodesResponse_Encoding_DefaultBinary = new NodeId(Objects.UnregisterNodesResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryDataDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryDataDescription_Encoding_DefaultBinary = new NodeId(Objects.QueryDataDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeTypeDescription_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeTypeDescription_Encoding_DefaultBinary = new NodeId(Objects.NodeTypeDescription_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryDataSet_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryDataSet_Encoding_DefaultBinary = new NodeId(Objects.QueryDataSet_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NodeReference_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NodeReference_Encoding_DefaultBinary = new NodeId(Objects.NodeReference_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterElement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterElement_Encoding_DefaultBinary = new NodeId(Objects.ContentFilterElement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilter_Encoding_DefaultBinary = new NodeId(Objects.ContentFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the FilterOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId FilterOperand_Encoding_DefaultBinary = new NodeId(Objects.FilterOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ElementOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ElementOperand_Encoding_DefaultBinary = new NodeId(Objects.ElementOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the LiteralOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId LiteralOperand_Encoding_DefaultBinary = new NodeId(Objects.LiteralOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AttributeOperand_Encoding_DefaultBinary = new NodeId(Objects.AttributeOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SimpleAttributeOperand_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SimpleAttributeOperand_Encoding_DefaultBinary = new NodeId(Objects.SimpleAttributeOperand_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterElementResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterElementResult_Encoding_DefaultBinary = new NodeId(Objects.ContentFilterElementResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ContentFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ContentFilterResult_Encoding_DefaultBinary = new NodeId(Objects.ContentFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ParsingResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ParsingResult_Encoding_DefaultBinary = new NodeId(Objects.ParsingResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryFirstRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryFirstRequest_Encoding_DefaultBinary = new NodeId(Objects.QueryFirstRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryFirstResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryFirstResponse_Encoding_DefaultBinary = new NodeId(Objects.QueryFirstResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryNextRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryNextRequest_Encoding_DefaultBinary = new NodeId(Objects.QueryNextRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the QueryNextResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId QueryNextResponse_Encoding_DefaultBinary = new NodeId(Objects.QueryNextResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadValueId_Encoding_DefaultBinary = new NodeId(Objects.ReadValueId_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadRequest_Encoding_DefaultBinary = new NodeId(Objects.ReadRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadResponse_Encoding_DefaultBinary = new NodeId(Objects.ReadResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadValueId_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadValueId_Encoding_DefaultBinary = new NodeId(Objects.HistoryReadValueId_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadResult_Encoding_DefaultBinary = new NodeId(Objects.HistoryReadResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadDetails_Encoding_DefaultBinary = new NodeId(Objects.HistoryReadDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadEventDetails_Encoding_DefaultBinary = new NodeId(Objects.ReadEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Objects.ReadRawModifiedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadProcessedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadProcessedDetails_Encoding_DefaultBinary = new NodeId(Objects.ReadProcessedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ReadAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ReadAtTimeDetails_Encoding_DefaultBinary = new NodeId(Objects.ReadAtTimeDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryData_Encoding_DefaultBinary = new NodeId(Objects.HistoryData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryEvent_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryEvent_Encoding_DefaultBinary = new NodeId(Objects.HistoryEvent_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadRequest_Encoding_DefaultBinary = new NodeId(Objects.HistoryReadRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryReadResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryReadResponse_Encoding_DefaultBinary = new NodeId(Objects.HistoryReadResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteValue_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteValue_Encoding_DefaultBinary = new NodeId(Objects.WriteValue_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteRequest_Encoding_DefaultBinary = new NodeId(Objects.WriteRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the WriteResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId WriteResponse_Encoding_DefaultBinary = new NodeId(Objects.WriteResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateDetails_Encoding_DefaultBinary = new NodeId(Objects.HistoryUpdateDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UpdateDataDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UpdateDataDetails_Encoding_DefaultBinary = new NodeId(Objects.UpdateDataDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the InsertReplaceEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId InsertReplaceEventDetails_Encoding_DefaultBinary = new NodeId(Objects.InsertReplaceEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the UpdateEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId UpdateEventDetails_Encoding_DefaultBinary = new NodeId(Objects.UpdateEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteRawModifiedDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteRawModifiedDetails_Encoding_DefaultBinary = new NodeId(Objects.DeleteRawModifiedDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteAtTimeDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteAtTimeDetails_Encoding_DefaultBinary = new NodeId(Objects.DeleteAtTimeDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteEventDetails_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteEventDetails_Encoding_DefaultBinary = new NodeId(Objects.DeleteEventDetails_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResult_Encoding_DefaultBinary = new NodeId(Objects.HistoryUpdateResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateEventResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateEventResult_Encoding_DefaultBinary = new NodeId(Objects.HistoryUpdateEventResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateRequest_Encoding_DefaultBinary = new NodeId(Objects.HistoryUpdateRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryUpdateResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryUpdateResponse_Encoding_DefaultBinary = new NodeId(Objects.HistoryUpdateResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallMethodRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallMethodRequest_Encoding_DefaultBinary = new NodeId(Objects.CallMethodRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallMethodResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallMethodResult_Encoding_DefaultBinary = new NodeId(Objects.CallMethodResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallRequest_Encoding_DefaultBinary = new NodeId(Objects.CallRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CallResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CallResponse_Encoding_DefaultBinary = new NodeId(Objects.CallResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringFilter_Encoding_DefaultBinary = new NodeId(Objects.MonitoringFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataChangeFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataChangeFilter_Encoding_DefaultBinary = new NodeId(Objects.DataChangeFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFilter_Encoding_DefaultBinary = new NodeId(Objects.EventFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateConfiguration_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateConfiguration_Encoding_DefaultBinary = new NodeId(Objects.AggregateConfiguration_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateFilter_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateFilter_Encoding_DefaultBinary = new NodeId(Objects.AggregateFilter_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringFilterResult_Encoding_DefaultBinary = new NodeId(Objects.MonitoringFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFilterResult_Encoding_DefaultBinary = new NodeId(Objects.EventFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the AggregateFilterResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId AggregateFilterResult_Encoding_DefaultBinary = new NodeId(Objects.AggregateFilterResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoringParameters_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoringParameters_Encoding_DefaultBinary = new NodeId(Objects.MonitoringParameters_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemCreateRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateRequest_Encoding_DefaultBinary = new NodeId(Objects.MonitoredItemCreateRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemCreateResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemCreateResult_Encoding_DefaultBinary = new NodeId(Objects.MonitoredItemCreateResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Objects.CreateMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Objects.CreateMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemModifyRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyRequest_Encoding_DefaultBinary = new NodeId(Objects.MonitoredItemModifyRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemModifyResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemModifyResult_Encoding_DefaultBinary = new NodeId(Objects.MonitoredItemModifyResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Objects.ModifyMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifyMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifyMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Objects.ModifyMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetMonitoringModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeRequest_Encoding_DefaultBinary = new NodeId(Objects.SetMonitoringModeRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetMonitoringModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetMonitoringModeResponse_Encoding_DefaultBinary = new NodeId(Objects.SetMonitoringModeResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetTriggeringRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetTriggeringRequest_Encoding_DefaultBinary = new NodeId(Objects.SetTriggeringRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetTriggeringResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetTriggeringResponse_Encoding_DefaultBinary = new NodeId(Objects.SetTriggeringResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsRequest_Encoding_DefaultBinary = new NodeId(Objects.DeleteMonitoredItemsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteMonitoredItemsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteMonitoredItemsResponse_Encoding_DefaultBinary = new NodeId(Objects.DeleteMonitoredItemsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionRequest_Encoding_DefaultBinary = new NodeId(Objects.CreateSubscriptionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the CreateSubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId CreateSubscriptionResponse_Encoding_DefaultBinary = new NodeId(Objects.CreateSubscriptionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifySubscriptionRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionRequest_Encoding_DefaultBinary = new NodeId(Objects.ModifySubscriptionRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModifySubscriptionResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModifySubscriptionResponse_Encoding_DefaultBinary = new NodeId(Objects.ModifySubscriptionResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetPublishingModeRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeRequest_Encoding_DefaultBinary = new NodeId(Objects.SetPublishingModeRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SetPublishingModeResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SetPublishingModeResponse_Encoding_DefaultBinary = new NodeId(Objects.SetPublishingModeResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NotificationMessage_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NotificationMessage_Encoding_DefaultBinary = new NodeId(Objects.NotificationMessage_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the NotificationData_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId NotificationData_Encoding_DefaultBinary = new NodeId(Objects.NotificationData_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DataChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DataChangeNotification_Encoding_DefaultBinary = new NodeId(Objects.DataChangeNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the MonitoredItemNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId MonitoredItemNotification_Encoding_DefaultBinary = new NodeId(Objects.MonitoredItemNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventNotificationList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventNotificationList_Encoding_DefaultBinary = new NodeId(Objects.EventNotificationList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EventFieldList_Encoding_DefaultBinary = new NodeId(Objects.EventFieldList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the HistoryEventFieldList_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId HistoryEventFieldList_Encoding_DefaultBinary = new NodeId(Objects.HistoryEventFieldList_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the StatusChangeNotification_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId StatusChangeNotification_Encoding_DefaultBinary = new NodeId(Objects.StatusChangeNotification_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SubscriptionAcknowledgement_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SubscriptionAcknowledgement_Encoding_DefaultBinary = new NodeId(Objects.SubscriptionAcknowledgement_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the PublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId PublishRequest_Encoding_DefaultBinary = new NodeId(Objects.PublishRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the PublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId PublishResponse_Encoding_DefaultBinary = new NodeId(Objects.PublishResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RepublishRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RepublishRequest_Encoding_DefaultBinary = new NodeId(Objects.RepublishRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RepublishResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RepublishResponse_Encoding_DefaultBinary = new NodeId(Objects.RepublishResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferResult_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferResult_Encoding_DefaultBinary = new NodeId(Objects.TransferResult_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Objects.TransferSubscriptionsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the TransferSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId TransferSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Objects.TransferSubscriptionsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsRequest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsRequest_Encoding_DefaultBinary = new NodeId(Objects.DeleteSubscriptionsRequest_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the DeleteSubscriptionsResponse_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId DeleteSubscriptionsResponse_Encoding_DefaultBinary = new NodeId(Objects.DeleteSubscriptionsResponse_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the RedundantServerDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId RedundantServerDataType_Encoding_DefaultBinary = new NodeId(Objects.RedundantServerDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Objects.SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary = new NodeId(Objects.ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServerStatusDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServerStatusDataType_Encoding_DefaultBinary = new NodeId(Objects.ServerStatusDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SessionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Objects.SessionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Objects.SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ServiceCounterDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ServiceCounterDataType_Encoding_DefaultBinary = new NodeId(Objects.ServiceCounterDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsDataType_Encoding_DefaultBinary = new NodeId(Objects.SubscriptionDiagnosticsDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ModelChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ModelChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Objects.ModelChangeStructureDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the SemanticChangeStructureDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId SemanticChangeStructureDataType_Encoding_DefaultBinary = new NodeId(Objects.SemanticChangeStructureDataType_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Range_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Range_Encoding_DefaultBinary = new NodeId(Objects.Range_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the EUInformation_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId EUInformation_Encoding_DefaultBinary = new NodeId(Objects.EUInformation_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the Annotation_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId Annotation_Encoding_DefaultBinary = new NodeId(Objects.Annotation_Encoding_DefaultBinary);

        /// <summary>
        /// The identifier for the ProgramDiagnosticDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticDataType_Encoding_DefaultBinary = new NodeId(Objects.ProgramDiagnosticDataType_Encoding_DefaultBinary);
    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the BaseObjectType ObjectType.
        /// </summary>
        public static readonly NodeId BaseObjectType = new NodeId(ObjectTypes.BaseObjectType);

        /// <summary>
        /// The identifier for the FolderType ObjectType.
        /// </summary>
        public static readonly NodeId FolderType = new NodeId(ObjectTypes.FolderType);

        /// <summary>
        /// The identifier for the DataTypeSystemType ObjectType.
        /// </summary>
        public static readonly NodeId DataTypeSystemType = new NodeId(ObjectTypes.DataTypeSystemType);

        /// <summary>
        /// The identifier for the DataTypeEncodingType ObjectType.
        /// </summary>
        public static readonly NodeId DataTypeEncodingType = new NodeId(ObjectTypes.DataTypeEncodingType);

        /// <summary>
        /// The identifier for the ModellingRuleType ObjectType.
        /// </summary>
        public static readonly NodeId ModellingRuleType = new NodeId(ObjectTypes.ModellingRuleType);

        /// <summary>
        /// The identifier for the ServerType ObjectType.
        /// </summary>
        public static readonly NodeId ServerType = new NodeId(ObjectTypes.ServerType);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType ObjectType.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType = new NodeId(ObjectTypes.ServerCapabilitiesType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType ObjectType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType = new NodeId(ObjectTypes.ServerDiagnosticsType);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType ObjectType.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType = new NodeId(ObjectTypes.SessionsDiagnosticsSummaryType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType ObjectType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType = new NodeId(ObjectTypes.SessionDiagnosticsObjectType);

        /// <summary>
        /// The identifier for the VendorServerInfoType ObjectType.
        /// </summary>
        public static readonly NodeId VendorServerInfoType = new NodeId(ObjectTypes.VendorServerInfoType);

        /// <summary>
        /// The identifier for the ServerRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId ServerRedundancyType = new NodeId(ObjectTypes.ServerRedundancyType);

        /// <summary>
        /// The identifier for the TransparentRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType = new NodeId(ObjectTypes.TransparentRedundancyType);

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType ObjectType.
        /// </summary>
        public static readonly NodeId NonTransparentRedundancyType = new NodeId(ObjectTypes.NonTransparentRedundancyType);

        /// <summary>
        /// The identifier for the BaseEventType ObjectType.
        /// </summary>
        public static readonly NodeId BaseEventType = new NodeId(ObjectTypes.BaseEventType);

        /// <summary>
        /// The identifier for the EventQueueOverflowEventType ObjectType.
        /// </summary>
        public static readonly NodeId EventQueueOverflowEventType = new NodeId(ObjectTypes.EventQueueOverflowEventType);

        /// <summary>
        /// The identifier for the AuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditEventType = new NodeId(ObjectTypes.AuditEventType);

        /// <summary>
        /// The identifier for the AuditSecurityEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditSecurityEventType = new NodeId(ObjectTypes.AuditSecurityEventType);

        /// <summary>
        /// The identifier for the AuditChannelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditChannelEventType = new NodeId(ObjectTypes.AuditChannelEventType);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType = new NodeId(ObjectTypes.AuditOpenSecureChannelEventType);

        /// <summary>
        /// The identifier for the AuditSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditSessionEventType = new NodeId(ObjectTypes.AuditSessionEventType);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType = new NodeId(ObjectTypes.AuditCreateSessionEventType);

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUrlMismatchEventType = new NodeId(ObjectTypes.AuditUrlMismatchEventType);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType = new NodeId(ObjectTypes.AuditActivateSessionEventType);

        /// <summary>
        /// The identifier for the AuditCancelEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCancelEventType = new NodeId(ObjectTypes.AuditCancelEventType);

        /// <summary>
        /// The identifier for the AuditCertificateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateEventType = new NodeId(ObjectTypes.AuditCertificateEventType);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType = new NodeId(ObjectTypes.AuditCertificateDataMismatchEventType);

        /// <summary>
        /// The identifier for the AuditCertificateExpiredEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateExpiredEventType = new NodeId(ObjectTypes.AuditCertificateExpiredEventType);

        /// <summary>
        /// The identifier for the AuditCertificateInvalidEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateInvalidEventType = new NodeId(ObjectTypes.AuditCertificateInvalidEventType);

        /// <summary>
        /// The identifier for the AuditCertificateUntrustedEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateUntrustedEventType = new NodeId(ObjectTypes.AuditCertificateUntrustedEventType);

        /// <summary>
        /// The identifier for the AuditCertificateRevokedEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateRevokedEventType = new NodeId(ObjectTypes.AuditCertificateRevokedEventType);

        /// <summary>
        /// The identifier for the AuditCertificateMismatchEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditCertificateMismatchEventType = new NodeId(ObjectTypes.AuditCertificateMismatchEventType);

        /// <summary>
        /// The identifier for the AuditNodeManagementEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditNodeManagementEventType = new NodeId(ObjectTypes.AuditNodeManagementEventType);

        /// <summary>
        /// The identifier for the AuditAddNodesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditAddNodesEventType = new NodeId(ObjectTypes.AuditAddNodesEventType);

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditDeleteNodesEventType = new NodeId(ObjectTypes.AuditDeleteNodesEventType);

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditAddReferencesEventType = new NodeId(ObjectTypes.AuditAddReferencesEventType);

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditDeleteReferencesEventType = new NodeId(ObjectTypes.AuditDeleteReferencesEventType);

        /// <summary>
        /// The identifier for the AuditUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateEventType = new NodeId(ObjectTypes.AuditUpdateEventType);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType = new NodeId(ObjectTypes.AuditWriteUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryUpdateEventType = new NodeId(ObjectTypes.AuditHistoryUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType = new NodeId(ObjectTypes.AuditHistoryEventUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType = new NodeId(ObjectTypes.AuditHistoryValueUpdateEventType);

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryDeleteEventType = new NodeId(ObjectTypes.AuditHistoryDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType = new NodeId(ObjectTypes.AuditHistoryRawModifyDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType = new NodeId(ObjectTypes.AuditHistoryAtTimeDeleteEventType);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType = new NodeId(ObjectTypes.AuditHistoryEventDeleteEventType);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType = new NodeId(ObjectTypes.AuditUpdateMethodEventType);

        /// <summary>
        /// The identifier for the SystemEventType ObjectType.
        /// </summary>
        public static readonly NodeId SystemEventType = new NodeId(ObjectTypes.SystemEventType);

        /// <summary>
        /// The identifier for the DeviceFailureEventType ObjectType.
        /// </summary>
        public static readonly NodeId DeviceFailureEventType = new NodeId(ObjectTypes.DeviceFailureEventType);

        /// <summary>
        /// The identifier for the BaseModelChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId BaseModelChangeEventType = new NodeId(ObjectTypes.BaseModelChangeEventType);

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId GeneralModelChangeEventType = new NodeId(ObjectTypes.GeneralModelChangeEventType);

        /// <summary>
        /// The identifier for the SemanticChangeEventType ObjectType.
        /// </summary>
        public static readonly NodeId SemanticChangeEventType = new NodeId(ObjectTypes.SemanticChangeEventType);

        /// <summary>
        /// The identifier for the StateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId StateMachineType = new NodeId(ObjectTypes.StateMachineType);

        /// <summary>
        /// The identifier for the FiniteStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType = new NodeId(ObjectTypes.FiniteStateMachineType);

        /// <summary>
        /// The identifier for the StateType ObjectType.
        /// </summary>
        public static readonly NodeId StateType = new NodeId(ObjectTypes.StateType);

        /// <summary>
        /// The identifier for the InitialStateType ObjectType.
        /// </summary>
        public static readonly NodeId InitialStateType = new NodeId(ObjectTypes.InitialStateType);

        /// <summary>
        /// The identifier for the TransitionType ObjectType.
        /// </summary>
        public static readonly NodeId TransitionType = new NodeId(ObjectTypes.TransitionType);

        /// <summary>
        /// The identifier for the TransitionEventType ObjectType.
        /// </summary>
        public static readonly NodeId TransitionEventType = new NodeId(ObjectTypes.TransitionEventType);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType = new NodeId(ObjectTypes.AuditUpdateStateEventType);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType ObjectType.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType = new NodeId(ObjectTypes.HistoricalConfigurationType);

        /// <summary>
        /// The identifier for the HistoricalEventConfigurationType ObjectType.
        /// </summary>
        public static readonly NodeId HistoricalEventConfigurationType = new NodeId(ObjectTypes.HistoricalEventConfigurationType);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType ObjectType.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType = new NodeId(ObjectTypes.HistoryServerCapabilitiesType);

        /// <summary>
        /// The identifier for the AggregateFunctionType ObjectType.
        /// </summary>
        public static readonly NodeId AggregateFunctionType = new NodeId(ObjectTypes.AggregateFunctionType);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType = new NodeId(ObjectTypes.ProgramTransitionEventType);

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramTransitionAuditEventType = new NodeId(ObjectTypes.ProgramTransitionAuditEventType);

        /// <summary>
        /// The identifier for the ProgramStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType = new NodeId(ObjectTypes.ProgramStateMachineType);

        /// <summary>
        /// The identifier for the BaseConditionType ObjectType.
        /// </summary>
        public static readonly NodeId BaseConditionType = new NodeId(ObjectTypes.BaseConditionType);

        /// <summary>
        /// The identifier for the ConditionType ObjectType.
        /// </summary>
        public static readonly NodeId ConditionType = new NodeId(ObjectTypes.ConditionType);

        /// <summary>
        /// The identifier for the ConditionGroupType ObjectType.
        /// </summary>
        public static readonly NodeId ConditionGroupType = new NodeId(ObjectTypes.ConditionGroupType);

        /// <summary>
        /// The identifier for the RefreshStartEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshStartEventType = new NodeId(ObjectTypes.RefreshStartEventType);

        /// <summary>
        /// The identifier for the RefreshEndEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshEndEventType = new NodeId(ObjectTypes.RefreshEndEventType);

        /// <summary>
        /// The identifier for the RefreshRequiredEventType ObjectType.
        /// </summary>
        public static readonly NodeId RefreshRequiredEventType = new NodeId(ObjectTypes.RefreshRequiredEventType);

        /// <summary>
        /// The identifier for the AuditConditionEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionEventType = new NodeId(ObjectTypes.AuditConditionEventType);

        /// <summary>
        /// The identifier for the BaseConditionStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId BaseConditionStateMachineType = new NodeId(ObjectTypes.BaseConditionStateMachineType);

        /// <summary>
        /// The identifier for the ConditionStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ConditionStateMachineType = new NodeId(ObjectTypes.ConditionStateMachineType);

        /// <summary>
        /// The identifier for the AuditConditionEnableEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionEnableEventType = new NodeId(ObjectTypes.AuditConditionEnableEventType);

        /// <summary>
        /// The identifier for the StatusStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId StatusStateMachineType = new NodeId(ObjectTypes.StatusStateMachineType);

        /// <summary>
        /// The identifier for the SeverityStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId SeverityStateMachineType = new NodeId(ObjectTypes.SeverityStateMachineType);

        /// <summary>
        /// The identifier for the CommentStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId CommentStateMachineType = new NodeId(ObjectTypes.CommentStateMachineType);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType = new NodeId(ObjectTypes.CommentPreviousStateMachineType);

        /// <summary>
        /// The identifier for the AuditConditionCommentEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionCommentEventType = new NodeId(ObjectTypes.AuditConditionCommentEventType);

        /// <summary>
        /// The identifier for the DialogConditionType ObjectType.
        /// </summary>
        public static readonly NodeId DialogConditionType = new NodeId(ObjectTypes.DialogConditionType);

        /// <summary>
        /// The identifier for the OkDialogConditionType ObjectType.
        /// </summary>
        public static readonly NodeId OkDialogConditionType = new NodeId(ObjectTypes.OkDialogConditionType);

        /// <summary>
        /// The identifier for the OkDialogStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId OkDialogStateMachineType = new NodeId(ObjectTypes.OkDialogStateMachineType);

        /// <summary>
        /// The identifier for the OkDialogSubStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId OkDialogSubStateMachineType = new NodeId(ObjectTypes.OkDialogSubStateMachineType);

        /// <summary>
        /// The identifier for the AuditConditionDialogEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditConditionDialogEventType = new NodeId(ObjectTypes.AuditConditionDialogEventType);

        /// <summary>
        /// The identifier for the OkCancelDialogConditionType ObjectType.
        /// </summary>
        public static readonly NodeId OkCancelDialogConditionType = new NodeId(ObjectTypes.OkCancelDialogConditionType);

        /// <summary>
        /// The identifier for the OkCancelDialogStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId OkCancelDialogStateMachineType = new NodeId(ObjectTypes.OkCancelDialogStateMachineType);

        /// <summary>
        /// The identifier for the OkCancelDialogSubStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId OkCancelDialogSubStateMachineType = new NodeId(ObjectTypes.OkCancelDialogSubStateMachineType);

        /// <summary>
        /// The identifier for the YesNoCancelDialogConditionType ObjectType.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogConditionType = new NodeId(ObjectTypes.YesNoCancelDialogConditionType);

        /// <summary>
        /// The identifier for the YesNoCancelDialogStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogStateMachineType = new NodeId(ObjectTypes.YesNoCancelDialogStateMachineType);

        /// <summary>
        /// The identifier for the YesNoCancelDialogSubStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId YesNoCancelDialogSubStateMachineType = new NodeId(ObjectTypes.YesNoCancelDialogSubStateMachineType);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType ObjectType.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType = new NodeId(ObjectTypes.AcknowledgeableConditionType);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionStateMachineType = new NodeId(ObjectTypes.AcknowledgeableConditionStateMachineType);

        /// <summary>
        /// The identifier for the AuditAcknowledgeEventType ObjectType.
        /// </summary>
        public static readonly NodeId AuditAcknowledgeEventType = new NodeId(ObjectTypes.AuditAcknowledgeEventType);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType = new NodeId(ObjectTypes.AcknowledgeStateMachineType);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType = new NodeId(ObjectTypes.ConfirmedStateMachineType);

        /// <summary>
        /// The identifier for the AckPreviousStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId AckPreviousStateMachineType = new NodeId(ObjectTypes.AckPreviousStateMachineType);

        /// <summary>
        /// The identifier for the AlarmConditionType ObjectType.
        /// </summary>
        public static readonly NodeId AlarmConditionType = new NodeId(ObjectTypes.AlarmConditionType);

        /// <summary>
        /// The identifier for the AlarmConditionStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId AlarmConditionStateMachineType = new NodeId(ObjectTypes.AlarmConditionStateMachineType);

        /// <summary>
        /// The identifier for the AlarmStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId AlarmStateMachineType = new NodeId(ObjectTypes.AlarmStateMachineType);

        /// <summary>
        /// The identifier for the ShelvedAuditEventType ObjectType.
        /// </summary>
        public static readonly NodeId ShelvedAuditEventType = new NodeId(ObjectTypes.ShelvedAuditEventType);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType = new NodeId(ObjectTypes.ShelvedStateMachineType);

        /// <summary>
        /// The identifier for the SuppressedStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId SuppressedStateMachineType = new NodeId(ObjectTypes.SuppressedStateMachineType);

        /// <summary>
        /// The identifier for the ProcessAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId ProcessAlarmType = new NodeId(ObjectTypes.ProcessAlarmType);

        /// <summary>
        /// The identifier for the LevelAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId LevelAlarmType = new NodeId(ObjectTypes.LevelAlarmType);

        /// <summary>
        /// The identifier for the SingleLevelAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId SingleLevelAlarmType = new NodeId(ObjectTypes.SingleLevelAlarmType);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType ObjectType.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType = new NodeId(ObjectTypes.MultiLevelAlarmType);

        /// <summary>
        /// The identifier for the MultiLevelAlarmConditionStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmConditionStateMachineType = new NodeId(ObjectTypes.MultiLevelAlarmConditionStateMachineType);

        /// <summary>
        /// The identifier for the MultiLevelAlarmStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmStateMachineType = new NodeId(ObjectTypes.MultiLevelAlarmStateMachineType);

        /// <summary>
        /// The identifier for the MultiLevelAlarmActiveSubStateMachineType ObjectType.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmActiveSubStateMachineType = new NodeId(ObjectTypes.MultiLevelAlarmActiveSubStateMachineType);
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the References ReferenceType.
        /// </summary>
        public static readonly NodeId References = new NodeId(ReferenceTypes.References);

        /// <summary>
        /// The identifier for the NonHierarchicalReferences ReferenceType.
        /// </summary>
        public static readonly NodeId NonHierarchicalReferences = new NodeId(ReferenceTypes.NonHierarchicalReferences);

        /// <summary>
        /// The identifier for the HierarchicalReferences ReferenceType.
        /// </summary>
        public static readonly NodeId HierarchicalReferences = new NodeId(ReferenceTypes.HierarchicalReferences);

        /// <summary>
        /// The identifier for the HasChild ReferenceType.
        /// </summary>
        public static readonly NodeId HasChild = new NodeId(ReferenceTypes.HasChild);

        /// <summary>
        /// The identifier for the Organizes ReferenceType.
        /// </summary>
        public static readonly NodeId Organizes = new NodeId(ReferenceTypes.Organizes);

        /// <summary>
        /// The identifier for the HasEventSource ReferenceType.
        /// </summary>
        public static readonly NodeId HasEventSource = new NodeId(ReferenceTypes.HasEventSource);

        /// <summary>
        /// The identifier for the HasModelParent ReferenceType.
        /// </summary>
        public static readonly NodeId HasModelParent = new NodeId(ReferenceTypes.HasModelParent);

        /// <summary>
        /// The identifier for the HasModellingRule ReferenceType.
        /// </summary>
        public static readonly NodeId HasModellingRule = new NodeId(ReferenceTypes.HasModellingRule);

        /// <summary>
        /// The identifier for the HasEncoding ReferenceType.
        /// </summary>
        public static readonly NodeId HasEncoding = new NodeId(ReferenceTypes.HasEncoding);

        /// <summary>
        /// The identifier for the HasDescription ReferenceType.
        /// </summary>
        public static readonly NodeId HasDescription = new NodeId(ReferenceTypes.HasDescription);

        /// <summary>
        /// The identifier for the HasTypeDefinition ReferenceType.
        /// </summary>
        public static readonly NodeId HasTypeDefinition = new NodeId(ReferenceTypes.HasTypeDefinition);

        /// <summary>
        /// The identifier for the GeneratesEvent ReferenceType.
        /// </summary>
        public static readonly NodeId GeneratesEvent = new NodeId(ReferenceTypes.GeneratesEvent);

        /// <summary>
        /// The identifier for the AlwaysGeneratesEvent ReferenceType.
        /// </summary>
        public static readonly NodeId AlwaysGeneratesEvent = new NodeId(ReferenceTypes.AlwaysGeneratesEvent);

        /// <summary>
        /// The identifier for the HasEventHistory ReferenceType.
        /// </summary>
        public static readonly NodeId HasEventHistory = new NodeId(ReferenceTypes.HasEventHistory);

        /// <summary>
        /// The identifier for the Aggregates ReferenceType.
        /// </summary>
        public static readonly NodeId Aggregates = new NodeId(ReferenceTypes.Aggregates);

        /// <summary>
        /// The identifier for the HasSubtype ReferenceType.
        /// </summary>
        public static readonly NodeId HasSubtype = new NodeId(ReferenceTypes.HasSubtype);

        /// <summary>
        /// The identifier for the HasProperty ReferenceType.
        /// </summary>
        public static readonly NodeId HasProperty = new NodeId(ReferenceTypes.HasProperty);

        /// <summary>
        /// The identifier for the HasComponent ReferenceType.
        /// </summary>
        public static readonly NodeId HasComponent = new NodeId(ReferenceTypes.HasComponent);

        /// <summary>
        /// The identifier for the HasNotifier ReferenceType.
        /// </summary>
        public static readonly NodeId HasNotifier = new NodeId(ReferenceTypes.HasNotifier);

        /// <summary>
        /// The identifier for the HasOrderedComponent ReferenceType.
        /// </summary>
        public static readonly NodeId HasOrderedComponent = new NodeId(ReferenceTypes.HasOrderedComponent);

        /// <summary>
        /// The identifier for the FromState ReferenceType.
        /// </summary>
        public static readonly NodeId FromState = new NodeId(ReferenceTypes.FromState);

        /// <summary>
        /// The identifier for the ToState ReferenceType.
        /// </summary>
        public static readonly NodeId ToState = new NodeId(ReferenceTypes.ToState);

        /// <summary>
        /// The identifier for the HasCause ReferenceType.
        /// </summary>
        public static readonly NodeId HasCause = new NodeId(ReferenceTypes.HasCause);

        /// <summary>
        /// The identifier for the HasEffect ReferenceType.
        /// </summary>
        public static readonly NodeId HasEffect = new NodeId(ReferenceTypes.HasEffect);

        /// <summary>
        /// The identifier for the HasSubStateMachine ReferenceType.
        /// </summary>
        public static readonly NodeId HasSubStateMachine = new NodeId(ReferenceTypes.HasSubStateMachine);

        /// <summary>
        /// The identifier for the HasHistoricalConfiguration ReferenceType.
        /// </summary>
        public static readonly NodeId HasHistoricalConfiguration = new NodeId(ReferenceTypes.HasHistoricalConfiguration);

        /// <summary>
        /// The identifier for the HasHistoricalEventConfiguration ReferenceType.
        /// </summary>
        public static readonly NodeId HasHistoricalEventConfiguration = new NodeId(ReferenceTypes.HasHistoricalEventConfiguration);
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the Enumeration_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId Enumeration_EnumStrings = new NodeId(Variables.Enumeration_EnumStrings);

        /// <summary>
        /// The identifier for the BaseDataVariableType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId BaseDataVariableType_EnumStrings = new NodeId(Variables.BaseDataVariableType_EnumStrings);

        /// <summary>
        /// The identifier for the BaseDataVariableType_TimeZone Variable.
        /// </summary>
        public static readonly NodeId BaseDataVariableType_TimeZone = new NodeId(Variables.BaseDataVariableType_TimeZone);

        /// <summary>
        /// The identifier for the BaseDataVariableType_DaylightSavingTime Variable.
        /// </summary>
        public static readonly NodeId BaseDataVariableType_DaylightSavingTime = new NodeId(Variables.BaseDataVariableType_DaylightSavingTime);

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DataTypeVersion Variable.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType_DataTypeVersion = new NodeId(Variables.DataTypeDescriptionType_DataTypeVersion);

        /// <summary>
        /// The identifier for the DataTypeDescriptionType_DictionaryFragment Variable.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType_DictionaryFragment = new NodeId(Variables.DataTypeDescriptionType_DictionaryFragment);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_DataTypeVersion Variable.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType_DataTypeVersion = new NodeId(Variables.DataTypeDictionaryType_DataTypeVersion);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType_NamespaceUri = new NodeId(Variables.DataTypeDictionaryType_NamespaceUri);

        /// <summary>
        /// The identifier for the NamingRuleType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId NamingRuleType_EnumStrings = new NodeId(Variables.NamingRuleType_EnumStrings);

        /// <summary>
        /// The identifier for the ModellingRuleType_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRuleType_NamingRule = new NodeId(Variables.ModellingRuleType_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_Mandatory_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_Mandatory_NamingRule = new NodeId(Variables.ModellingRule_Mandatory_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_Optional_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_Optional_NamingRule = new NodeId(Variables.ModellingRule_Optional_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_ExposesItsArray_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_ExposesItsArray_NamingRule = new NodeId(Variables.ModellingRule_ExposesItsArray_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_CardinalityRestriction_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_CardinalityRestriction_NamingRule = new NodeId(Variables.ModellingRule_CardinalityRestriction_NamingRule);

        /// <summary>
        /// The identifier for the ModellingRule_MandatoryShared_NamingRule Variable.
        /// </summary>
        public static readonly NodeId ModellingRule_MandatoryShared_NamingRule = new NodeId(Variables.ModellingRule_MandatoryShared_NamingRule);

        /// <summary>
        /// The identifier for the Icon Variable.
        /// </summary>
        public static readonly NodeId Icon = new NodeId(Variables.Icon);

        /// <summary>
        /// The identifier for the NodeVersion Variable.
        /// </summary>
        public static readonly NodeId NodeVersion = new NodeId(Variables.NodeVersion);

        /// <summary>
        /// The identifier for the LocalTime Variable.
        /// </summary>
        public static readonly NodeId LocalTime = new NodeId(Variables.LocalTime);

        /// <summary>
        /// The identifier for the AllowNulls Variable.
        /// </summary>
        public static readonly NodeId AllowNulls = new NodeId(Variables.AllowNulls);

        /// <summary>
        /// The identifier for the EnumValues Variable.
        /// </summary>
        public static readonly NodeId EnumValues = new NodeId(Variables.EnumValues);

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public static readonly NodeId InputArguments = new NodeId(Variables.InputArguments);

        /// <summary>
        /// The identifier for the OutputArguments Variable.
        /// </summary>
        public static readonly NodeId OutputArguments = new NodeId(Variables.OutputArguments);

        /// <summary>
        /// The identifier for the ServerType_ServerArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerArray = new NodeId(Variables.ServerType_ServerArray);

        /// <summary>
        /// The identifier for the ServerType_NamespaceArray Variable.
        /// </summary>
        public static readonly NodeId ServerType_NamespaceArray = new NodeId(Variables.ServerType_NamespaceArray);

        /// <summary>
        /// The identifier for the ServerType_ServerStatus Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServerStatus = new NodeId(Variables.ServerType_ServerStatus);

        /// <summary>
        /// The identifier for the ServerType_ServiceLevel Variable.
        /// </summary>
        public static readonly NodeId ServerType_ServiceLevel = new NodeId(Variables.ServerType_ServiceLevel);

        /// <summary>
        /// The identifier for the ServerType_Auditing Variable.
        /// </summary>
        public static readonly NodeId ServerType_Auditing = new NodeId(Variables.ServerType_Auditing);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_ServerProfileArray Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_ServerProfileArray = new NodeId(Variables.ServerCapabilitiesType_ServerProfileArray);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_LocaleIdArray Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_LocaleIdArray = new NodeId(Variables.ServerCapabilitiesType_LocaleIdArray);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MinSupportedSampleRate Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MinSupportedSampleRate = new NodeId(Variables.ServerCapabilitiesType_MinSupportedSampleRate);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxBrowseContinuationPoints = new NodeId(Variables.ServerCapabilitiesType_MaxBrowseContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxQueryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxQueryContinuationPoints = new NodeId(Variables.ServerCapabilitiesType_MaxQueryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_MaxHistoryContinuationPoints = new NodeId(Variables.ServerCapabilitiesType_MaxHistoryContinuationPoints);

        /// <summary>
        /// The identifier for the ServerCapabilitiesType_SoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId ServerCapabilitiesType_SoftwareCertificates = new NodeId(Variables.ServerCapabilitiesType_SoftwareCertificates);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_ServerDiagnosticsSummary Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_ServerDiagnosticsSummary = new NodeId(Variables.ServerDiagnosticsType_ServerDiagnosticsSummary);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SamplingIntervalDiagnosticsArray = new NodeId(Variables.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_SubscriptionDiagnosticsArray = new NodeId(Variables.ServerDiagnosticsType_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerDiagnosticsType_EnabledFlag Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsType_EnabledFlag = new NodeId(Variables.ServerDiagnosticsType_EnabledFlag);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionDiagnosticsArray = new NodeId(Variables.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray = new NodeId(Variables.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionDiagnostics = new NodeId(Variables.SessionDiagnosticsObjectType_SessionDiagnostics);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SessionSecurityDiagnostics Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SessionSecurityDiagnostics = new NodeId(Variables.SessionDiagnosticsObjectType_SessionSecurityDiagnostics);

        /// <summary>
        /// The identifier for the SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray = new NodeId(Variables.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the ServerRedundancyType_RedundancySupport Variable.
        /// </summary>
        public static readonly NodeId ServerRedundancyType_RedundancySupport = new NodeId(Variables.ServerRedundancyType_RedundancySupport);

        /// <summary>
        /// The identifier for the TransparentRedundancyType_CurrentServerId Variable.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType_CurrentServerId = new NodeId(Variables.TransparentRedundancyType_CurrentServerId);

        /// <summary>
        /// The identifier for the TransparentRedundancyType_RedundantServerArray Variable.
        /// </summary>
        public static readonly NodeId TransparentRedundancyType_RedundantServerArray = new NodeId(Variables.TransparentRedundancyType_RedundantServerArray);

        /// <summary>
        /// The identifier for the NonTransparentRedundancyType_ServerUriArray Variable.
        /// </summary>
        public static readonly NodeId NonTransparentRedundancyType_ServerUriArray = new NodeId(Variables.NonTransparentRedundancyType_ServerUriArray);

        /// <summary>
        /// The identifier for the BaseEventType_EventId Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_EventId = new NodeId(Variables.BaseEventType_EventId);

        /// <summary>
        /// The identifier for the BaseEventType_EventType Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_EventType = new NodeId(Variables.BaseEventType_EventType);

        /// <summary>
        /// The identifier for the BaseEventType_SourceNode Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_SourceNode = new NodeId(Variables.BaseEventType_SourceNode);

        /// <summary>
        /// The identifier for the BaseEventType_SourceName Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_SourceName = new NodeId(Variables.BaseEventType_SourceName);

        /// <summary>
        /// The identifier for the BaseEventType_Time Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Time = new NodeId(Variables.BaseEventType_Time);

        /// <summary>
        /// The identifier for the BaseEventType_ReceiveTime Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_ReceiveTime = new NodeId(Variables.BaseEventType_ReceiveTime);

        /// <summary>
        /// The identifier for the BaseEventType_LocalTime Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_LocalTime = new NodeId(Variables.BaseEventType_LocalTime);

        /// <summary>
        /// The identifier for the BaseEventType_Message Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Message = new NodeId(Variables.BaseEventType_Message);

        /// <summary>
        /// The identifier for the BaseEventType_Severity Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_Severity = new NodeId(Variables.BaseEventType_Severity);

        /// <summary>
        /// The identifier for the BaseEventType_TimeZone Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_TimeZone = new NodeId(Variables.BaseEventType_TimeZone);

        /// <summary>
        /// The identifier for the BaseEventType_DaylightSavingTime Variable.
        /// </summary>
        public static readonly NodeId BaseEventType_DaylightSavingTime = new NodeId(Variables.BaseEventType_DaylightSavingTime);

        /// <summary>
        /// The identifier for the AuditEventType_ActionTimeStamp Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ActionTimeStamp = new NodeId(Variables.AuditEventType_ActionTimeStamp);

        /// <summary>
        /// The identifier for the AuditEventType_Status Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_Status = new NodeId(Variables.AuditEventType_Status);

        /// <summary>
        /// The identifier for the AuditEventType_ServerId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ServerId = new NodeId(Variables.AuditEventType_ServerId);

        /// <summary>
        /// The identifier for the AuditEventType_ClientAuditEntryId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ClientAuditEntryId = new NodeId(Variables.AuditEventType_ClientAuditEntryId);

        /// <summary>
        /// The identifier for the AuditEventType_ClientUserId Variable.
        /// </summary>
        public static readonly NodeId AuditEventType_ClientUserId = new NodeId(Variables.AuditEventType_ClientUserId);

        /// <summary>
        /// The identifier for the AuditChannelEventType_SecureChannelId Variable.
        /// </summary>
        public static readonly NodeId AuditChannelEventType_SecureChannelId = new NodeId(Variables.AuditChannelEventType_SecureChannelId);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificate = new NodeId(Variables.AuditOpenSecureChannelEventType_ClientCertificate);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_ClientCertificateThumbprint = new NodeId(Variables.AuditOpenSecureChannelEventType_ClientCertificateThumbprint);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestType Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestType = new NodeId(Variables.AuditOpenSecureChannelEventType_RequestType);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityPolicyUri = new NodeId(Variables.AuditOpenSecureChannelEventType_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_SecurityMode = new NodeId(Variables.AuditOpenSecureChannelEventType_SecurityMode);

        /// <summary>
        /// The identifier for the AuditOpenSecureChannelEventType_RequestedLifetime Variable.
        /// </summary>
        public static readonly NodeId AuditOpenSecureChannelEventType_RequestedLifetime = new NodeId(Variables.AuditOpenSecureChannelEventType_RequestedLifetime);

        /// <summary>
        /// The identifier for the AuditSessionEventType_SessionId Variable.
        /// </summary>
        public static readonly NodeId AuditSessionEventType_SessionId = new NodeId(Variables.AuditSessionEventType_SessionId);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_SecureChannelId Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_SecureChannelId = new NodeId(Variables.AuditCreateSessionEventType_SecureChannelId);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificate = new NodeId(Variables.AuditCreateSessionEventType_ClientCertificate);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_ClientCertificateThumbprint Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_ClientCertificateThumbprint = new NodeId(Variables.AuditCreateSessionEventType_ClientCertificateThumbprint);

        /// <summary>
        /// The identifier for the AuditCreateSessionEventType_RevisedSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId AuditCreateSessionEventType_RevisedSessionTimeout = new NodeId(Variables.AuditCreateSessionEventType_RevisedSessionTimeout);

        /// <summary>
        /// The identifier for the AuditUrlMismatchEventType_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId AuditUrlMismatchEventType_EndpointUrl = new NodeId(Variables.AuditUrlMismatchEventType_EndpointUrl);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_ClientSoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType_ClientSoftwareCertificates = new NodeId(Variables.AuditActivateSessionEventType_ClientSoftwareCertificates);

        /// <summary>
        /// The identifier for the AuditActivateSessionEventType_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId AuditActivateSessionEventType_UserIdentityToken = new NodeId(Variables.AuditActivateSessionEventType_UserIdentityToken);

        /// <summary>
        /// The identifier for the AuditCancelEventType_RequestHandle Variable.
        /// </summary>
        public static readonly NodeId AuditCancelEventType_RequestHandle = new NodeId(Variables.AuditCancelEventType_RequestHandle);

        /// <summary>
        /// The identifier for the AuditCertificateEventType_Certificate Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateEventType_Certificate = new NodeId(Variables.AuditCertificateEventType_Certificate);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidHostname Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidHostname = new NodeId(Variables.AuditCertificateDataMismatchEventType_InvalidHostname);

        /// <summary>
        /// The identifier for the AuditCertificateDataMismatchEventType_InvalidUri Variable.
        /// </summary>
        public static readonly NodeId AuditCertificateDataMismatchEventType_InvalidUri = new NodeId(Variables.AuditCertificateDataMismatchEventType_InvalidUri);

        /// <summary>
        /// The identifier for the AuditAddNodesEventType_NodesToAdd Variable.
        /// </summary>
        public static readonly NodeId AuditAddNodesEventType_NodesToAdd = new NodeId(Variables.AuditAddNodesEventType_NodesToAdd);

        /// <summary>
        /// The identifier for the AuditDeleteNodesEventType_NodesToDelete Variable.
        /// </summary>
        public static readonly NodeId AuditDeleteNodesEventType_NodesToDelete = new NodeId(Variables.AuditDeleteNodesEventType_NodesToDelete);

        /// <summary>
        /// The identifier for the AuditAddReferencesEventType_ReferencesToAdd Variable.
        /// </summary>
        public static readonly NodeId AuditAddReferencesEventType_ReferencesToAdd = new NodeId(Variables.AuditAddReferencesEventType_ReferencesToAdd);

        /// <summary>
        /// The identifier for the AuditDeleteReferencesEventType_ReferencesToDelete Variable.
        /// </summary>
        public static readonly NodeId AuditDeleteReferencesEventType_ReferencesToDelete = new NodeId(Variables.AuditDeleteReferencesEventType_ReferencesToDelete);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_AttributeId Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_AttributeId = new NodeId(Variables.AuditWriteUpdateEventType_AttributeId);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_IndexRange Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_IndexRange = new NodeId(Variables.AuditWriteUpdateEventType_IndexRange);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_OldValue Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_OldValue = new NodeId(Variables.AuditWriteUpdateEventType_OldValue);

        /// <summary>
        /// The identifier for the AuditWriteUpdateEventType_NewValue Variable.
        /// </summary>
        public static readonly NodeId AuditWriteUpdateEventType_NewValue = new NodeId(Variables.AuditWriteUpdateEventType_NewValue);

        /// <summary>
        /// The identifier for the AuditHistoryUpdateEventType_ParameterDataTypeId Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryUpdateEventType_ParameterDataTypeId = new NodeId(Variables.AuditHistoryUpdateEventType_ParameterDataTypeId);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_UpdatedNode = new NodeId(Variables.AuditHistoryEventUpdateEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_PerformInsertReplace = new NodeId(Variables.AuditHistoryEventUpdateEventType_PerformInsertReplace);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_Filter Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_Filter = new NodeId(Variables.AuditHistoryEventUpdateEventType_Filter);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_NewValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_NewValues = new NodeId(Variables.AuditHistoryEventUpdateEventType_NewValues);

        /// <summary>
        /// The identifier for the AuditHistoryEventUpdateEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventUpdateEventType_OldValues = new NodeId(Variables.AuditHistoryEventUpdateEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_UpdatedNode = new NodeId(Variables.AuditHistoryValueUpdateEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_PerformInsertReplace Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_PerformInsertReplace = new NodeId(Variables.AuditHistoryValueUpdateEventType_PerformInsertReplace);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_NewValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_NewValues = new NodeId(Variables.AuditHistoryValueUpdateEventType_NewValues);

        /// <summary>
        /// The identifier for the AuditHistoryValueUpdateEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryValueUpdateEventType_OldValues = new NodeId(Variables.AuditHistoryValueUpdateEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryDeleteEventType_UpdatedNode Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryDeleteEventType_UpdatedNode = new NodeId(Variables.AuditHistoryDeleteEventType_UpdatedNode);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_IsDeleteModified Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_IsDeleteModified = new NodeId(Variables.AuditHistoryRawModifyDeleteEventType_IsDeleteModified);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_StartTime Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_StartTime = new NodeId(Variables.AuditHistoryRawModifyDeleteEventType_StartTime);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_EndTime Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_EndTime = new NodeId(Variables.AuditHistoryRawModifyDeleteEventType_EndTime);

        /// <summary>
        /// The identifier for the AuditHistoryRawModifyDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryRawModifyDeleteEventType_OldValues = new NodeId(Variables.AuditHistoryRawModifyDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_ReqTimes Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_ReqTimes = new NodeId(Variables.AuditHistoryAtTimeDeleteEventType_ReqTimes);

        /// <summary>
        /// The identifier for the AuditHistoryAtTimeDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryAtTimeDeleteEventType_OldValues = new NodeId(Variables.AuditHistoryAtTimeDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_EventIds Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType_EventIds = new NodeId(Variables.AuditHistoryEventDeleteEventType_EventIds);

        /// <summary>
        /// The identifier for the AuditHistoryEventDeleteEventType_OldValues Variable.
        /// </summary>
        public static readonly NodeId AuditHistoryEventDeleteEventType_OldValues = new NodeId(Variables.AuditHistoryEventDeleteEventType_OldValues);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_MethodId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType_MethodId = new NodeId(Variables.AuditUpdateMethodEventType_MethodId);

        /// <summary>
        /// The identifier for the AuditUpdateMethodEventType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateMethodEventType_InputArguments = new NodeId(Variables.AuditUpdateMethodEventType_InputArguments);

        /// <summary>
        /// The identifier for the GeneralModelChangeEventType_Changes Variable.
        /// </summary>
        public static readonly NodeId GeneralModelChangeEventType_Changes = new NodeId(Variables.GeneralModelChangeEventType_Changes);

        /// <summary>
        /// The identifier for the SemanticChangeEventType_Changes Variable.
        /// </summary>
        public static readonly NodeId SemanticChangeEventType_Changes = new NodeId(Variables.SemanticChangeEventType_Changes);

        /// <summary>
        /// The identifier for the ServerStatusType_StartTime Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_StartTime = new NodeId(Variables.ServerStatusType_StartTime);

        /// <summary>
        /// The identifier for the ServerStatusType_CurrentTime Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_CurrentTime = new NodeId(Variables.ServerStatusType_CurrentTime);

        /// <summary>
        /// The identifier for the ServerStatusType_State Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_State = new NodeId(Variables.ServerStatusType_State);

        /// <summary>
        /// The identifier for the ServerStatusType_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_BuildInfo = new NodeId(Variables.ServerStatusType_BuildInfo);

        /// <summary>
        /// The identifier for the ServerStatusType_SecondsTillShutdown Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_SecondsTillShutdown = new NodeId(Variables.ServerStatusType_SecondsTillShutdown);

        /// <summary>
        /// The identifier for the ServerStatusType_ShutdownReason Variable.
        /// </summary>
        public static readonly NodeId ServerStatusType_ShutdownReason = new NodeId(Variables.ServerStatusType_ShutdownReason);

        /// <summary>
        /// The identifier for the BuildInfoType_ProductUri Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ProductUri = new NodeId(Variables.BuildInfoType_ProductUri);

        /// <summary>
        /// The identifier for the BuildInfoType_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ManufacturerName = new NodeId(Variables.BuildInfoType_ManufacturerName);

        /// <summary>
        /// The identifier for the BuildInfoType_ProductName Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_ProductName = new NodeId(Variables.BuildInfoType_ProductName);

        /// <summary>
        /// The identifier for the BuildInfoType_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_SoftwareVersion = new NodeId(Variables.BuildInfoType_SoftwareVersion);

        /// <summary>
        /// The identifier for the BuildInfoType_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_BuildNumber = new NodeId(Variables.BuildInfoType_BuildNumber);

        /// <summary>
        /// The identifier for the BuildInfoType_BuildDate Variable.
        /// </summary>
        public static readonly NodeId BuildInfoType_BuildDate = new NodeId(Variables.BuildInfoType_BuildDate);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_ServerViewCount = new NodeId(Variables.ServerDiagnosticsSummaryType_ServerViewCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSessionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_CurrentSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSessionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedSessionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedSessionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_RejectedSessionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionTimeoutCount = new NodeId(Variables.ServerDiagnosticsSummaryType_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SessionAbortCount = new NodeId(Variables.ServerDiagnosticsSummaryType_SessionAbortCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CurrentSubscriptionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_CumulatedSubscriptionCount = new NodeId(Variables.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_PublishingIntervalCount = new NodeId(Variables.ServerDiagnosticsSummaryType_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount = new NodeId(Variables.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType_RejectedRequestsCount = new NodeId(Variables.ServerDiagnosticsSummaryType_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_SamplingInterval Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_SamplingInterval = new NodeId(Variables.SamplingIntervalDiagnosticsType_SamplingInterval);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_MonitoredItemCount = new NodeId(Variables.SamplingIntervalDiagnosticsType_MonitoredItemCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_MaxMonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_MaxMonitoredItemCount = new NodeId(Variables.SamplingIntervalDiagnosticsType_MaxMonitoredItemCount);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType_DisabledMonitoredItemCount = new NodeId(Variables.SamplingIntervalDiagnosticsType_DisabledMonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_SessionId = new NodeId(Variables.SubscriptionDiagnosticsType_SessionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_SubscriptionId Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_SubscriptionId = new NodeId(Variables.SubscriptionDiagnosticsType_SubscriptionId);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_Priority Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_Priority = new NodeId(Variables.SubscriptionDiagnosticsType_Priority);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingInterval Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingInterval = new NodeId(Variables.SubscriptionDiagnosticsType_PublishingInterval);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxKeepAliveCount = new NodeId(Variables.SubscriptionDiagnosticsType_MaxKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxLifetimeCount = new NodeId(Variables.SubscriptionDiagnosticsType_MaxLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MaxNotificationsPerPublish Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MaxNotificationsPerPublish = new NodeId(Variables.SubscriptionDiagnosticsType_MaxNotificationsPerPublish);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishingEnabled Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishingEnabled = new NodeId(Variables.SubscriptionDiagnosticsType_PublishingEnabled);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_ModifyCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_ModifyCount = new NodeId(Variables.SubscriptionDiagnosticsType_ModifyCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EnableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EnableCount = new NodeId(Variables.SubscriptionDiagnosticsType_EnableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisableCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DisableCount = new NodeId(Variables.SubscriptionDiagnosticsType_DisableCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishRequestCount = new NodeId(Variables.SubscriptionDiagnosticsType_RepublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageRequestCount = new NodeId(Variables.SubscriptionDiagnosticsType_RepublishMessageRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_RepublishMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_RepublishMessageCount = new NodeId(Variables.SubscriptionDiagnosticsType_RepublishMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferRequestCount = new NodeId(Variables.SubscriptionDiagnosticsType_TransferRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToAltClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToAltClientCount = new NodeId(Variables.SubscriptionDiagnosticsType_TransferredToAltClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_TransferredToSameClientCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_TransferredToSameClientCount = new NodeId(Variables.SubscriptionDiagnosticsType_TransferredToSameClientCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_PublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_PublishRequestCount = new NodeId(Variables.SubscriptionDiagnosticsType_PublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DataChangeNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DataChangeNotificationsCount = new NodeId(Variables.SubscriptionDiagnosticsType_DataChangeNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventNotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EventNotificationsCount = new NodeId(Variables.SubscriptionDiagnosticsType_EventNotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NotificationsCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_NotificationsCount = new NodeId(Variables.SubscriptionDiagnosticsType_NotificationsCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_LatePublishRequestCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_LatePublishRequestCount = new NodeId(Variables.SubscriptionDiagnosticsType_LatePublishRequestCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentKeepAliveCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentKeepAliveCount = new NodeId(Variables.SubscriptionDiagnosticsType_CurrentKeepAliveCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_CurrentLifetimeCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_CurrentLifetimeCount = new NodeId(Variables.SubscriptionDiagnosticsType_CurrentLifetimeCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_UnacknowledgedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_UnacknowledgedMessageCount = new NodeId(Variables.SubscriptionDiagnosticsType_UnacknowledgedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DiscardedMessageCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DiscardedMessageCount = new NodeId(Variables.SubscriptionDiagnosticsType_DiscardedMessageCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoredItemCount = new NodeId(Variables.SubscriptionDiagnosticsType_MonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_DisabledMonitoredItemCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_DisabledMonitoredItemCount = new NodeId(Variables.SubscriptionDiagnosticsType_DisabledMonitoredItemCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_MonitoringQueueOverflowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_MonitoringQueueOverflowCount = new NodeId(Variables.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_NextSequenceNumber Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_NextSequenceNumber = new NodeId(Variables.SubscriptionDiagnosticsType_NextSequenceNumber);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType_EventQueueOverFlowCount Variable.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType_EventQueueOverFlowCount = new NodeId(Variables.SubscriptionDiagnosticsType_EventQueueOverFlowCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SessionId = new NodeId(Variables.SessionDiagnosticsVariableType_SessionId);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SessionName Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SessionName = new NodeId(Variables.SessionDiagnosticsVariableType_SessionName);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientDescription Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientDescription = new NodeId(Variables.SessionDiagnosticsVariableType_ClientDescription);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ServerUri Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ServerUri = new NodeId(Variables.SessionDiagnosticsVariableType_ServerUri);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_EndpointUrl Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_EndpointUrl = new NodeId(Variables.SessionDiagnosticsVariableType_EndpointUrl);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_LocaleIds Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_LocaleIds = new NodeId(Variables.SessionDiagnosticsVariableType_LocaleIds);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ActualSessionTimeout Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ActualSessionTimeout = new NodeId(Variables.SessionDiagnosticsVariableType_ActualSessionTimeout);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_MaxResponseMessageSize Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_MaxResponseMessageSize = new NodeId(Variables.SessionDiagnosticsVariableType_MaxResponseMessageSize);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientConnectionTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientConnectionTime = new NodeId(Variables.SessionDiagnosticsVariableType_ClientConnectionTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ClientLastContactTime Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ClientLastContactTime = new NodeId(Variables.SessionDiagnosticsVariableType_ClientLastContactTime);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentSubscriptionsCount = new NodeId(Variables.SessionDiagnosticsVariableType_CurrentSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentMonitoredItemsCount = new NodeId(Variables.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue = new NodeId(Variables.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TotalRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TotalRequestCount = new NodeId(Variables.SessionDiagnosticsVariableType_TotalRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnauthorizedRequestCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_UnauthorizedRequestCount = new NodeId(Variables.SessionDiagnosticsVariableType_UnauthorizedRequestCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ReadCount = new NodeId(Variables.SessionDiagnosticsVariableType_ReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryReadCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryReadCount = new NodeId(Variables.SessionDiagnosticsVariableType_HistoryReadCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_WriteCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_WriteCount = new NodeId(Variables.SessionDiagnosticsVariableType_WriteCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_HistoryUpdateCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_HistoryUpdateCount = new NodeId(Variables.SessionDiagnosticsVariableType_HistoryUpdateCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CallCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CallCount = new NodeId(Variables.SessionDiagnosticsVariableType_CallCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CreateMonitoredItemsCount = new NodeId(Variables.SessionDiagnosticsVariableType_CreateMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifyMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ModifyMonitoredItemsCount = new NodeId(Variables.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetMonitoringModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetMonitoringModeCount = new NodeId(Variables.SessionDiagnosticsVariableType_SetMonitoringModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetTriggeringCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetTriggeringCount = new NodeId(Variables.SessionDiagnosticsVariableType_SetTriggeringCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteMonitoredItemsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteMonitoredItemsCount = new NodeId(Variables.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_CreateSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_CreateSubscriptionCount = new NodeId(Variables.SessionDiagnosticsVariableType_CreateSubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_ModifySubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_ModifySubscriptionCount = new NodeId(Variables.SessionDiagnosticsVariableType_ModifySubscriptionCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_SetPublishingModeCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_SetPublishingModeCount = new NodeId(Variables.SessionDiagnosticsVariableType_SetPublishingModeCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_PublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_PublishCount = new NodeId(Variables.SessionDiagnosticsVariableType_PublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RepublishCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_RepublishCount = new NodeId(Variables.SessionDiagnosticsVariableType_RepublishCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TransferSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TransferSubscriptionsCount = new NodeId(Variables.SessionDiagnosticsVariableType_TransferSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteSubscriptionsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteSubscriptionsCount = new NodeId(Variables.SessionDiagnosticsVariableType_DeleteSubscriptionsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_AddNodesCount = new NodeId(Variables.SessionDiagnosticsVariableType_AddNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_AddReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_AddReferencesCount = new NodeId(Variables.SessionDiagnosticsVariableType_AddReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteNodesCount = new NodeId(Variables.SessionDiagnosticsVariableType_DeleteNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_DeleteReferencesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_DeleteReferencesCount = new NodeId(Variables.SessionDiagnosticsVariableType_DeleteReferencesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseCount = new NodeId(Variables.SessionDiagnosticsVariableType_BrowseCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_BrowseNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_BrowseNextCount = new NodeId(Variables.SessionDiagnosticsVariableType_BrowseNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount = new NodeId(Variables.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryFirstCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_QueryFirstCount = new NodeId(Variables.SessionDiagnosticsVariableType_QueryFirstCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_QueryNextCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_QueryNextCount = new NodeId(Variables.SessionDiagnosticsVariableType_QueryNextCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_RegisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_RegisterNodesCount = new NodeId(Variables.SessionDiagnosticsVariableType_RegisterNodesCount);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType_UnregisterNodesCount Variable.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType_UnregisterNodesCount = new NodeId(Variables.SessionDiagnosticsVariableType_UnregisterNodesCount);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SessionId Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SessionId = new NodeId(Variables.SessionSecurityDiagnosticsType_SessionId);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdOfSession Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdOfSession = new NodeId(Variables.SessionSecurityDiagnosticsType_ClientUserIdOfSession);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientUserIdHistory Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientUserIdHistory = new NodeId(Variables.SessionSecurityDiagnosticsType_ClientUserIdHistory);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_AuthenticationMechanism Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_AuthenticationMechanism = new NodeId(Variables.SessionSecurityDiagnosticsType_AuthenticationMechanism);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_Encoding Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_Encoding = new NodeId(Variables.SessionSecurityDiagnosticsType_Encoding);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_TransportProtocol Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_TransportProtocol = new NodeId(Variables.SessionSecurityDiagnosticsType_TransportProtocol);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityMode Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityMode = new NodeId(Variables.SessionSecurityDiagnosticsType_SecurityMode);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_SecurityPolicyUri Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_SecurityPolicyUri = new NodeId(Variables.SessionSecurityDiagnosticsType_SecurityPolicyUri);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType_ClientCertificate Variable.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType_ClientCertificate = new NodeId(Variables.SessionSecurityDiagnosticsType_ClientCertificate);

        /// <summary>
        /// The identifier for the Server_ServerArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerArray = new NodeId(Variables.Server_ServerArray);

        /// <summary>
        /// The identifier for the Server_NamespaceArray Variable.
        /// </summary>
        public static readonly NodeId Server_NamespaceArray = new NodeId(Variables.Server_NamespaceArray);

        /// <summary>
        /// The identifier for the Server_ServerStatus Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus = new NodeId(Variables.Server_ServerStatus);

        /// <summary>
        /// The identifier for the Server_ServerStatus_StartTime Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_StartTime = new NodeId(Variables.Server_ServerStatus_StartTime);

        /// <summary>
        /// The identifier for the Server_ServerStatus_CurrentTime Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_CurrentTime = new NodeId(Variables.Server_ServerStatus_CurrentTime);

        /// <summary>
        /// The identifier for the Server_ServerStatus_State Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_State = new NodeId(Variables.Server_ServerStatus_State);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo = new NodeId(Variables.Server_ServerStatus_BuildInfo);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductUri Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductUri = new NodeId(Variables.Server_ServerStatus_BuildInfo_ProductUri);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ManufacturerName Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ManufacturerName = new NodeId(Variables.Server_ServerStatus_BuildInfo_ManufacturerName);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_ProductName Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_ProductName = new NodeId(Variables.Server_ServerStatus_BuildInfo_ProductName);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_SoftwareVersion Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_SoftwareVersion = new NodeId(Variables.Server_ServerStatus_BuildInfo_SoftwareVersion);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildNumber Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildNumber = new NodeId(Variables.Server_ServerStatus_BuildInfo_BuildNumber);

        /// <summary>
        /// The identifier for the Server_ServerStatus_BuildInfo_BuildDate Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_BuildInfo_BuildDate = new NodeId(Variables.Server_ServerStatus_BuildInfo_BuildDate);

        /// <summary>
        /// The identifier for the Server_ServerStatus_SecondsTillShutdown Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_SecondsTillShutdown = new NodeId(Variables.Server_ServerStatus_SecondsTillShutdown);

        /// <summary>
        /// The identifier for the Server_ServerStatus_ShutdownReason Variable.
        /// </summary>
        public static readonly NodeId Server_ServerStatus_ShutdownReason = new NodeId(Variables.Server_ServerStatus_ShutdownReason);

        /// <summary>
        /// The identifier for the Server_ServiceLevel Variable.
        /// </summary>
        public static readonly NodeId Server_ServiceLevel = new NodeId(Variables.Server_ServiceLevel);

        /// <summary>
        /// The identifier for the Server_Auditing Variable.
        /// </summary>
        public static readonly NodeId Server_Auditing = new NodeId(Variables.Server_Auditing);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_ServerProfileArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_ServerProfileArray = new NodeId(Variables.Server_ServerCapabilities_ServerProfileArray);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_LocaleIdArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_LocaleIdArray = new NodeId(Variables.Server_ServerCapabilities_LocaleIdArray);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MinSupportedSampleRate Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MinSupportedSampleRate = new NodeId(Variables.Server_ServerCapabilities_MinSupportedSampleRate);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxBrowseContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxBrowseContinuationPoints = new NodeId(Variables.Server_ServerCapabilities_MaxBrowseContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxQueryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxQueryContinuationPoints = new NodeId(Variables.Server_ServerCapabilities_MaxQueryContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_MaxHistoryContinuationPoints Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_MaxHistoryContinuationPoints = new NodeId(Variables.Server_ServerCapabilities_MaxHistoryContinuationPoints);

        /// <summary>
        /// The identifier for the Server_ServerCapabilities_SoftwareCertificates Variable.
        /// </summary>
        public static readonly NodeId Server_ServerCapabilities_SoftwareCertificates = new NodeId(Variables.Server_ServerCapabilities_SoftwareCertificates);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount = new NodeId(Variables.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray = new NodeId(Variables.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SubscriptionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SubscriptionDiagnosticsArray = new NodeId(Variables.Server_ServerDiagnostics_SubscriptionDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray = new NodeId(Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray = new NodeId(Variables.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray);

        /// <summary>
        /// The identifier for the Server_ServerDiagnostics_EnabledFlag Variable.
        /// </summary>
        public static readonly NodeId Server_ServerDiagnostics_EnabledFlag = new NodeId(Variables.Server_ServerDiagnostics_EnabledFlag);

        /// <summary>
        /// The identifier for the Server_ServerRedundancy_RedundancySupport Variable.
        /// </summary>
        public static readonly NodeId Server_ServerRedundancy_RedundancySupport = new NodeId(Variables.Server_ServerRedundancy_RedundancySupport);

        /// <summary>
        /// The identifier for the Dictionary_XmlSchema Variable.
        /// </summary>
        public static readonly NodeId Dictionary_XmlSchema = new NodeId(Variables.Dictionary_XmlSchema);

        /// <summary>
        /// The identifier for the Dictionary_BinarySchema Variable.
        /// </summary>
        public static readonly NodeId Dictionary_BinarySchema = new NodeId(Variables.Dictionary_BinarySchema);

        /// <summary>
        /// The identifier for the StateVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Id = new NodeId(Variables.StateVariableType_Id);

        /// <summary>
        /// The identifier for the StateVariableType_Name Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Name = new NodeId(Variables.StateVariableType_Name);

        /// <summary>
        /// The identifier for the StateVariableType_Number Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_Number = new NodeId(Variables.StateVariableType_Number);

        /// <summary>
        /// The identifier for the StateVariableType_EffectiveDisplayName Variable.
        /// </summary>
        public static readonly NodeId StateVariableType_EffectiveDisplayName = new NodeId(Variables.StateVariableType_EffectiveDisplayName);

        /// <summary>
        /// The identifier for the FiniteStateVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteStateVariableType_Id = new NodeId(Variables.FiniteStateVariableType_Id);

        /// <summary>
        /// The identifier for the TransitionVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Id = new NodeId(Variables.TransitionVariableType_Id);

        /// <summary>
        /// The identifier for the TransitionVariableType_Name Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Name = new NodeId(Variables.TransitionVariableType_Name);

        /// <summary>
        /// The identifier for the TransitionVariableType_Number Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_Number = new NodeId(Variables.TransitionVariableType_Number);

        /// <summary>
        /// The identifier for the TransitionVariableType_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId TransitionVariableType_TransitionTime = new NodeId(Variables.TransitionVariableType_TransitionTime);

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType_Id Variable.
        /// </summary>
        public static readonly NodeId FiniteTransitionVariableType_Id = new NodeId(Variables.FiniteTransitionVariableType_Id);

        /// <summary>
        /// The identifier for the StateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_CurrentState = new NodeId(Variables.StateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the StateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId StateMachineType_LastTransition = new NodeId(Variables.StateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_CurrentState = new NodeId(Variables.FiniteStateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the FiniteStateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId FiniteStateMachineType_LastTransition = new NodeId(Variables.FiniteStateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the StateType_StateNumber Variable.
        /// </summary>
        public static readonly NodeId StateType_StateNumber = new NodeId(Variables.StateType_StateNumber);

        /// <summary>
        /// The identifier for the TransitionEventType_FromState Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_FromState = new NodeId(Variables.TransitionEventType_FromState);

        /// <summary>
        /// The identifier for the TransitionEventType_ToState Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_ToState = new NodeId(Variables.TransitionEventType_ToState);

        /// <summary>
        /// The identifier for the TransitionEventType_Transition Variable.
        /// </summary>
        public static readonly NodeId TransitionEventType_Transition = new NodeId(Variables.TransitionEventType_Transition);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_OldStateId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType_OldStateId = new NodeId(Variables.AuditUpdateStateEventType_OldStateId);

        /// <summary>
        /// The identifier for the AuditUpdateStateEventType_NewStateId Variable.
        /// </summary>
        public static readonly NodeId AuditUpdateStateEventType_NewStateId = new NodeId(Variables.AuditUpdateStateEventType_NewStateId);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_AggregateConfiguration Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_AggregateConfiguration = new NodeId(Variables.HistoricalConfigurationType_AggregateConfiguration);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_Stepped Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_Stepped = new NodeId(Variables.HistoricalConfigurationType_Stepped);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_Definition Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_Definition = new NodeId(Variables.HistoricalConfigurationType_Definition);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_MaxTimeInterval Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_MaxTimeInterval = new NodeId(Variables.HistoricalConfigurationType_MaxTimeInterval);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_MinTimeInterval Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_MinTimeInterval = new NodeId(Variables.HistoricalConfigurationType_MinTimeInterval);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_ExceptionDeviation Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_ExceptionDeviation = new NodeId(Variables.HistoricalConfigurationType_ExceptionDeviation);

        /// <summary>
        /// The identifier for the HistoricalConfigurationType_ExceptionDeviationFormat Variable.
        /// </summary>
        public static readonly NodeId HistoricalConfigurationType_ExceptionDeviationFormat = new NodeId(Variables.HistoricalConfigurationType_ExceptionDeviationFormat);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessHistoryDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_AccessHistoryDataCapability = new NodeId(Variables.HistoryServerCapabilitiesType_AccessHistoryDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_AccessEventsCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_AccessEventsCapability = new NodeId(Variables.HistoryServerCapabilitiesType_AccessEventsCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_MaxReturnValues Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_MaxReturnValues = new NodeId(Variables.HistoryServerCapabilitiesType_MaxReturnValues);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_InsertDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_InsertDataCapability = new NodeId(Variables.HistoryServerCapabilitiesType_InsertDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_ReplaceDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_ReplaceDataCapability = new NodeId(Variables.HistoryServerCapabilitiesType_ReplaceDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_UpdateDataCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_UpdateDataCapability = new NodeId(Variables.HistoryServerCapabilitiesType_UpdateDataCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteRawCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteRawCapability = new NodeId(Variables.HistoryServerCapabilitiesType_DeleteRawCapability);

        /// <summary>
        /// The identifier for the HistoryServerCapabilitiesType_DeleteAtTimeCapability Variable.
        /// </summary>
        public static readonly NodeId HistoryServerCapabilitiesType_DeleteAtTimeCapability = new NodeId(Variables.HistoryServerCapabilitiesType_DeleteAtTimeCapability);

        /// <summary>
        /// The identifier for the DataItemType_Definition Variable.
        /// </summary>
        public static readonly NodeId DataItemType_Definition = new NodeId(Variables.DataItemType_Definition);

        /// <summary>
        /// The identifier for the DataItemType_ValuePrecision Variable.
        /// </summary>
        public static readonly NodeId DataItemType_ValuePrecision = new NodeId(Variables.DataItemType_ValuePrecision);

        /// <summary>
        /// The identifier for the AnalogItemType_EURange Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_EURange = new NodeId(Variables.AnalogItemType_EURange);

        /// <summary>
        /// The identifier for the AnalogItemType_InstrumentRange Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_InstrumentRange = new NodeId(Variables.AnalogItemType_InstrumentRange);

        /// <summary>
        /// The identifier for the AnalogItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly NodeId AnalogItemType_EngineeringUnits = new NodeId(Variables.AnalogItemType_EngineeringUnits);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_FalseState Variable.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType_FalseState = new NodeId(Variables.TwoStateDiscreteType_FalseState);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType_TrueState Variable.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType_TrueState = new NodeId(Variables.TwoStateDiscreteType_TrueState);

        /// <summary>
        /// The identifier for the MultiStateDiscreteType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MultiStateDiscreteType_EnumStrings = new NodeId(Variables.MultiStateDiscreteType_EnumStrings);

        /// <summary>
        /// The identifier for the ProgramTransitionEventType_IntermediateResult Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionEventType_IntermediateResult = new NodeId(Variables.ProgramTransitionEventType_IntermediateResult);

        /// <summary>
        /// The identifier for the ProgramTransitionAuditEventType_Transition Variable.
        /// </summary>
        public static readonly NodeId ProgramTransitionAuditEventType_Transition = new NodeId(Variables.ProgramTransitionAuditEventType_Transition);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_CreateSessionId = new NodeId(Variables.ProgramDiagnosticType_CreateSessionId);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_CreateClientName Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_CreateClientName = new NodeId(Variables.ProgramDiagnosticType_CreateClientName);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_InvocationCreationTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_InvocationCreationTime = new NodeId(Variables.ProgramDiagnosticType_InvocationCreationTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastTransitionTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastTransitionTime = new NodeId(Variables.ProgramDiagnosticType_LastTransitionTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCall Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodCall = new NodeId(Variables.ProgramDiagnosticType_LastMethodCall);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodSessionId Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodSessionId = new NodeId(Variables.ProgramDiagnosticType_LastMethodSessionId);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodInputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodInputArguments = new NodeId(Variables.ProgramDiagnosticType_LastMethodInputArguments);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodOutputArguments Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodOutputArguments = new NodeId(Variables.ProgramDiagnosticType_LastMethodOutputArguments);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodCallTime Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodCallTime = new NodeId(Variables.ProgramDiagnosticType_LastMethodCallTime);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType_LastMethodReturnStatus Variable.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType_LastMethodReturnStatus = new NodeId(Variables.ProgramDiagnosticType_LastMethodReturnStatus);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_CurrentState = new NodeId(Variables.ProgramStateMachineType_CurrentState);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_CurrentState_Number Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_CurrentState_Number = new NodeId(Variables.ProgramStateMachineType_CurrentState_Number);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition = new NodeId(Variables.ProgramStateMachineType_LastTransition);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_Number Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition_Number = new NodeId(Variables.ProgramStateMachineType_LastTransition_Number);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_LastTransition_TransitionTime = new NodeId(Variables.ProgramStateMachineType_LastTransition_TransitionTime);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Creatable Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Creatable = new NodeId(Variables.ProgramStateMachineType_Creatable);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Deletable Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Deletable = new NodeId(Variables.ProgramStateMachineType_Deletable);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_AutoDelete Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_AutoDelete = new NodeId(Variables.ProgramStateMachineType_AutoDelete);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RecycleCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RecycleCount = new NodeId(Variables.ProgramStateMachineType_RecycleCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_InstanceCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_InstanceCount = new NodeId(Variables.ProgramStateMachineType_InstanceCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxInstanceCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_MaxInstanceCount = new NodeId(Variables.ProgramStateMachineType_MaxInstanceCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_MaxRecycleCount Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_MaxRecycleCount = new NodeId(Variables.ProgramStateMachineType_MaxRecycleCount);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ProgramDiagnostics Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ProgramDiagnostics = new NodeId(Variables.ProgramStateMachineType_ProgramDiagnostics);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Ready_StateNumber = new NodeId(Variables.ProgramStateMachineType_Ready_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Running_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Running_StateNumber = new NodeId(Variables.ProgramStateMachineType_Running_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Suspended_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Suspended_StateNumber = new NodeId(Variables.ProgramStateMachineType_Suspended_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_Halted_StateNumber = new NodeId(Variables.ProgramStateMachineType_Halted_StateNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_HaltedToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_HaltedToReady_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_HaltedToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToRunning_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_ReadyToRunning_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToHalted_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_RunningToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToReady_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_RunningToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_RunningToSuspended_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_RunningToSuspended_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_RunningToSuspended_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToRunning_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToRunning_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_SuspendedToRunning_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToHalted_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_SuspendedToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_SuspendedToReady_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_SuspendedToReady_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_SuspendedToReady_TransitionNumber);

        /// <summary>
        /// The identifier for the ProgramStateMachineType_ReadyToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly NodeId ProgramStateMachineType_ReadyToHalted_TransitionNumber = new NodeId(Variables.ProgramStateMachineType_ReadyToHalted_TransitionNumber);

        /// <summary>
        /// The identifier for the BaseConditionType_Retain Variable.
        /// </summary>
        public static readonly NodeId BaseConditionType_Retain = new NodeId(Variables.BaseConditionType_Retain);

        /// <summary>
        /// The identifier for the BaseConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly NodeId BaseConditionType_ConditionRefresh_InputArguments = new NodeId(Variables.BaseConditionType_ConditionRefresh_InputArguments);

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddCommentByEventIdsMethodType_InputArguments = new NodeId(Variables.AddCommentByEventIdsMethodType_InputArguments);

        /// <summary>
        /// The identifier for the AddCommentByEventIdsMethodType_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AddCommentByEventIdsMethodType_OutputArguments = new NodeId(Variables.AddCommentByEventIdsMethodType_OutputArguments);

        /// <summary>
        /// The identifier for the AddCommentMethodType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AddCommentMethodType_InputArguments = new NodeId(Variables.AddCommentMethodType_InputArguments);

        /// <summary>
        /// The identifier for the ConditionType_GroupingId Variable.
        /// </summary>
        public static readonly NodeId ConditionType_GroupingId = new NodeId(Variables.ConditionType_GroupingId);

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConditionType_AddCommentByEventIds_InputArguments = new NodeId(Variables.ConditionType_AddCommentByEventIds_InputArguments);

        /// <summary>
        /// The identifier for the ConditionType_AddCommentByEventIds_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId ConditionType_AddCommentByEventIds_OutputArguments = new NodeId(Variables.ConditionType_AddCommentByEventIds_OutputArguments);

        /// <summary>
        /// The identifier for the StatusStateMachineType_Status Variable.
        /// </summary>
        public static readonly NodeId StatusStateMachineType_Status = new NodeId(Variables.StatusStateMachineType_Status);

        /// <summary>
        /// The identifier for the SeverityStateMachineType_LastSeverity Variable.
        /// </summary>
        public static readonly NodeId SeverityStateMachineType_LastSeverity = new NodeId(Variables.SeverityStateMachineType_LastSeverity);

        /// <summary>
        /// The identifier for the CommentStateMachineType_Comment Variable.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_Comment = new NodeId(Variables.CommentStateMachineType_Comment);

        /// <summary>
        /// The identifier for the CommentStateMachineType_ClientUserId Variable.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_ClientUserId = new NodeId(Variables.CommentStateMachineType_ClientUserId);

        /// <summary>
        /// The identifier for the CommentStateMachineType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CommentStateMachineType_AddComment_InputArguments = new NodeId(Variables.CommentStateMachineType_AddComment_InputArguments);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_EventId Variable.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_EventId = new NodeId(Variables.CommentPreviousStateMachineType_EventId);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_Comment Variable.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_Comment = new NodeId(Variables.CommentPreviousStateMachineType_Comment);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_ClientUserId Variable.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_ClientUserId = new NodeId(Variables.CommentPreviousStateMachineType_ClientUserId);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds_InputArguments Variable.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_AddCommentByEventIds_InputArguments = new NodeId(Variables.CommentPreviousStateMachineType_AddCommentByEventIds_InputArguments);

        /// <summary>
        /// The identifier for the CommentPreviousStateMachineType_AddCommentByEventIds_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId CommentPreviousStateMachineType_AddCommentByEventIds_OutputArguments = new NodeId(Variables.CommentPreviousStateMachineType_AddCommentByEventIds_OutputArguments);

        /// <summary>
        /// The identifier for the DialogConditionType_Prompt Variable.
        /// </summary>
        public static readonly NodeId DialogConditionType_Prompt = new NodeId(Variables.DialogConditionType_Prompt);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AckPrevious Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AckPrevious = new NodeId(Variables.AcknowledgeableConditionType_AckPrevious);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AcknowledgeByEventIds_InputArguments = new NodeId(Variables.AcknowledgeableConditionType_AcknowledgeByEventIds_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_AcknowledgeByEventIds_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_AcknowledgeByEventIds_OutputArguments = new NodeId(Variables.AcknowledgeableConditionType_AcknowledgeByEventIds_OutputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmByEventIds_InputArguments = new NodeId(Variables.AcknowledgeableConditionType_ConfirmByEventIds_InputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeableConditionType_ConfirmByEventIds_OutputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeableConditionType_ConfirmByEventIds_OutputArguments = new NodeId(Variables.AcknowledgeableConditionType_ConfirmByEventIds_OutputArguments);

        /// <summary>
        /// The identifier for the AcknowledgeStateMachineType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly NodeId AcknowledgeStateMachineType_Acknowledge_InputArguments = new NodeId(Variables.AcknowledgeStateMachineType_Acknowledge_InputArguments);

        /// <summary>
        /// The identifier for the ConfirmedStateMachineType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ConfirmedStateMachineType_Confirm_InputArguments = new NodeId(Variables.ConfirmedStateMachineType_Confirm_InputArguments);

        /// <summary>
        /// The identifier for the AlarmConditionType_SuppressedOrShelved Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_SuppressedOrShelved = new NodeId(Variables.AlarmConditionType_SuppressedOrShelved);

        /// <summary>
        /// The identifier for the AlarmConditionType_MaxTimeShelved Variable.
        /// </summary>
        public static readonly NodeId AlarmConditionType_MaxTimeShelved = new NodeId(Variables.AlarmConditionType_MaxTimeShelved);

        /// <summary>
        /// The identifier for the ShelvedStateMachineType_TimedShelve_InputArguments Variable.
        /// </summary>
        public static readonly NodeId ShelvedStateMachineType_TimedShelve_InputArguments = new NodeId(Variables.ShelvedStateMachineType_TimedShelve_InputArguments);

        /// <summary>
        /// The identifier for the TimedShelveMethodType_InputArguments Variable.
        /// </summary>
        public static readonly NodeId TimedShelveMethodType_InputArguments = new NodeId(Variables.TimedShelveMethodType_InputArguments);

        /// <summary>
        /// The identifier for the SingleLevelAlarmType_Limit Variable.
        /// </summary>
        public static readonly NodeId SingleLevelAlarmType_Limit = new NodeId(Variables.SingleLevelAlarmType_Limit);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_HighHighLimit Variable.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType_HighHighLimit = new NodeId(Variables.MultiLevelAlarmType_HighHighLimit);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_HighLimit Variable.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType_HighLimit = new NodeId(Variables.MultiLevelAlarmType_HighLimit);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_LowLimit Variable.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType_LowLimit = new NodeId(Variables.MultiLevelAlarmType_LowLimit);

        /// <summary>
        /// The identifier for the MultiLevelAlarmType_LowLowLimit Variable.
        /// </summary>
        public static readonly NodeId MultiLevelAlarmType_LowLowLimit = new NodeId(Variables.MultiLevelAlarmType_LowLowLimit);

        /// <summary>
        /// The identifier for the IdType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId IdType_EnumStrings = new NodeId(Variables.IdType_EnumStrings);

        /// <summary>
        /// The identifier for the NodeClass_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId NodeClass_EnumStrings = new NodeId(Variables.NodeClass_EnumStrings);

        /// <summary>
        /// The identifier for the MessageSecurityMode_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MessageSecurityMode_EnumStrings = new NodeId(Variables.MessageSecurityMode_EnumStrings);

        /// <summary>
        /// The identifier for the UserTokenType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId UserTokenType_EnumStrings = new NodeId(Variables.UserTokenType_EnumStrings);

        /// <summary>
        /// The identifier for the ApplicationType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ApplicationType_EnumStrings = new NodeId(Variables.ApplicationType_EnumStrings);

        /// <summary>
        /// The identifier for the SecurityTokenRequestType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId SecurityTokenRequestType_EnumStrings = new NodeId(Variables.SecurityTokenRequestType_EnumStrings);

        /// <summary>
        /// The identifier for the ComplianceLevel_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ComplianceLevel_EnumStrings = new NodeId(Variables.ComplianceLevel_EnumStrings);

        /// <summary>
        /// The identifier for the AttributeWriteMask_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId AttributeWriteMask_EnumStrings = new NodeId(Variables.AttributeWriteMask_EnumStrings);

        /// <summary>
        /// The identifier for the NodeAttributesMask_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId NodeAttributesMask_EnumStrings = new NodeId(Variables.NodeAttributesMask_EnumStrings);

        /// <summary>
        /// The identifier for the EnumeratedTestType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId EnumeratedTestType_EnumStrings = new NodeId(Variables.EnumeratedTestType_EnumStrings);

        /// <summary>
        /// The identifier for the BrowseDirection_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId BrowseDirection_EnumStrings = new NodeId(Variables.BrowseDirection_EnumStrings);

        /// <summary>
        /// The identifier for the BrowseResultMask_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId BrowseResultMask_EnumStrings = new NodeId(Variables.BrowseResultMask_EnumStrings);

        /// <summary>
        /// The identifier for the FilterOperator_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId FilterOperator_EnumStrings = new NodeId(Variables.FilterOperator_EnumStrings);

        /// <summary>
        /// The identifier for the TimestampsToReturn_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId TimestampsToReturn_EnumStrings = new NodeId(Variables.TimestampsToReturn_EnumStrings);

        /// <summary>
        /// The identifier for the HistoryUpdateMode_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId HistoryUpdateMode_EnumStrings = new NodeId(Variables.HistoryUpdateMode_EnumStrings);

        /// <summary>
        /// The identifier for the MonitoringMode_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId MonitoringMode_EnumStrings = new NodeId(Variables.MonitoringMode_EnumStrings);

        /// <summary>
        /// The identifier for the DataChangeTrigger_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId DataChangeTrigger_EnumStrings = new NodeId(Variables.DataChangeTrigger_EnumStrings);

        /// <summary>
        /// The identifier for the DeadbandType_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId DeadbandType_EnumStrings = new NodeId(Variables.DeadbandType_EnumStrings);

        /// <summary>
        /// The identifier for the RedundancySupport_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId RedundancySupport_EnumStrings = new NodeId(Variables.RedundancySupport_EnumStrings);

        /// <summary>
        /// The identifier for the ServerState_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ServerState_EnumStrings = new NodeId(Variables.ServerState_EnumStrings);

        /// <summary>
        /// The identifier for the ModelChangeStructureVerbMask_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ModelChangeStructureVerbMask_EnumStrings = new NodeId(Variables.ModelChangeStructureVerbMask_EnumStrings);

        /// <summary>
        /// The identifier for the ExceptionDeviationFormat_EnumStrings Variable.
        /// </summary>
        public static readonly NodeId ExceptionDeviationFormat_EnumStrings = new NodeId(Variables.ExceptionDeviationFormat_EnumStrings);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema = new NodeId(Variables.OpcUa_BinarySchema);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NamespaceUri = new NodeId(Variables.OpcUa_BinarySchema_NamespaceUri);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Node Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Node = new NodeId(Variables.OpcUa_BinarySchema_Node);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ObjectNode = new NodeId(Variables.OpcUa_BinarySchema_ObjectNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ObjectTypeNode = new NodeId(Variables.OpcUa_BinarySchema_ObjectTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_VariableNode = new NodeId(Variables.OpcUa_BinarySchema_VariableNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_VariableTypeNode = new NodeId(Variables.OpcUa_BinarySchema_VariableTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReferenceTypeNode = new NodeId(Variables.OpcUa_BinarySchema_ReferenceTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MethodNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MethodNode = new NodeId(Variables.OpcUa_BinarySchema_MethodNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ViewNode = new NodeId(Variables.OpcUa_BinarySchema_ViewNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataTypeNode = new NodeId(Variables.OpcUa_BinarySchema_DataTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReferenceNode = new NodeId(Variables.OpcUa_BinarySchema_ReferenceNode);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Argument Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Argument = new NodeId(Variables.OpcUa_BinarySchema_Argument);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TimeZoneDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TimeZoneDataType = new NodeId(Variables.OpcUa_BinarySchema_TimeZoneDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EnumValueInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EnumValueInfo = new NodeId(Variables.OpcUa_BinarySchema_EnumValueInfo);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StatusResult = new NodeId(Variables.OpcUa_BinarySchema_StatusResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserTokenPolicy Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserTokenPolicy = new NodeId(Variables.OpcUa_BinarySchema_UserTokenPolicy);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ApplicationDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ApplicationDescription = new NodeId(Variables.OpcUa_BinarySchema_ApplicationDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EndpointDescription = new NodeId(Variables.OpcUa_BinarySchema_EndpointDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserIdentityToken = new NodeId(Variables.OpcUa_BinarySchema_UserIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AnonymousIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AnonymousIdentityToken = new NodeId(Variables.OpcUa_BinarySchema_AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UserNameIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UserNameIdentityToken = new NodeId(Variables.OpcUa_BinarySchema_UserNameIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_X509IdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_X509IdentityToken = new NodeId(Variables.OpcUa_BinarySchema_X509IdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_IssuedIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_IssuedIdentityToken = new NodeId(Variables.OpcUa_BinarySchema_IssuedIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EndpointConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EndpointConfiguration = new NodeId(Variables.OpcUa_BinarySchema_EndpointConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SupportedProfile Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SupportedProfile = new NodeId(Variables.OpcUa_BinarySchema_SupportedProfile);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BuildInfo = new NodeId(Variables.OpcUa_BinarySchema_BuildInfo);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SoftwareCertificate = new NodeId(Variables.OpcUa_BinarySchema_SoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SignedSoftwareCertificate = new NodeId(Variables.OpcUa_BinarySchema_SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NodeAttributes = new NodeId(Variables.OpcUa_BinarySchema_NodeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ObjectAttributes = new NodeId(Variables.OpcUa_BinarySchema_ObjectAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_VariableAttributes = new NodeId(Variables.OpcUa_BinarySchema_VariableAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MethodAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MethodAttributes = new NodeId(Variables.OpcUa_BinarySchema_MethodAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ObjectTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ObjectTypeAttributes = new NodeId(Variables.OpcUa_BinarySchema_ObjectTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_VariableTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_VariableTypeAttributes = new NodeId(Variables.OpcUa_BinarySchema_VariableTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReferenceTypeAttributes = new NodeId(Variables.OpcUa_BinarySchema_ReferenceTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataTypeAttributes = new NodeId(Variables.OpcUa_BinarySchema_DataTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ViewAttributes = new NodeId(Variables.OpcUa_BinarySchema_ViewAttributes);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddNodesItem = new NodeId(Variables.OpcUa_BinarySchema_AddNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddReferencesItem = new NodeId(Variables.OpcUa_BinarySchema_AddReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteNodesItem = new NodeId(Variables.OpcUa_BinarySchema_DeleteNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteReferencesItem = new NodeId(Variables.OpcUa_BinarySchema_DeleteReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RequestHeader Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RequestHeader = new NodeId(Variables.OpcUa_BinarySchema_RequestHeader);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ResponseHeader Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ResponseHeader = new NodeId(Variables.OpcUa_BinarySchema_ResponseHeader);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceFault Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServiceFault = new NodeId(Variables.OpcUa_BinarySchema_ServiceFault);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ScalarTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ScalarTestType = new NodeId(Variables.OpcUa_BinarySchema_ScalarTestType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ArrayTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ArrayTestType = new NodeId(Variables.OpcUa_BinarySchema_ArrayTestType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CompositeTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CompositeTestType = new NodeId(Variables.OpcUa_BinarySchema_CompositeTestType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TestStackRequest = new NodeId(Variables.OpcUa_BinarySchema_TestStackRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TestStackResponse = new NodeId(Variables.OpcUa_BinarySchema_TestStackResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackExRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TestStackExRequest = new NodeId(Variables.OpcUa_BinarySchema_TestStackExRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TestStackExResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TestStackExResponse = new NodeId(Variables.OpcUa_BinarySchema_TestStackExResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FindServersRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_FindServersRequest = new NodeId(Variables.OpcUa_BinarySchema_FindServersRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FindServersResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_FindServersResponse = new NodeId(Variables.OpcUa_BinarySchema_FindServersResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_GetEndpointsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_GetEndpointsRequest = new NodeId(Variables.OpcUa_BinarySchema_GetEndpointsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_GetEndpointsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_GetEndpointsResponse = new NodeId(Variables.OpcUa_BinarySchema_GetEndpointsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisteredServer Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisteredServer = new NodeId(Variables.OpcUa_BinarySchema_RegisteredServer);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterServerRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisterServerRequest = new NodeId(Variables.OpcUa_BinarySchema_RegisterServerRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterServerResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisterServerResponse = new NodeId(Variables.OpcUa_BinarySchema_RegisterServerResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ChannelSecurityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ChannelSecurityToken = new NodeId(Variables.OpcUa_BinarySchema_ChannelSecurityToken);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OpenSecureChannelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_OpenSecureChannelRequest = new NodeId(Variables.OpcUa_BinarySchema_OpenSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_OpenSecureChannelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_OpenSecureChannelResponse = new NodeId(Variables.OpcUa_BinarySchema_OpenSecureChannelResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSecureChannelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CloseSecureChannelRequest = new NodeId(Variables.OpcUa_BinarySchema_CloseSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSecureChannelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CloseSecureChannelResponse = new NodeId(Variables.OpcUa_BinarySchema_CloseSecureChannelResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SignatureData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SignatureData = new NodeId(Variables.OpcUa_BinarySchema_SignatureData);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateSessionRequest = new NodeId(Variables.OpcUa_BinarySchema_CreateSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateSessionResponse = new NodeId(Variables.OpcUa_BinarySchema_CreateSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ActivateSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ActivateSessionRequest = new NodeId(Variables.OpcUa_BinarySchema_ActivateSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ActivateSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ActivateSessionResponse = new NodeId(Variables.OpcUa_BinarySchema_ActivateSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CloseSessionRequest = new NodeId(Variables.OpcUa_BinarySchema_CloseSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CloseSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CloseSessionResponse = new NodeId(Variables.OpcUa_BinarySchema_CloseSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CancelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CancelRequest = new NodeId(Variables.OpcUa_BinarySchema_CancelRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CancelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CancelResponse = new NodeId(Variables.OpcUa_BinarySchema_CancelResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddNodesResult = new NodeId(Variables.OpcUa_BinarySchema_AddNodesResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddNodesRequest = new NodeId(Variables.OpcUa_BinarySchema_AddNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddNodesResponse = new NodeId(Variables.OpcUa_BinarySchema_AddNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddReferencesRequest = new NodeId(Variables.OpcUa_BinarySchema_AddReferencesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AddReferencesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AddReferencesResponse = new NodeId(Variables.OpcUa_BinarySchema_AddReferencesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteNodesRequest = new NodeId(Variables.OpcUa_BinarySchema_DeleteNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteNodesResponse = new NodeId(Variables.OpcUa_BinarySchema_DeleteNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteReferencesRequest = new NodeId(Variables.OpcUa_BinarySchema_DeleteReferencesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteReferencesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteReferencesResponse = new NodeId(Variables.OpcUa_BinarySchema_DeleteReferencesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ViewDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ViewDescription = new NodeId(Variables.OpcUa_BinarySchema_ViewDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseDescription = new NodeId(Variables.OpcUa_BinarySchema_BrowseDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReferenceDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReferenceDescription = new NodeId(Variables.OpcUa_BinarySchema_ReferenceDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseResult = new NodeId(Variables.OpcUa_BinarySchema_BrowseResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseRequest = new NodeId(Variables.OpcUa_BinarySchema_BrowseRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseResponse = new NodeId(Variables.OpcUa_BinarySchema_BrowseResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseNextRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseNextRequest = new NodeId(Variables.OpcUa_BinarySchema_BrowseNextRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowseNextResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowseNextResponse = new NodeId(Variables.OpcUa_BinarySchema_BrowseNextResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePathElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RelativePathElement = new NodeId(Variables.OpcUa_BinarySchema_RelativePathElement);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RelativePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RelativePath = new NodeId(Variables.OpcUa_BinarySchema_RelativePath);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowsePath = new NodeId(Variables.OpcUa_BinarySchema_BrowsePath);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePathTarget Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowsePathTarget = new NodeId(Variables.OpcUa_BinarySchema_BrowsePathTarget);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_BrowsePathResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_BrowsePathResult = new NodeId(Variables.OpcUa_BinarySchema_BrowsePathResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsRequest = new NodeId(Variables.OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsResponse = new NodeId(Variables.OpcUa_BinarySchema_TranslateBrowsePathsToNodeIdsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisterNodesRequest = new NodeId(Variables.OpcUa_BinarySchema_RegisterNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RegisterNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RegisterNodesResponse = new NodeId(Variables.OpcUa_BinarySchema_RegisterNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UnregisterNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UnregisterNodesRequest = new NodeId(Variables.OpcUa_BinarySchema_UnregisterNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UnregisterNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UnregisterNodesResponse = new NodeId(Variables.OpcUa_BinarySchema_UnregisterNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryDataDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryDataDescription = new NodeId(Variables.OpcUa_BinarySchema_QueryDataDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeTypeDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NodeTypeDescription = new NodeId(Variables.OpcUa_BinarySchema_NodeTypeDescription);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryDataSet Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryDataSet = new NodeId(Variables.OpcUa_BinarySchema_QueryDataSet);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NodeReference Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NodeReference = new NodeId(Variables.OpcUa_BinarySchema_NodeReference);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilterElement = new NodeId(Variables.OpcUa_BinarySchema_ContentFilterElement);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilter = new NodeId(Variables.OpcUa_BinarySchema_ContentFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_FilterOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_FilterOperand = new NodeId(Variables.OpcUa_BinarySchema_FilterOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ElementOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ElementOperand = new NodeId(Variables.OpcUa_BinarySchema_ElementOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_LiteralOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_LiteralOperand = new NodeId(Variables.OpcUa_BinarySchema_LiteralOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AttributeOperand = new NodeId(Variables.OpcUa_BinarySchema_AttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SimpleAttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SimpleAttributeOperand = new NodeId(Variables.OpcUa_BinarySchema_SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterElementResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilterElementResult = new NodeId(Variables.OpcUa_BinarySchema_ContentFilterElementResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ContentFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ContentFilterResult = new NodeId(Variables.OpcUa_BinarySchema_ContentFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ParsingResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ParsingResult = new NodeId(Variables.OpcUa_BinarySchema_ParsingResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryFirstRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryFirstRequest = new NodeId(Variables.OpcUa_BinarySchema_QueryFirstRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryFirstResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryFirstResponse = new NodeId(Variables.OpcUa_BinarySchema_QueryFirstResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryNextRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryNextRequest = new NodeId(Variables.OpcUa_BinarySchema_QueryNextRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_QueryNextResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_QueryNextResponse = new NodeId(Variables.OpcUa_BinarySchema_QueryNextResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadValueId Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadValueId = new NodeId(Variables.OpcUa_BinarySchema_ReadValueId);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadRequest = new NodeId(Variables.OpcUa_BinarySchema_ReadRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadResponse = new NodeId(Variables.OpcUa_BinarySchema_ReadResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadValueId Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryReadValueId = new NodeId(Variables.OpcUa_BinarySchema_HistoryReadValueId);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryReadResult = new NodeId(Variables.OpcUa_BinarySchema_HistoryReadResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryReadDetails = new NodeId(Variables.OpcUa_BinarySchema_HistoryReadDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadEventDetails = new NodeId(Variables.OpcUa_BinarySchema_ReadEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadRawModifiedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadRawModifiedDetails = new NodeId(Variables.OpcUa_BinarySchema_ReadRawModifiedDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadProcessedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadProcessedDetails = new NodeId(Variables.OpcUa_BinarySchema_ReadProcessedDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ReadAtTimeDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ReadAtTimeDetails = new NodeId(Variables.OpcUa_BinarySchema_ReadAtTimeDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryData = new NodeId(Variables.OpcUa_BinarySchema_HistoryData);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEvent Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryEvent = new NodeId(Variables.OpcUa_BinarySchema_HistoryEvent);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryReadRequest = new NodeId(Variables.OpcUa_BinarySchema_HistoryReadRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryReadResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryReadResponse = new NodeId(Variables.OpcUa_BinarySchema_HistoryReadResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteValue Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_WriteValue = new NodeId(Variables.OpcUa_BinarySchema_WriteValue);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_WriteRequest = new NodeId(Variables.OpcUa_BinarySchema_WriteRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_WriteResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_WriteResponse = new NodeId(Variables.OpcUa_BinarySchema_WriteResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryUpdateDetails = new NodeId(Variables.OpcUa_BinarySchema_HistoryUpdateDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UpdateDataDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UpdateDataDetails = new NodeId(Variables.OpcUa_BinarySchema_UpdateDataDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_InsertReplaceEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_InsertReplaceEventDetails = new NodeId(Variables.OpcUa_BinarySchema_InsertReplaceEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_UpdateEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_UpdateEventDetails = new NodeId(Variables.OpcUa_BinarySchema_UpdateEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteRawModifiedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteRawModifiedDetails = new NodeId(Variables.OpcUa_BinarySchema_DeleteRawModifiedDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteAtTimeDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteAtTimeDetails = new NodeId(Variables.OpcUa_BinarySchema_DeleteAtTimeDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteEventDetails = new NodeId(Variables.OpcUa_BinarySchema_DeleteEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryUpdateResult = new NodeId(Variables.OpcUa_BinarySchema_HistoryUpdateResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateEventResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryUpdateEventResult = new NodeId(Variables.OpcUa_BinarySchema_HistoryUpdateEventResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryUpdateRequest = new NodeId(Variables.OpcUa_BinarySchema_HistoryUpdateRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryUpdateResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryUpdateResponse = new NodeId(Variables.OpcUa_BinarySchema_HistoryUpdateResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallMethodRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CallMethodRequest = new NodeId(Variables.OpcUa_BinarySchema_CallMethodRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallMethodResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CallMethodResult = new NodeId(Variables.OpcUa_BinarySchema_CallMethodResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CallRequest = new NodeId(Variables.OpcUa_BinarySchema_CallRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CallResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CallResponse = new NodeId(Variables.OpcUa_BinarySchema_CallResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoringFilter = new NodeId(Variables.OpcUa_BinarySchema_MonitoringFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataChangeFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataChangeFilter = new NodeId(Variables.OpcUa_BinarySchema_DataChangeFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EventFilter = new NodeId(Variables.OpcUa_BinarySchema_EventFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AggregateConfiguration = new NodeId(Variables.OpcUa_BinarySchema_AggregateConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AggregateFilter = new NodeId(Variables.OpcUa_BinarySchema_AggregateFilter);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoringFilterResult = new NodeId(Variables.OpcUa_BinarySchema_MonitoringFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EventFilterResult = new NodeId(Variables.OpcUa_BinarySchema_EventFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_AggregateFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_AggregateFilterResult = new NodeId(Variables.OpcUa_BinarySchema_AggregateFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoringParameters Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoringParameters = new NodeId(Variables.OpcUa_BinarySchema_MonitoringParameters);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemCreateRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoredItemCreateRequest = new NodeId(Variables.OpcUa_BinarySchema_MonitoredItemCreateRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemCreateResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoredItemCreateResult = new NodeId(Variables.OpcUa_BinarySchema_MonitoredItemCreateResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateMonitoredItemsRequest = new NodeId(Variables.OpcUa_BinarySchema_CreateMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateMonitoredItemsResponse = new NodeId(Variables.OpcUa_BinarySchema_CreateMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemModifyRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoredItemModifyRequest = new NodeId(Variables.OpcUa_BinarySchema_MonitoredItemModifyRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemModifyResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoredItemModifyResult = new NodeId(Variables.OpcUa_BinarySchema_MonitoredItemModifyResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifyMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModifyMonitoredItemsRequest = new NodeId(Variables.OpcUa_BinarySchema_ModifyMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifyMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModifyMonitoredItemsResponse = new NodeId(Variables.OpcUa_BinarySchema_ModifyMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetMonitoringModeRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetMonitoringModeRequest = new NodeId(Variables.OpcUa_BinarySchema_SetMonitoringModeRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetMonitoringModeResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetMonitoringModeResponse = new NodeId(Variables.OpcUa_BinarySchema_SetMonitoringModeResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetTriggeringRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetTriggeringRequest = new NodeId(Variables.OpcUa_BinarySchema_SetTriggeringRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetTriggeringResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetTriggeringResponse = new NodeId(Variables.OpcUa_BinarySchema_SetTriggeringResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteMonitoredItemsRequest = new NodeId(Variables.OpcUa_BinarySchema_DeleteMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteMonitoredItemsResponse = new NodeId(Variables.OpcUa_BinarySchema_DeleteMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSubscriptionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateSubscriptionRequest = new NodeId(Variables.OpcUa_BinarySchema_CreateSubscriptionRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_CreateSubscriptionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_CreateSubscriptionResponse = new NodeId(Variables.OpcUa_BinarySchema_CreateSubscriptionResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifySubscriptionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModifySubscriptionRequest = new NodeId(Variables.OpcUa_BinarySchema_ModifySubscriptionRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModifySubscriptionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModifySubscriptionResponse = new NodeId(Variables.OpcUa_BinarySchema_ModifySubscriptionResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetPublishingModeRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetPublishingModeRequest = new NodeId(Variables.OpcUa_BinarySchema_SetPublishingModeRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SetPublishingModeResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SetPublishingModeResponse = new NodeId(Variables.OpcUa_BinarySchema_SetPublishingModeResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NotificationMessage Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NotificationMessage = new NodeId(Variables.OpcUa_BinarySchema_NotificationMessage);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_NotificationData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_NotificationData = new NodeId(Variables.OpcUa_BinarySchema_NotificationData);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DataChangeNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DataChangeNotification = new NodeId(Variables.OpcUa_BinarySchema_DataChangeNotification);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_MonitoredItemNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_MonitoredItemNotification = new NodeId(Variables.OpcUa_BinarySchema_MonitoredItemNotification);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventNotificationList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EventNotificationList = new NodeId(Variables.OpcUa_BinarySchema_EventNotificationList);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EventFieldList = new NodeId(Variables.OpcUa_BinarySchema_EventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_HistoryEventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_HistoryEventFieldList = new NodeId(Variables.OpcUa_BinarySchema_HistoryEventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_StatusChangeNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_StatusChangeNotification = new NodeId(Variables.OpcUa_BinarySchema_StatusChangeNotification);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionAcknowledgement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SubscriptionAcknowledgement = new NodeId(Variables.OpcUa_BinarySchema_SubscriptionAcknowledgement);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_PublishRequest = new NodeId(Variables.OpcUa_BinarySchema_PublishRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_PublishResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_PublishResponse = new NodeId(Variables.OpcUa_BinarySchema_PublishResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RepublishRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RepublishRequest = new NodeId(Variables.OpcUa_BinarySchema_RepublishRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RepublishResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RepublishResponse = new NodeId(Variables.OpcUa_BinarySchema_RepublishResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TransferResult = new NodeId(Variables.OpcUa_BinarySchema_TransferResult);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferSubscriptionsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TransferSubscriptionsRequest = new NodeId(Variables.OpcUa_BinarySchema_TransferSubscriptionsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_TransferSubscriptionsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_TransferSubscriptionsResponse = new NodeId(Variables.OpcUa_BinarySchema_TransferSubscriptionsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteSubscriptionsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteSubscriptionsRequest = new NodeId(Variables.OpcUa_BinarySchema_DeleteSubscriptionsRequest);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_DeleteSubscriptionsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_DeleteSubscriptionsResponse = new NodeId(Variables.OpcUa_BinarySchema_DeleteSubscriptionsResponse);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_RedundantServerDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_RedundantServerDataType = new NodeId(Variables.OpcUa_BinarySchema_RedundantServerDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType = new NodeId(Variables.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType = new NodeId(Variables.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServerStatusDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServerStatusDataType = new NodeId(Variables.OpcUa_BinarySchema_ServerStatusDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SessionDiagnosticsDataType = new NodeId(Variables.OpcUa_BinarySchema_SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType = new NodeId(Variables.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ServiceCounterDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ServiceCounterDataType = new NodeId(Variables.OpcUa_BinarySchema_ServiceCounterDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SubscriptionDiagnosticsDataType = new NodeId(Variables.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ModelChangeStructureDataType = new NodeId(Variables.OpcUa_BinarySchema_ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_SemanticChangeStructureDataType = new NodeId(Variables.OpcUa_BinarySchema_SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Range Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Range = new NodeId(Variables.OpcUa_BinarySchema_Range);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_EUInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_EUInformation = new NodeId(Variables.OpcUa_BinarySchema_EUInformation);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_Annotation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_Annotation = new NodeId(Variables.OpcUa_BinarySchema_Annotation);

        /// <summary>
        /// The identifier for the OpcUa_BinarySchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_BinarySchema_ProgramDiagnosticDataType = new NodeId(Variables.OpcUa_BinarySchema_ProgramDiagnosticDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema = new NodeId(Variables.OpcUa_XmlSchema);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NamespaceUri = new NodeId(Variables.OpcUa_XmlSchema_NamespaceUri);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Node Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Node = new NodeId(Variables.OpcUa_XmlSchema_Node);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ObjectNode = new NodeId(Variables.OpcUa_XmlSchema_ObjectNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ObjectTypeNode = new NodeId(Variables.OpcUa_XmlSchema_ObjectTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_VariableNode = new NodeId(Variables.OpcUa_XmlSchema_VariableNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_VariableTypeNode = new NodeId(Variables.OpcUa_XmlSchema_VariableTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReferenceTypeNode = new NodeId(Variables.OpcUa_XmlSchema_ReferenceTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MethodNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MethodNode = new NodeId(Variables.OpcUa_XmlSchema_MethodNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ViewNode = new NodeId(Variables.OpcUa_XmlSchema_ViewNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataTypeNode = new NodeId(Variables.OpcUa_XmlSchema_DataTypeNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceNode Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReferenceNode = new NodeId(Variables.OpcUa_XmlSchema_ReferenceNode);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Argument Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Argument = new NodeId(Variables.OpcUa_XmlSchema_Argument);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TimeZoneDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TimeZoneDataType = new NodeId(Variables.OpcUa_XmlSchema_TimeZoneDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EnumValueInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EnumValueInfo = new NodeId(Variables.OpcUa_XmlSchema_EnumValueInfo);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StatusResult = new NodeId(Variables.OpcUa_XmlSchema_StatusResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserTokenPolicy Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserTokenPolicy = new NodeId(Variables.OpcUa_XmlSchema_UserTokenPolicy);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ApplicationDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ApplicationDescription = new NodeId(Variables.OpcUa_XmlSchema_ApplicationDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EndpointDescription = new NodeId(Variables.OpcUa_XmlSchema_EndpointDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserIdentityToken = new NodeId(Variables.OpcUa_XmlSchema_UserIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AnonymousIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AnonymousIdentityToken = new NodeId(Variables.OpcUa_XmlSchema_AnonymousIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UserNameIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UserNameIdentityToken = new NodeId(Variables.OpcUa_XmlSchema_UserNameIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_X509IdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_X509IdentityToken = new NodeId(Variables.OpcUa_XmlSchema_X509IdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_IssuedIdentityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_IssuedIdentityToken = new NodeId(Variables.OpcUa_XmlSchema_IssuedIdentityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EndpointConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EndpointConfiguration = new NodeId(Variables.OpcUa_XmlSchema_EndpointConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SupportedProfile Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SupportedProfile = new NodeId(Variables.OpcUa_XmlSchema_SupportedProfile);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BuildInfo Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BuildInfo = new NodeId(Variables.OpcUa_XmlSchema_BuildInfo);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SoftwareCertificate = new NodeId(Variables.OpcUa_XmlSchema_SoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignedSoftwareCertificate Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SignedSoftwareCertificate = new NodeId(Variables.OpcUa_XmlSchema_SignedSoftwareCertificate);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NodeAttributes = new NodeId(Variables.OpcUa_XmlSchema_NodeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ObjectAttributes = new NodeId(Variables.OpcUa_XmlSchema_ObjectAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_VariableAttributes = new NodeId(Variables.OpcUa_XmlSchema_VariableAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MethodAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MethodAttributes = new NodeId(Variables.OpcUa_XmlSchema_MethodAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ObjectTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ObjectTypeAttributes = new NodeId(Variables.OpcUa_XmlSchema_ObjectTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_VariableTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_VariableTypeAttributes = new NodeId(Variables.OpcUa_XmlSchema_VariableTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReferenceTypeAttributes = new NodeId(Variables.OpcUa_XmlSchema_ReferenceTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataTypeAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataTypeAttributes = new NodeId(Variables.OpcUa_XmlSchema_DataTypeAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewAttributes Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ViewAttributes = new NodeId(Variables.OpcUa_XmlSchema_ViewAttributes);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddNodesItem = new NodeId(Variables.OpcUa_XmlSchema_AddNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddReferencesItem = new NodeId(Variables.OpcUa_XmlSchema_AddReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteNodesItem = new NodeId(Variables.OpcUa_XmlSchema_DeleteNodesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesItem Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteReferencesItem = new NodeId(Variables.OpcUa_XmlSchema_DeleteReferencesItem);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RequestHeader Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RequestHeader = new NodeId(Variables.OpcUa_XmlSchema_RequestHeader);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ResponseHeader Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ResponseHeader = new NodeId(Variables.OpcUa_XmlSchema_ResponseHeader);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceFault Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServiceFault = new NodeId(Variables.OpcUa_XmlSchema_ServiceFault);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ScalarTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ScalarTestType = new NodeId(Variables.OpcUa_XmlSchema_ScalarTestType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ArrayTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ArrayTestType = new NodeId(Variables.OpcUa_XmlSchema_ArrayTestType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CompositeTestType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CompositeTestType = new NodeId(Variables.OpcUa_XmlSchema_CompositeTestType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TestStackRequest = new NodeId(Variables.OpcUa_XmlSchema_TestStackRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TestStackResponse = new NodeId(Variables.OpcUa_XmlSchema_TestStackResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackExRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TestStackExRequest = new NodeId(Variables.OpcUa_XmlSchema_TestStackExRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TestStackExResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TestStackExResponse = new NodeId(Variables.OpcUa_XmlSchema_TestStackExResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FindServersRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_FindServersRequest = new NodeId(Variables.OpcUa_XmlSchema_FindServersRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FindServersResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_FindServersResponse = new NodeId(Variables.OpcUa_XmlSchema_FindServersResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_GetEndpointsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_GetEndpointsRequest = new NodeId(Variables.OpcUa_XmlSchema_GetEndpointsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_GetEndpointsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_GetEndpointsResponse = new NodeId(Variables.OpcUa_XmlSchema_GetEndpointsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisteredServer Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisteredServer = new NodeId(Variables.OpcUa_XmlSchema_RegisteredServer);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterServerRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisterServerRequest = new NodeId(Variables.OpcUa_XmlSchema_RegisterServerRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterServerResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisterServerResponse = new NodeId(Variables.OpcUa_XmlSchema_RegisterServerResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ChannelSecurityToken Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ChannelSecurityToken = new NodeId(Variables.OpcUa_XmlSchema_ChannelSecurityToken);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OpenSecureChannelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_OpenSecureChannelRequest = new NodeId(Variables.OpcUa_XmlSchema_OpenSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_OpenSecureChannelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_OpenSecureChannelResponse = new NodeId(Variables.OpcUa_XmlSchema_OpenSecureChannelResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSecureChannelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CloseSecureChannelRequest = new NodeId(Variables.OpcUa_XmlSchema_CloseSecureChannelRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSecureChannelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CloseSecureChannelResponse = new NodeId(Variables.OpcUa_XmlSchema_CloseSecureChannelResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SignatureData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SignatureData = new NodeId(Variables.OpcUa_XmlSchema_SignatureData);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateSessionRequest = new NodeId(Variables.OpcUa_XmlSchema_CreateSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateSessionResponse = new NodeId(Variables.OpcUa_XmlSchema_CreateSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ActivateSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ActivateSessionRequest = new NodeId(Variables.OpcUa_XmlSchema_ActivateSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ActivateSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ActivateSessionResponse = new NodeId(Variables.OpcUa_XmlSchema_ActivateSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSessionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CloseSessionRequest = new NodeId(Variables.OpcUa_XmlSchema_CloseSessionRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CloseSessionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CloseSessionResponse = new NodeId(Variables.OpcUa_XmlSchema_CloseSessionResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CancelRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CancelRequest = new NodeId(Variables.OpcUa_XmlSchema_CancelRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CancelResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CancelResponse = new NodeId(Variables.OpcUa_XmlSchema_CancelResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddNodesResult = new NodeId(Variables.OpcUa_XmlSchema_AddNodesResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddNodesRequest = new NodeId(Variables.OpcUa_XmlSchema_AddNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddNodesResponse = new NodeId(Variables.OpcUa_XmlSchema_AddNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddReferencesRequest = new NodeId(Variables.OpcUa_XmlSchema_AddReferencesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AddReferencesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AddReferencesResponse = new NodeId(Variables.OpcUa_XmlSchema_AddReferencesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteNodesRequest = new NodeId(Variables.OpcUa_XmlSchema_DeleteNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteNodesResponse = new NodeId(Variables.OpcUa_XmlSchema_DeleteNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteReferencesRequest = new NodeId(Variables.OpcUa_XmlSchema_DeleteReferencesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteReferencesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteReferencesResponse = new NodeId(Variables.OpcUa_XmlSchema_DeleteReferencesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ViewDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ViewDescription = new NodeId(Variables.OpcUa_XmlSchema_ViewDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseDescription = new NodeId(Variables.OpcUa_XmlSchema_BrowseDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReferenceDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReferenceDescription = new NodeId(Variables.OpcUa_XmlSchema_ReferenceDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseResult = new NodeId(Variables.OpcUa_XmlSchema_BrowseResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseRequest = new NodeId(Variables.OpcUa_XmlSchema_BrowseRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseResponse = new NodeId(Variables.OpcUa_XmlSchema_BrowseResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseNextRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseNextRequest = new NodeId(Variables.OpcUa_XmlSchema_BrowseNextRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowseNextResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowseNextResponse = new NodeId(Variables.OpcUa_XmlSchema_BrowseNextResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePathElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RelativePathElement = new NodeId(Variables.OpcUa_XmlSchema_RelativePathElement);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RelativePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RelativePath = new NodeId(Variables.OpcUa_XmlSchema_RelativePath);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePath Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowsePath = new NodeId(Variables.OpcUa_XmlSchema_BrowsePath);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePathTarget Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowsePathTarget = new NodeId(Variables.OpcUa_XmlSchema_BrowsePathTarget);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_BrowsePathResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_BrowsePathResult = new NodeId(Variables.OpcUa_XmlSchema_BrowsePathResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsRequest = new NodeId(Variables.OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsResponse = new NodeId(Variables.OpcUa_XmlSchema_TranslateBrowsePathsToNodeIdsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisterNodesRequest = new NodeId(Variables.OpcUa_XmlSchema_RegisterNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RegisterNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RegisterNodesResponse = new NodeId(Variables.OpcUa_XmlSchema_RegisterNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UnregisterNodesRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UnregisterNodesRequest = new NodeId(Variables.OpcUa_XmlSchema_UnregisterNodesRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UnregisterNodesResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UnregisterNodesResponse = new NodeId(Variables.OpcUa_XmlSchema_UnregisterNodesResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryDataDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryDataDescription = new NodeId(Variables.OpcUa_XmlSchema_QueryDataDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeTypeDescription Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NodeTypeDescription = new NodeId(Variables.OpcUa_XmlSchema_NodeTypeDescription);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryDataSet Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryDataSet = new NodeId(Variables.OpcUa_XmlSchema_QueryDataSet);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NodeReference Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NodeReference = new NodeId(Variables.OpcUa_XmlSchema_NodeReference);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilterElement = new NodeId(Variables.OpcUa_XmlSchema_ContentFilterElement);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilter = new NodeId(Variables.OpcUa_XmlSchema_ContentFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_FilterOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_FilterOperand = new NodeId(Variables.OpcUa_XmlSchema_FilterOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ElementOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ElementOperand = new NodeId(Variables.OpcUa_XmlSchema_ElementOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_LiteralOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_LiteralOperand = new NodeId(Variables.OpcUa_XmlSchema_LiteralOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AttributeOperand = new NodeId(Variables.OpcUa_XmlSchema_AttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SimpleAttributeOperand Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SimpleAttributeOperand = new NodeId(Variables.OpcUa_XmlSchema_SimpleAttributeOperand);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterElementResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilterElementResult = new NodeId(Variables.OpcUa_XmlSchema_ContentFilterElementResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ContentFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ContentFilterResult = new NodeId(Variables.OpcUa_XmlSchema_ContentFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ParsingResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ParsingResult = new NodeId(Variables.OpcUa_XmlSchema_ParsingResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryFirstRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryFirstRequest = new NodeId(Variables.OpcUa_XmlSchema_QueryFirstRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryFirstResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryFirstResponse = new NodeId(Variables.OpcUa_XmlSchema_QueryFirstResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryNextRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryNextRequest = new NodeId(Variables.OpcUa_XmlSchema_QueryNextRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_QueryNextResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_QueryNextResponse = new NodeId(Variables.OpcUa_XmlSchema_QueryNextResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadValueId Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadValueId = new NodeId(Variables.OpcUa_XmlSchema_ReadValueId);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadRequest = new NodeId(Variables.OpcUa_XmlSchema_ReadRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadResponse = new NodeId(Variables.OpcUa_XmlSchema_ReadResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadValueId Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryReadValueId = new NodeId(Variables.OpcUa_XmlSchema_HistoryReadValueId);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryReadResult = new NodeId(Variables.OpcUa_XmlSchema_HistoryReadResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryReadDetails = new NodeId(Variables.OpcUa_XmlSchema_HistoryReadDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadEventDetails = new NodeId(Variables.OpcUa_XmlSchema_ReadEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadRawModifiedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadRawModifiedDetails = new NodeId(Variables.OpcUa_XmlSchema_ReadRawModifiedDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadProcessedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadProcessedDetails = new NodeId(Variables.OpcUa_XmlSchema_ReadProcessedDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ReadAtTimeDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ReadAtTimeDetails = new NodeId(Variables.OpcUa_XmlSchema_ReadAtTimeDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryData = new NodeId(Variables.OpcUa_XmlSchema_HistoryData);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEvent Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryEvent = new NodeId(Variables.OpcUa_XmlSchema_HistoryEvent);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryReadRequest = new NodeId(Variables.OpcUa_XmlSchema_HistoryReadRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryReadResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryReadResponse = new NodeId(Variables.OpcUa_XmlSchema_HistoryReadResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteValue Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_WriteValue = new NodeId(Variables.OpcUa_XmlSchema_WriteValue);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_WriteRequest = new NodeId(Variables.OpcUa_XmlSchema_WriteRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_WriteResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_WriteResponse = new NodeId(Variables.OpcUa_XmlSchema_WriteResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryUpdateDetails = new NodeId(Variables.OpcUa_XmlSchema_HistoryUpdateDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UpdateDataDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UpdateDataDetails = new NodeId(Variables.OpcUa_XmlSchema_UpdateDataDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_InsertReplaceEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_InsertReplaceEventDetails = new NodeId(Variables.OpcUa_XmlSchema_InsertReplaceEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_UpdateEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_UpdateEventDetails = new NodeId(Variables.OpcUa_XmlSchema_UpdateEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteRawModifiedDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteRawModifiedDetails = new NodeId(Variables.OpcUa_XmlSchema_DeleteRawModifiedDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteAtTimeDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteAtTimeDetails = new NodeId(Variables.OpcUa_XmlSchema_DeleteAtTimeDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteEventDetails Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteEventDetails = new NodeId(Variables.OpcUa_XmlSchema_DeleteEventDetails);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryUpdateResult = new NodeId(Variables.OpcUa_XmlSchema_HistoryUpdateResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateEventResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryUpdateEventResult = new NodeId(Variables.OpcUa_XmlSchema_HistoryUpdateEventResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryUpdateRequest = new NodeId(Variables.OpcUa_XmlSchema_HistoryUpdateRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryUpdateResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryUpdateResponse = new NodeId(Variables.OpcUa_XmlSchema_HistoryUpdateResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallMethodRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CallMethodRequest = new NodeId(Variables.OpcUa_XmlSchema_CallMethodRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallMethodResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CallMethodResult = new NodeId(Variables.OpcUa_XmlSchema_CallMethodResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CallRequest = new NodeId(Variables.OpcUa_XmlSchema_CallRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CallResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CallResponse = new NodeId(Variables.OpcUa_XmlSchema_CallResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoringFilter = new NodeId(Variables.OpcUa_XmlSchema_MonitoringFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataChangeFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataChangeFilter = new NodeId(Variables.OpcUa_XmlSchema_DataChangeFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EventFilter = new NodeId(Variables.OpcUa_XmlSchema_EventFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateConfiguration Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AggregateConfiguration = new NodeId(Variables.OpcUa_XmlSchema_AggregateConfiguration);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateFilter Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AggregateFilter = new NodeId(Variables.OpcUa_XmlSchema_AggregateFilter);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoringFilterResult = new NodeId(Variables.OpcUa_XmlSchema_MonitoringFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EventFilterResult = new NodeId(Variables.OpcUa_XmlSchema_EventFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_AggregateFilterResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_AggregateFilterResult = new NodeId(Variables.OpcUa_XmlSchema_AggregateFilterResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoringParameters Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoringParameters = new NodeId(Variables.OpcUa_XmlSchema_MonitoringParameters);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemCreateRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoredItemCreateRequest = new NodeId(Variables.OpcUa_XmlSchema_MonitoredItemCreateRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemCreateResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoredItemCreateResult = new NodeId(Variables.OpcUa_XmlSchema_MonitoredItemCreateResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateMonitoredItemsRequest = new NodeId(Variables.OpcUa_XmlSchema_CreateMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateMonitoredItemsResponse = new NodeId(Variables.OpcUa_XmlSchema_CreateMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemModifyRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoredItemModifyRequest = new NodeId(Variables.OpcUa_XmlSchema_MonitoredItemModifyRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemModifyResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoredItemModifyResult = new NodeId(Variables.OpcUa_XmlSchema_MonitoredItemModifyResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifyMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModifyMonitoredItemsRequest = new NodeId(Variables.OpcUa_XmlSchema_ModifyMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifyMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModifyMonitoredItemsResponse = new NodeId(Variables.OpcUa_XmlSchema_ModifyMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetMonitoringModeRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetMonitoringModeRequest = new NodeId(Variables.OpcUa_XmlSchema_SetMonitoringModeRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetMonitoringModeResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetMonitoringModeResponse = new NodeId(Variables.OpcUa_XmlSchema_SetMonitoringModeResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetTriggeringRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetTriggeringRequest = new NodeId(Variables.OpcUa_XmlSchema_SetTriggeringRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetTriggeringResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetTriggeringResponse = new NodeId(Variables.OpcUa_XmlSchema_SetTriggeringResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteMonitoredItemsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteMonitoredItemsRequest = new NodeId(Variables.OpcUa_XmlSchema_DeleteMonitoredItemsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteMonitoredItemsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteMonitoredItemsResponse = new NodeId(Variables.OpcUa_XmlSchema_DeleteMonitoredItemsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSubscriptionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateSubscriptionRequest = new NodeId(Variables.OpcUa_XmlSchema_CreateSubscriptionRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_CreateSubscriptionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_CreateSubscriptionResponse = new NodeId(Variables.OpcUa_XmlSchema_CreateSubscriptionResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifySubscriptionRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModifySubscriptionRequest = new NodeId(Variables.OpcUa_XmlSchema_ModifySubscriptionRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModifySubscriptionResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModifySubscriptionResponse = new NodeId(Variables.OpcUa_XmlSchema_ModifySubscriptionResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetPublishingModeRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetPublishingModeRequest = new NodeId(Variables.OpcUa_XmlSchema_SetPublishingModeRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SetPublishingModeResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SetPublishingModeResponse = new NodeId(Variables.OpcUa_XmlSchema_SetPublishingModeResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NotificationMessage Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NotificationMessage = new NodeId(Variables.OpcUa_XmlSchema_NotificationMessage);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_NotificationData Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_NotificationData = new NodeId(Variables.OpcUa_XmlSchema_NotificationData);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DataChangeNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DataChangeNotification = new NodeId(Variables.OpcUa_XmlSchema_DataChangeNotification);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_MonitoredItemNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_MonitoredItemNotification = new NodeId(Variables.OpcUa_XmlSchema_MonitoredItemNotification);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventNotificationList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EventNotificationList = new NodeId(Variables.OpcUa_XmlSchema_EventNotificationList);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EventFieldList = new NodeId(Variables.OpcUa_XmlSchema_EventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_HistoryEventFieldList Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_HistoryEventFieldList = new NodeId(Variables.OpcUa_XmlSchema_HistoryEventFieldList);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_StatusChangeNotification Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_StatusChangeNotification = new NodeId(Variables.OpcUa_XmlSchema_StatusChangeNotification);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionAcknowledgement Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SubscriptionAcknowledgement = new NodeId(Variables.OpcUa_XmlSchema_SubscriptionAcknowledgement);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_PublishRequest = new NodeId(Variables.OpcUa_XmlSchema_PublishRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_PublishResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_PublishResponse = new NodeId(Variables.OpcUa_XmlSchema_PublishResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RepublishRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RepublishRequest = new NodeId(Variables.OpcUa_XmlSchema_RepublishRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RepublishResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RepublishResponse = new NodeId(Variables.OpcUa_XmlSchema_RepublishResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferResult Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TransferResult = new NodeId(Variables.OpcUa_XmlSchema_TransferResult);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferSubscriptionsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TransferSubscriptionsRequest = new NodeId(Variables.OpcUa_XmlSchema_TransferSubscriptionsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_TransferSubscriptionsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_TransferSubscriptionsResponse = new NodeId(Variables.OpcUa_XmlSchema_TransferSubscriptionsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteSubscriptionsRequest Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteSubscriptionsRequest = new NodeId(Variables.OpcUa_XmlSchema_DeleteSubscriptionsRequest);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_DeleteSubscriptionsResponse Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_DeleteSubscriptionsResponse = new NodeId(Variables.OpcUa_XmlSchema_DeleteSubscriptionsResponse);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_RedundantServerDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_RedundantServerDataType = new NodeId(Variables.OpcUa_XmlSchema_RedundantServerDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType = new NodeId(Variables.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType = new NodeId(Variables.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServerStatusDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServerStatusDataType = new NodeId(Variables.OpcUa_XmlSchema_ServerStatusDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SessionDiagnosticsDataType = new NodeId(Variables.OpcUa_XmlSchema_SessionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType = new NodeId(Variables.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ServiceCounterDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ServiceCounterDataType = new NodeId(Variables.OpcUa_XmlSchema_ServiceCounterDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SubscriptionDiagnosticsDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SubscriptionDiagnosticsDataType = new NodeId(Variables.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ModelChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ModelChangeStructureDataType = new NodeId(Variables.OpcUa_XmlSchema_ModelChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_SemanticChangeStructureDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_SemanticChangeStructureDataType = new NodeId(Variables.OpcUa_XmlSchema_SemanticChangeStructureDataType);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Range Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Range = new NodeId(Variables.OpcUa_XmlSchema_Range);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_EUInformation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_EUInformation = new NodeId(Variables.OpcUa_XmlSchema_EUInformation);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_Annotation Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_Annotation = new NodeId(Variables.OpcUa_XmlSchema_Annotation);

        /// <summary>
        /// The identifier for the OpcUa_XmlSchema_ProgramDiagnosticDataType Variable.
        /// </summary>
        public static readonly NodeId OpcUa_XmlSchema_ProgramDiagnosticDataType = new NodeId(Variables.OpcUa_XmlSchema_ProgramDiagnosticDataType);
    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelDesigner", "1.0.0.0")]
    public static partial class VariableTypeIds
    {
        /// <summary>
        /// The identifier for the BaseVariableType VariableType.
        /// </summary>
        public static readonly NodeId BaseVariableType = new NodeId(VariableTypes.BaseVariableType);

        /// <summary>
        /// The identifier for the BaseDataVariableType VariableType.
        /// </summary>
        public static readonly NodeId BaseDataVariableType = new NodeId(VariableTypes.BaseDataVariableType);

        /// <summary>
        /// The identifier for the PropertyType VariableType.
        /// </summary>
        public static readonly NodeId PropertyType = new NodeId(VariableTypes.PropertyType);

        /// <summary>
        /// The identifier for the DataTypeDescriptionType VariableType.
        /// </summary>
        public static readonly NodeId DataTypeDescriptionType = new NodeId(VariableTypes.DataTypeDescriptionType);

        /// <summary>
        /// The identifier for the DataTypeDictionaryType VariableType.
        /// </summary>
        public static readonly NodeId DataTypeDictionaryType = new NodeId(VariableTypes.DataTypeDictionaryType);

        /// <summary>
        /// The identifier for the ServerVendorCapabilityType VariableType.
        /// </summary>
        public static readonly NodeId ServerVendorCapabilityType = new NodeId(VariableTypes.ServerVendorCapabilityType);

        /// <summary>
        /// The identifier for the ServerStatusType VariableType.
        /// </summary>
        public static readonly NodeId ServerStatusType = new NodeId(VariableTypes.ServerStatusType);

        /// <summary>
        /// The identifier for the BuildInfoType VariableType.
        /// </summary>
        public static readonly NodeId BuildInfoType = new NodeId(VariableTypes.BuildInfoType);

        /// <summary>
        /// The identifier for the ServerDiagnosticsSummaryType VariableType.
        /// </summary>
        public static readonly NodeId ServerDiagnosticsSummaryType = new NodeId(VariableTypes.ServerDiagnosticsSummaryType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsArrayType = new NodeId(VariableTypes.SamplingIntervalDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SamplingIntervalDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SamplingIntervalDiagnosticsType = new NodeId(VariableTypes.SamplingIntervalDiagnosticsType);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsArrayType = new NodeId(VariableTypes.SubscriptionDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SubscriptionDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SubscriptionDiagnosticsType = new NodeId(VariableTypes.SubscriptionDiagnosticsType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsArrayType = new NodeId(VariableTypes.SessionDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SessionDiagnosticsVariableType VariableType.
        /// </summary>
        public static readonly NodeId SessionDiagnosticsVariableType = new NodeId(VariableTypes.SessionDiagnosticsVariableType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsArrayType VariableType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsArrayType = new NodeId(VariableTypes.SessionSecurityDiagnosticsArrayType);

        /// <summary>
        /// The identifier for the SessionSecurityDiagnosticsType VariableType.
        /// </summary>
        public static readonly NodeId SessionSecurityDiagnosticsType = new NodeId(VariableTypes.SessionSecurityDiagnosticsType);

        /// <summary>
        /// The identifier for the StateVariableType VariableType.
        /// </summary>
        public static readonly NodeId StateVariableType = new NodeId(VariableTypes.StateVariableType);

        /// <summary>
        /// The identifier for the FiniteStateVariableType VariableType.
        /// </summary>
        public static readonly NodeId FiniteStateVariableType = new NodeId(VariableTypes.FiniteStateVariableType);

        /// <summary>
        /// The identifier for the TransitionVariableType VariableType.
        /// </summary>
        public static readonly NodeId TransitionVariableType = new NodeId(VariableTypes.TransitionVariableType);

        /// <summary>
        /// The identifier for the FiniteTransitionVariableType VariableType.
        /// </summary>
        public static readonly NodeId FiniteTransitionVariableType = new NodeId(VariableTypes.FiniteTransitionVariableType);

        /// <summary>
        /// The identifier for the DataItemType VariableType.
        /// </summary>
        public static readonly NodeId DataItemType = new NodeId(VariableTypes.DataItemType);

        /// <summary>
        /// The identifier for the AnalogItemType VariableType.
        /// </summary>
        public static readonly NodeId AnalogItemType = new NodeId(VariableTypes.AnalogItemType);

        /// <summary>
        /// The identifier for the DiscreteItemType VariableType.
        /// </summary>
        public static readonly NodeId DiscreteItemType = new NodeId(VariableTypes.DiscreteItemType);

        /// <summary>
        /// The identifier for the TwoStateDiscreteType VariableType.
        /// </summary>
        public static readonly NodeId TwoStateDiscreteType = new NodeId(VariableTypes.TwoStateDiscreteType);

        /// <summary>
        /// The identifier for the MultiStateDiscreteType VariableType.
        /// </summary>
        public static readonly NodeId MultiStateDiscreteType = new NodeId(VariableTypes.MultiStateDiscreteType);

        /// <summary>
        /// The identifier for the ProgramDiagnosticType VariableType.
        /// </summary>
        public static readonly NodeId ProgramDiagnosticType = new NodeId(VariableTypes.ProgramDiagnosticType);

        /// <summary>
        /// The identifier for the AlarmLimitType VariableType.
        /// </summary>
        public static readonly NodeId AlarmLimitType = new NodeId(VariableTypes.AlarmLimitType);
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model Design.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the Accepting component.
        /// </summary>
        public const string Accepting = "Accepting";

        /// <summary>
        /// The BrowseName for the AcceptingToInactive component.
        /// </summary>
        public const string AcceptingToInactive = "AcceptingToInactive";

        /// <summary>
        /// The BrowseName for the AccessEventsCapability component.
        /// </summary>
        public const string AccessEventsCapability = "AccessEventsCapability";

        /// <summary>
        /// The BrowseName for the AccessHistoryDataCapability component.
        /// </summary>
        public const string AccessHistoryDataCapability = "AccessHistoryDataCapability";

        /// <summary>
        /// The BrowseName for the Acknowledge component.
        /// </summary>
        public const string Acknowledge = "Acknowledge";

        /// <summary>
        /// The BrowseName for the AcknowledgeableConditionStateMachineType component.
        /// </summary>
        public const string AcknowledgeableConditionStateMachineType = "AcknowledgeableConditionStateMachineType";

        /// <summary>
        /// The BrowseName for the AcknowledgeableConditionType component.
        /// </summary>
        public const string AcknowledgeableConditionType = "AcknowledgeableConditionType";

        /// <summary>
        /// The BrowseName for the AcknowledgeByEventIds component.
        /// </summary>
        public const string AcknowledgeByEventIds = "AcknowledgeByEventIds";

        /// <summary>
        /// The BrowseName for the Acknowledged component.
        /// </summary>
        public const string Acknowledged = "Acknowledged";

        /// <summary>
        /// The BrowseName for the AcknowledgeStateMachineType component.
        /// </summary>
        public const string AcknowledgeStateMachineType = "AcknowledgeStateMachineType";

        /// <summary>
        /// The BrowseName for the Acknowledging component.
        /// </summary>
        public const string Acknowledging = "Acknowledging";

        /// <summary>
        /// The BrowseName for the AckPrevious component.
        /// </summary>
        public const string AckPrevious = "AckPrevious";

        /// <summary>
        /// The BrowseName for the AckPreviousRequired component.
        /// </summary>
        public const string AckPreviousRequired = "AckPreviousRequired";

        /// <summary>
        /// The BrowseName for the AckPreviousStateMachineType component.
        /// </summary>
        public const string AckPreviousStateMachineType = "AckPreviousStateMachineType";

        /// <summary>
        /// The BrowseName for the ActionTimeStamp component.
        /// </summary>
        public const string ActionTimeStamp = "ActionTimeStamp";

        /// <summary>
        /// The BrowseName for the ActivateSessionRequest component.
        /// </summary>
        public const string ActivateSessionRequest = "ActivateSessionRequest";

        /// <summary>
        /// The BrowseName for the ActivateSessionResponse component.
        /// </summary>
        public const string ActivateSessionResponse = "ActivateSessionResponse";

        /// <summary>
        /// The BrowseName for the Active component.
        /// </summary>
        public const string Active = "Active";

        /// <summary>
        /// The BrowseName for the ActiveSubState component.
        /// </summary>
        public const string ActiveSubState = "ActiveSubState";

        /// <summary>
        /// The BrowseName for the ActualSessionTimeout component.
        /// </summary>
        public const string ActualSessionTimeout = "ActualSessionTimeout";

        /// <summary>
        /// The BrowseName for the AddComment component.
        /// </summary>
        public const string AddComment = "AddComment";

        /// <summary>
        /// The BrowseName for the AddCommentByEventIds component.
        /// </summary>
        public const string AddCommentByEventIds = "AddCommentByEventIds";

        /// <summary>
        /// The BrowseName for the AddCommentByEventIdsMethodType component.
        /// </summary>
        public const string AddCommentByEventIdsMethodType = "AddCommentByEventIdsMethodType";

        /// <summary>
        /// The BrowseName for the AddCommentMethodType component.
        /// </summary>
        public const string AddCommentMethodType = "AddCommentMethodType";

        /// <summary>
        /// The BrowseName for the AddNodesCount component.
        /// </summary>
        public const string AddNodesCount = "AddNodesCount";

        /// <summary>
        /// The BrowseName for the AddNodesItem component.
        /// </summary>
        public const string AddNodesItem = "AddNodesItem";

        /// <summary>
        /// The BrowseName for the AddNodesRequest component.
        /// </summary>
        public const string AddNodesRequest = "AddNodesRequest";

        /// <summary>
        /// The BrowseName for the AddNodesResponse component.
        /// </summary>
        public const string AddNodesResponse = "AddNodesResponse";

        /// <summary>
        /// The BrowseName for the AddNodesResult component.
        /// </summary>
        public const string AddNodesResult = "AddNodesResult";

        /// <summary>
        /// The BrowseName for the AddReferencesCount component.
        /// </summary>
        public const string AddReferencesCount = "AddReferencesCount";

        /// <summary>
        /// The BrowseName for the AddReferencesItem component.
        /// </summary>
        public const string AddReferencesItem = "AddReferencesItem";

        /// <summary>
        /// The BrowseName for the AddReferencesRequest component.
        /// </summary>
        public const string AddReferencesRequest = "AddReferencesRequest";

        /// <summary>
        /// The BrowseName for the AddReferencesResponse component.
        /// </summary>
        public const string AddReferencesResponse = "AddReferencesResponse";

        /// <summary>
        /// The BrowseName for the AggregateConfiguration component.
        /// </summary>
        public const string AggregateConfiguration = "AggregateConfiguration";

        /// <summary>
        /// The BrowseName for the AggregateFilter component.
        /// </summary>
        public const string AggregateFilter = "AggregateFilter";

        /// <summary>
        /// The BrowseName for the AggregateFilterResult component.
        /// </summary>
        public const string AggregateFilterResult = "AggregateFilterResult";

        /// <summary>
        /// The BrowseName for the AggregateFunction_AnnotationCount component.
        /// </summary>
        public const string AggregateFunction_AnnotationCount = "AnnotationCount";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Average component.
        /// </summary>
        public const string AggregateFunction_Average = "Average";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Count component.
        /// </summary>
        public const string AggregateFunction_Count = "Count";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Delta component.
        /// </summary>
        public const string AggregateFunction_Delta = "Delta";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationBad component.
        /// </summary>
        public const string AggregateFunction_DurationBad = "DurationBad";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationGood component.
        /// </summary>
        public const string AggregateFunction_DurationGood = "DurationGood";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationInState0 component.
        /// </summary>
        public const string AggregateFunction_DurationInState0 = "DurationInState0";

        /// <summary>
        /// The BrowseName for the AggregateFunction_DurationInState1 component.
        /// </summary>
        public const string AggregateFunction_DurationInState1 = "DurationInState1";

        /// <summary>
        /// The BrowseName for the AggregateFunction_End component.
        /// </summary>
        public const string AggregateFunction_End = "End";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Interpolative component.
        /// </summary>
        public const string AggregateFunction_Interpolative = "Interpolative";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Maximum component.
        /// </summary>
        public const string AggregateFunction_Maximum = "Maximum";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MaximumActualTime component.
        /// </summary>
        public const string AggregateFunction_MaximumActualTime = "MaximumActualTime";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Minimum component.
        /// </summary>
        public const string AggregateFunction_Minimum = "Minimum";

        /// <summary>
        /// The BrowseName for the AggregateFunction_MinimumActualTime component.
        /// </summary>
        public const string AggregateFunction_MinimumActualTime = "MinimumActualTime";

        /// <summary>
        /// The BrowseName for the AggregateFunction_NumberOfTransitions component.
        /// </summary>
        public const string AggregateFunction_NumberOfTransitions = "NumberOfTransitions";

        /// <summary>
        /// The BrowseName for the AggregateFunction_PercentBad component.
        /// </summary>
        public const string AggregateFunction_PercentBad = "PercentBad";

        /// <summary>
        /// The BrowseName for the AggregateFunction_PercentGood component.
        /// </summary>
        public const string AggregateFunction_PercentGood = "PercentGood";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Range component.
        /// </summary>
        public const string AggregateFunction_Range = "Range";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Start component.
        /// </summary>
        public const string AggregateFunction_Start = "Start";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Time component.
        /// </summary>
        public const string AggregateFunction_Time = "Time";

        /// <summary>
        /// The BrowseName for the AggregateFunction_TimeAverage component.
        /// </summary>
        public const string AggregateFunction_TimeAverage = "TimeAverage";

        /// <summary>
        /// The BrowseName for the AggregateFunction_Total component.
        /// </summary>
        public const string AggregateFunction_Total = "Total";

        /// <summary>
        /// The BrowseName for the AggregateFunction_TotalizeAverage component.
        /// </summary>
        public const string AggregateFunction_TotalizeAverage = "TotalizeAverage";

        /// <summary>
        /// The BrowseName for the AggregateFunction_WorstQuality component.
        /// </summary>
        public const string AggregateFunction_WorstQuality = "WorstQuality";

        /// <summary>
        /// The BrowseName for the AggregateFunctions component.
        /// </summary>
        public const string AggregateFunctions = "AggregateFunctions";

        /// <summary>
        /// The BrowseName for the AggregateFunctionType component.
        /// </summary>
        public const string AggregateFunctionType = "AggregateFunctionType";

        /// <summary>
        /// The BrowseName for the Aggregates component.
        /// </summary>
        public const string Aggregates = "Aggregates";

        /// <summary>
        /// The BrowseName for the AlarmActive component.
        /// </summary>
        public const string AlarmActive = "AlarmActive";

        /// <summary>
        /// The BrowseName for the AlarmConditionStateMachineType component.
        /// </summary>
        public const string AlarmConditionStateMachineType = "AlarmConditionStateMachineType";

        /// <summary>
        /// The BrowseName for the AlarmConditionType component.
        /// </summary>
        public const string AlarmConditionType = "AlarmConditionType";

        /// <summary>
        /// The BrowseName for the AlarmLimitType component.
        /// </summary>
        public const string AlarmLimitType = "AlarmLimitType";

        /// <summary>
        /// The BrowseName for the AlarmShelved component.
        /// </summary>
        public const string AlarmShelved = "AlarmShelved";

        /// <summary>
        /// The BrowseName for the AlarmStateMachineType component.
        /// </summary>
        public const string AlarmStateMachineType = "AlarmStateMachineType";

        /// <summary>
        /// The BrowseName for the AlarmSuppressed component.
        /// </summary>
        public const string AlarmSuppressed = "AlarmSuppressed";

        /// <summary>
        /// The BrowseName for the AllowNulls component.
        /// </summary>
        public const string AllowNulls = "AllowNulls";

        /// <summary>
        /// The BrowseName for the AlwaysGeneratesEvent component.
        /// </summary>
        public const string AlwaysGeneratesEvent = "AlwaysGeneratesEvent";

        /// <summary>
        /// The BrowseName for the AnalogItemType component.
        /// </summary>
        public const string AnalogItemType = "AnalogItemType";

        /// <summary>
        /// The BrowseName for the Annotation component.
        /// </summary>
        public const string Annotation = "Annotation";

        /// <summary>
        /// The BrowseName for the AnonymousIdentityToken component.
        /// </summary>
        public const string AnonymousIdentityToken = "AnonymousIdentityToken";

        /// <summary>
        /// The BrowseName for the ApplicationDescription component.
        /// </summary>
        public const string ApplicationDescription = "ApplicationDescription";

        /// <summary>
        /// The BrowseName for the ApplicationInstanceCertificate component.
        /// </summary>
        public const string ApplicationInstanceCertificate = "ApplicationInstanceCertificate";

        /// <summary>
        /// The BrowseName for the ApplicationType component.
        /// </summary>
        public const string ApplicationType = "ApplicationType";

        /// <summary>
        /// The BrowseName for the Argument component.
        /// </summary>
        public const string Argument = "Argument";

        /// <summary>
        /// The BrowseName for the ArrayTestType component.
        /// </summary>
        public const string ArrayTestType = "ArrayTestType";

        /// <summary>
        /// The BrowseName for the AttributeId component.
        /// </summary>
        public const string AttributeId = "AttributeId";

        /// <summary>
        /// The BrowseName for the AttributeOperand component.
        /// </summary>
        public const string AttributeOperand = "AttributeOperand";

        /// <summary>
        /// The BrowseName for the AttributeWriteMask component.
        /// </summary>
        public const string AttributeWriteMask = "AttributeWriteMask";

        /// <summary>
        /// The BrowseName for the AuditAcknowledgeEventType component.
        /// </summary>
        public const string AuditAcknowledgeEventType = "AuditAcknowledgeEventType";

        /// <summary>
        /// The BrowseName for the AuditActivateSessionEventType component.
        /// </summary>
        public const string AuditActivateSessionEventType = "AuditActivateSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditAddNodesEventType component.
        /// </summary>
        public const string AuditAddNodesEventType = "AuditAddNodesEventType";

        /// <summary>
        /// The BrowseName for the AuditAddReferencesEventType component.
        /// </summary>
        public const string AuditAddReferencesEventType = "AuditAddReferencesEventType";

        /// <summary>
        /// The BrowseName for the AuditCancelEventType component.
        /// </summary>
        public const string AuditCancelEventType = "AuditCancelEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateDataMismatchEventType component.
        /// </summary>
        public const string AuditCertificateDataMismatchEventType = "AuditCertificateDataMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateEventType component.
        /// </summary>
        public const string AuditCertificateEventType = "AuditCertificateEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateExpiredEventType component.
        /// </summary>
        public const string AuditCertificateExpiredEventType = "AuditCertificateExpiredEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateInvalidEventType component.
        /// </summary>
        public const string AuditCertificateInvalidEventType = "AuditCertificateInvalidEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateMismatchEventType component.
        /// </summary>
        public const string AuditCertificateMismatchEventType = "AuditCertificateMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateRevokedEventType component.
        /// </summary>
        public const string AuditCertificateRevokedEventType = "AuditCertificateRevokedEventType";

        /// <summary>
        /// The BrowseName for the AuditCertificateUntrustedEventType component.
        /// </summary>
        public const string AuditCertificateUntrustedEventType = "AuditCertificateUntrustedEventType";

        /// <summary>
        /// The BrowseName for the AuditChannelEventType component.
        /// </summary>
        public const string AuditChannelEventType = "AuditChannelEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionCommentEventType component.
        /// </summary>
        public const string AuditConditionCommentEventType = "AuditConditionCommentEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionDialogEventType component.
        /// </summary>
        public const string AuditConditionDialogEventType = "AuditConditionDialogEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionEnableEventType component.
        /// </summary>
        public const string AuditConditionEnableEventType = "AuditConditionEnableEventType";

        /// <summary>
        /// The BrowseName for the AuditConditionEventType component.
        /// </summary>
        public const string AuditConditionEventType = "AuditConditionEventType";

        /// <summary>
        /// The BrowseName for the AuditCreateSessionEventType component.
        /// </summary>
        public const string AuditCreateSessionEventType = "AuditCreateSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditDeleteNodesEventType component.
        /// </summary>
        public const string AuditDeleteNodesEventType = "AuditDeleteNodesEventType";

        /// <summary>
        /// The BrowseName for the AuditDeleteReferencesEventType component.
        /// </summary>
        public const string AuditDeleteReferencesEventType = "AuditDeleteReferencesEventType";

        /// <summary>
        /// The BrowseName for the AuditEventType component.
        /// </summary>
        public const string AuditEventType = "AuditEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryAtTimeDeleteEventType component.
        /// </summary>
        public const string AuditHistoryAtTimeDeleteEventType = "AuditHistoryAtTimeDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryDeleteEventType component.
        /// </summary>
        public const string AuditHistoryDeleteEventType = "AuditHistoryDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryEventDeleteEventType component.
        /// </summary>
        public const string AuditHistoryEventDeleteEventType = "AuditHistoryEventDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryEventUpdateEventType component.
        /// </summary>
        public const string AuditHistoryEventUpdateEventType = "AuditHistoryEventUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryRawModifyDeleteEventType component.
        /// </summary>
        public const string AuditHistoryRawModifyDeleteEventType = "AuditHistoryRawModifyDeleteEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryUpdateEventType component.
        /// </summary>
        public const string AuditHistoryUpdateEventType = "AuditHistoryUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditHistoryValueUpdateEventType component.
        /// </summary>
        public const string AuditHistoryValueUpdateEventType = "AuditHistoryValueUpdateEventType";

        /// <summary>
        /// The BrowseName for the Auditing component.
        /// </summary>
        public const string Auditing = "Auditing";

        /// <summary>
        /// The BrowseName for the AuditNodeManagementEventType component.
        /// </summary>
        public const string AuditNodeManagementEventType = "AuditNodeManagementEventType";

        /// <summary>
        /// The BrowseName for the AuditOpenSecureChannelEventType component.
        /// </summary>
        public const string AuditOpenSecureChannelEventType = "AuditOpenSecureChannelEventType";

        /// <summary>
        /// The BrowseName for the AuditSecurityEventType component.
        /// </summary>
        public const string AuditSecurityEventType = "AuditSecurityEventType";

        /// <summary>
        /// The BrowseName for the AuditSessionEventType component.
        /// </summary>
        public const string AuditSessionEventType = "AuditSessionEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateEventType component.
        /// </summary>
        public const string AuditUpdateEventType = "AuditUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateMethodEventType component.
        /// </summary>
        public const string AuditUpdateMethodEventType = "AuditUpdateMethodEventType";

        /// <summary>
        /// The BrowseName for the AuditUpdateStateEventType component.
        /// </summary>
        public const string AuditUpdateStateEventType = "AuditUpdateStateEventType";

        /// <summary>
        /// The BrowseName for the AuditUrlMismatchEventType component.
        /// </summary>
        public const string AuditUrlMismatchEventType = "AuditUrlMismatchEventType";

        /// <summary>
        /// The BrowseName for the AuditWriteUpdateEventType component.
        /// </summary>
        public const string AuditWriteUpdateEventType = "AuditWriteUpdateEventType";

        /// <summary>
        /// The BrowseName for the AuthenticationMechanism component.
        /// </summary>
        public const string AuthenticationMechanism = "AuthenticationMechanism";

        /// <summary>
        /// The BrowseName for the AutoDelete component.
        /// </summary>
        public const string AutoDelete = "AutoDelete";

        /// <summary>
        /// The BrowseName for the BaseConditionStateMachineType component.
        /// </summary>
        public const string BaseConditionStateMachineType = "BaseConditionStateMachineType";

        /// <summary>
        /// The BrowseName for the BaseConditionType component.
        /// </summary>
        public const string BaseConditionType = "BaseConditionType";

        /// <summary>
        /// The BrowseName for the BaseDataType component.
        /// </summary>
        public const string BaseDataType = "BaseDataType";

        /// <summary>
        /// The BrowseName for the BaseDataVariableType component.
        /// </summary>
        public const string BaseDataVariableType = "BaseDataVariableType";

        /// <summary>
        /// The BrowseName for the BaseEventType component.
        /// </summary>
        public const string BaseEventType = "BaseEventType";

        /// <summary>
        /// The BrowseName for the BaseModelChangeEventType component.
        /// </summary>
        public const string BaseModelChangeEventType = "BaseModelChangeEventType";

        /// <summary>
        /// The BrowseName for the BaseObjectType component.
        /// </summary>
        public const string BaseObjectType = "BaseObjectType";

        /// <summary>
        /// The BrowseName for the BaseVariableType component.
        /// </summary>
        public const string BaseVariableType = "BaseVariableType";

        /// <summary>
        /// The BrowseName for the Boolean component.
        /// </summary>
        public const string Boolean = "Boolean";

        /// <summary>
        /// The BrowseName for the BrowseCount component.
        /// </summary>
        public const string BrowseCount = "BrowseCount";

        /// <summary>
        /// The BrowseName for the BrowseDescription component.
        /// </summary>
        public const string BrowseDescription = "BrowseDescription";

        /// <summary>
        /// The BrowseName for the BrowseDirection component.
        /// </summary>
        public const string BrowseDirection = "BrowseDirection";

        /// <summary>
        /// The BrowseName for the BrowseNextCount component.
        /// </summary>
        public const string BrowseNextCount = "BrowseNextCount";

        /// <summary>
        /// The BrowseName for the BrowseNextRequest component.
        /// </summary>
        public const string BrowseNextRequest = "BrowseNextRequest";

        /// <summary>
        /// The BrowseName for the BrowseNextResponse component.
        /// </summary>
        public const string BrowseNextResponse = "BrowseNextResponse";

        /// <summary>
        /// The BrowseName for the BrowsePath component.
        /// </summary>
        public const string BrowsePath = "BrowsePath";

        /// <summary>
        /// The BrowseName for the BrowsePathResult component.
        /// </summary>
        public const string BrowsePathResult = "BrowsePathResult";

        /// <summary>
        /// The BrowseName for the BrowsePathTarget component.
        /// </summary>
        public const string BrowsePathTarget = "BrowsePathTarget";

        /// <summary>
        /// The BrowseName for the BrowseRequest component.
        /// </summary>
        public const string BrowseRequest = "BrowseRequest";

        /// <summary>
        /// The BrowseName for the BrowseResponse component.
        /// </summary>
        public const string BrowseResponse = "BrowseResponse";

        /// <summary>
        /// The BrowseName for the BrowseResult component.
        /// </summary>
        public const string BrowseResult = "BrowseResult";

        /// <summary>
        /// The BrowseName for the BrowseResultMask component.
        /// </summary>
        public const string BrowseResultMask = "BrowseResultMask";

        /// <summary>
        /// The BrowseName for the BuildDate component.
        /// </summary>
        public const string BuildDate = "BuildDate";

        /// <summary>
        /// The BrowseName for the BuildInfo component.
        /// </summary>
        public const string BuildInfo = "BuildInfo";

        /// <summary>
        /// The BrowseName for the BuildInfoType component.
        /// </summary>
        public const string BuildInfoType = "BuildInfoType";

        /// <summary>
        /// The BrowseName for the BuildNumber component.
        /// </summary>
        public const string BuildNumber = "BuildNumber";

        /// <summary>
        /// The BrowseName for the Byte component.
        /// </summary>
        public const string Byte = "Byte";

        /// <summary>
        /// The BrowseName for the ByteString component.
        /// </summary>
        public const string ByteString = "ByteString";

        /// <summary>
        /// The BrowseName for the CallCount component.
        /// </summary>
        public const string CallCount = "CallCount";

        /// <summary>
        /// The BrowseName for the CallMethodRequest component.
        /// </summary>
        public const string CallMethodRequest = "CallMethodRequest";

        /// <summary>
        /// The BrowseName for the CallMethodResult component.
        /// </summary>
        public const string CallMethodResult = "CallMethodResult";

        /// <summary>
        /// The BrowseName for the CallRequest component.
        /// </summary>
        public const string CallRequest = "CallRequest";

        /// <summary>
        /// The BrowseName for the CallResponse component.
        /// </summary>
        public const string CallResponse = "CallResponse";

        /// <summary>
        /// The BrowseName for the Cancel component.
        /// </summary>
        public const string Cancel = "Cancel";

        /// <summary>
        /// The BrowseName for the Cancelling component.
        /// </summary>
        public const string Cancelling = "Cancelling";

        /// <summary>
        /// The BrowseName for the CancellingToInactive component.
        /// </summary>
        public const string CancellingToInactive = "CancellingToInactive";

        /// <summary>
        /// The BrowseName for the CancelRequest component.
        /// </summary>
        public const string CancelRequest = "CancelRequest";

        /// <summary>
        /// The BrowseName for the CancelResponse component.
        /// </summary>
        public const string CancelResponse = "CancelResponse";

        /// <summary>
        /// The BrowseName for the Certificate component.
        /// </summary>
        public const string Certificate = "Certificate";

        /// <summary>
        /// The BrowseName for the Change component.
        /// </summary>
        public const string Change = "Change";

        /// <summary>
        /// The BrowseName for the Changes component.
        /// </summary>
        public const string Changes = "Changes";

        /// <summary>
        /// The BrowseName for the ChannelSecurityToken component.
        /// </summary>
        public const string ChannelSecurityToken = "ChannelSecurityToken";

        /// <summary>
        /// The BrowseName for the ClientAuditEntryId component.
        /// </summary>
        public const string ClientAuditEntryId = "ClientAuditEntryId";

        /// <summary>
        /// The BrowseName for the ClientCertificate component.
        /// </summary>
        public const string ClientCertificate = "ClientCertificate";

        /// <summary>
        /// The BrowseName for the ClientCertificateThumbprint component.
        /// </summary>
        public const string ClientCertificateThumbprint = "ClientCertificateThumbprint";

        /// <summary>
        /// The BrowseName for the ClientConnectionTime component.
        /// </summary>
        public const string ClientConnectionTime = "ClientConnectionTime";

        /// <summary>
        /// The BrowseName for the ClientDescription component.
        /// </summary>
        public const string ClientDescription = "ClientDescription";

        /// <summary>
        /// The BrowseName for the ClientLastContactTime component.
        /// </summary>
        public const string ClientLastContactTime = "ClientLastContactTime";

        /// <summary>
        /// The BrowseName for the ClientSoftwareCertificates component.
        /// </summary>
        public const string ClientSoftwareCertificates = "ClientSoftwareCertificates";

        /// <summary>
        /// The BrowseName for the ClientUserId component.
        /// </summary>
        public const string ClientUserId = "ClientUserId";

        /// <summary>
        /// The BrowseName for the ClientUserIdHistory component.
        /// </summary>
        public const string ClientUserIdHistory = "ClientUserIdHistory";

        /// <summary>
        /// The BrowseName for the ClientUserIdOfSession component.
        /// </summary>
        public const string ClientUserIdOfSession = "ClientUserIdOfSession";

        /// <summary>
        /// The BrowseName for the CloseSecureChannelRequest component.
        /// </summary>
        public const string CloseSecureChannelRequest = "CloseSecureChannelRequest";

        /// <summary>
        /// The BrowseName for the CloseSecureChannelResponse component.
        /// </summary>
        public const string CloseSecureChannelResponse = "CloseSecureChannelResponse";

        /// <summary>
        /// The BrowseName for the CloseSessionRequest component.
        /// </summary>
        public const string CloseSessionRequest = "CloseSessionRequest";

        /// <summary>
        /// The BrowseName for the CloseSessionResponse component.
        /// </summary>
        public const string CloseSessionResponse = "CloseSessionResponse";

        /// <summary>
        /// The BrowseName for the Comment component.
        /// </summary>
        public const string Comment = "Comment";

        /// <summary>
        /// The BrowseName for the CommentAdded component.
        /// </summary>
        public const string CommentAdded = "CommentAdded";

        /// <summary>
        /// The BrowseName for the CommentPrevious component.
        /// </summary>
        public const string CommentPrevious = "CommentPrevious";

        /// <summary>
        /// The BrowseName for the CommentPreviousStateMachineType component.
        /// </summary>
        public const string CommentPreviousStateMachineType = "CommentPreviousStateMachineType";

        /// <summary>
        /// The BrowseName for the CommentStateMachineType component.
        /// </summary>
        public const string CommentStateMachineType = "CommentStateMachineType";

        /// <summary>
        /// The BrowseName for the ComplianceLevel component.
        /// </summary>
        public const string ComplianceLevel = "ComplianceLevel";

        /// <summary>
        /// The BrowseName for the CompositeTestType component.
        /// </summary>
        public const string CompositeTestType = "CompositeTestType";

        /// <summary>
        /// The BrowseName for the ConditionGroupType component.
        /// </summary>
        public const string ConditionGroupType = "ConditionGroupType";

        /// <summary>
        /// The BrowseName for the ConditionRefresh component.
        /// </summary>
        public const string ConditionRefresh = "ConditionRefresh";

        /// <summary>
        /// The BrowseName for the ConditionStateMachineType component.
        /// </summary>
        public const string ConditionStateMachineType = "ConditionStateMachineType";

        /// <summary>
        /// The BrowseName for the ConditionType component.
        /// </summary>
        public const string ConditionType = "ConditionType";

        /// <summary>
        /// The BrowseName for the Confirm component.
        /// </summary>
        public const string Confirm = "Confirm";

        /// <summary>
        /// The BrowseName for the ConfirmByEventIds component.
        /// </summary>
        public const string ConfirmByEventIds = "ConfirmByEventIds";

        /// <summary>
        /// The BrowseName for the Confirmed component.
        /// </summary>
        public const string Confirmed = "Confirmed";

        /// <summary>
        /// The BrowseName for the ConfirmedStateMachineType component.
        /// </summary>
        public const string ConfirmedStateMachineType = "ConfirmedStateMachineType";

        /// <summary>
        /// The BrowseName for the ConfirmedToUnconfirmed component.
        /// </summary>
        public const string ConfirmedToUnconfirmed = "ConfirmedToUnconfirmed";

        /// <summary>
        /// The BrowseName for the Confirming component.
        /// </summary>
        public const string Confirming = "Confirming";

        /// <summary>
        /// The BrowseName for the ConfirmingToUnconfirmed component.
        /// </summary>
        public const string ConfirmingToUnconfirmed = "ConfirmingToUnconfirmed";

        /// <summary>
        /// The BrowseName for the ConfirmPrevious component.
        /// </summary>
        public const string ConfirmPrevious = "ConfirmPrevious";

        /// <summary>
        /// The BrowseName for the ContentFilter component.
        /// </summary>
        public const string ContentFilter = "ContentFilter";

        /// <summary>
        /// The BrowseName for the ContentFilterElement component.
        /// </summary>
        public const string ContentFilterElement = "ContentFilterElement";

        /// <summary>
        /// The BrowseName for the ContentFilterElementResult component.
        /// </summary>
        public const string ContentFilterElementResult = "ContentFilterElementResult";

        /// <summary>
        /// The BrowseName for the ContentFilterResult component.
        /// </summary>
        public const string ContentFilterResult = "ContentFilterResult";

        /// <summary>
        /// The BrowseName for the ContinuationPoint component.
        /// </summary>
        public const string ContinuationPoint = "ContinuationPoint";

        /// <summary>
        /// The BrowseName for the Counter component.
        /// </summary>
        public const string Counter = "Counter";

        /// <summary>
        /// The BrowseName for the Creatable component.
        /// </summary>
        public const string Creatable = "Creatable";

        /// <summary>
        /// The BrowseName for the CreateClientName component.
        /// </summary>
        public const string CreateClientName = "CreateClientName";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsCount component.
        /// </summary>
        public const string CreateMonitoredItemsCount = "CreateMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsRequest component.
        /// </summary>
        public const string CreateMonitoredItemsRequest = "CreateMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the CreateMonitoredItemsResponse component.
        /// </summary>
        public const string CreateMonitoredItemsResponse = "CreateMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the CreateSessionId component.
        /// </summary>
        public const string CreateSessionId = "CreateSessionId";

        /// <summary>
        /// The BrowseName for the CreateSessionRequest component.
        /// </summary>
        public const string CreateSessionRequest = "CreateSessionRequest";

        /// <summary>
        /// The BrowseName for the CreateSessionResponse component.
        /// </summary>
        public const string CreateSessionResponse = "CreateSessionResponse";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionCount component.
        /// </summary>
        public const string CreateSubscriptionCount = "CreateSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionRequest component.
        /// </summary>
        public const string CreateSubscriptionRequest = "CreateSubscriptionRequest";

        /// <summary>
        /// The BrowseName for the CreateSubscriptionResponse component.
        /// </summary>
        public const string CreateSubscriptionResponse = "CreateSubscriptionResponse";

        /// <summary>
        /// The BrowseName for the CumulatedSessionCount component.
        /// </summary>
        public const string CumulatedSessionCount = "CumulatedSessionCount";

        /// <summary>
        /// The BrowseName for the CumulatedSubscriptionCount component.
        /// </summary>
        public const string CumulatedSubscriptionCount = "CumulatedSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CurrentKeepAliveCount component.
        /// </summary>
        public const string CurrentKeepAliveCount = "CurrentKeepAliveCount";

        /// <summary>
        /// The BrowseName for the CurrentLifetimeCount component.
        /// </summary>
        public const string CurrentLifetimeCount = "CurrentLifetimeCount";

        /// <summary>
        /// The BrowseName for the CurrentMonitoredItemsCount component.
        /// </summary>
        public const string CurrentMonitoredItemsCount = "CurrentMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the CurrentPublishRequestsInQueue component.
        /// </summary>
        public const string CurrentPublishRequestsInQueue = "CurrentPublishRequestsInQueue";

        /// <summary>
        /// The BrowseName for the CurrentServerId component.
        /// </summary>
        public const string CurrentServerId = "CurrentServerId";

        /// <summary>
        /// The BrowseName for the CurrentSessionCount component.
        /// </summary>
        public const string CurrentSessionCount = "CurrentSessionCount";

        /// <summary>
        /// The BrowseName for the CurrentState component.
        /// </summary>
        public const string CurrentState = "CurrentState";

        /// <summary>
        /// The BrowseName for the CurrentSubscriptionCount component.
        /// </summary>
        public const string CurrentSubscriptionCount = "CurrentSubscriptionCount";

        /// <summary>
        /// The BrowseName for the CurrentSubscriptionsCount component.
        /// </summary>
        public const string CurrentSubscriptionsCount = "CurrentSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the CurrentTime component.
        /// </summary>
        public const string CurrentTime = "CurrentTime";

        /// <summary>
        /// The BrowseName for the DataChangeFilter component.
        /// </summary>
        public const string DataChangeFilter = "DataChangeFilter";

        /// <summary>
        /// The BrowseName for the DataChangeNotification component.
        /// </summary>
        public const string DataChangeNotification = "DataChangeNotification";

        /// <summary>
        /// The BrowseName for the DataChangeNotificationsCount component.
        /// </summary>
        public const string DataChangeNotificationsCount = "DataChangeNotificationsCount";

        /// <summary>
        /// The BrowseName for the DataChangeTrigger component.
        /// </summary>
        public const string DataChangeTrigger = "DataChangeTrigger";

        /// <summary>
        /// The BrowseName for the DataItemType component.
        /// </summary>
        public const string DataItemType = "DataItemType";

        /// <summary>
        /// The BrowseName for the DataTypeAttributes component.
        /// </summary>
        public const string DataTypeAttributes = "DataTypeAttributes";

        /// <summary>
        /// The BrowseName for the DataTypeDescriptionType component.
        /// </summary>
        public const string DataTypeDescriptionType = "DataTypeDescriptionType";

        /// <summary>
        /// The BrowseName for the DataTypeDictionaryType component.
        /// </summary>
        public const string DataTypeDictionaryType = "DataTypeDictionaryType";

        /// <summary>
        /// The BrowseName for the DataTypeEncodingType component.
        /// </summary>
        public const string DataTypeEncodingType = "DataTypeEncodingType";

        /// <summary>
        /// The BrowseName for the DataTypeNode component.
        /// </summary>
        public const string DataTypeNode = "DataTypeNode";

        /// <summary>
        /// The BrowseName for the DataTypesFolder component.
        /// </summary>
        public const string DataTypesFolder = "DataTypes";

        /// <summary>
        /// The BrowseName for the DataTypeSystemType component.
        /// </summary>
        public const string DataTypeSystemType = "DataTypeSystemType";

        /// <summary>
        /// The BrowseName for the DataTypeVersion component.
        /// </summary>
        public const string DataTypeVersion = "DataTypeVersion";

        /// <summary>
        /// The BrowseName for the DataValue component.
        /// </summary>
        public const string DataValue = "DataValue";

        /// <summary>
        /// The BrowseName for the Date component.
        /// </summary>
        public const string Date = "Date";

        /// <summary>
        /// The BrowseName for the DateTime component.
        /// </summary>
        public const string DateTime = "DateTime";

        /// <summary>
        /// The BrowseName for the DaylightSavingTime component.
        /// </summary>
        public const string DaylightSavingTime = "DaylightSavingTime";

        /// <summary>
        /// The BrowseName for the DeadbandType component.
        /// </summary>
        public const string DeadbandType = "DeadbandType";

        /// <summary>
        /// The BrowseName for the DefaultBinary component.
        /// </summary>
        public const string DefaultBinary = "Default Binary";

        /// <summary>
        /// The BrowseName for the DefaultXml component.
        /// </summary>
        public const string DefaultXml = "Default XML";

        /// <summary>
        /// The BrowseName for the Definition component.
        /// </summary>
        public const string Definition = "Definition";

        /// <summary>
        /// The BrowseName for the Deletable component.
        /// </summary>
        public const string Deletable = "Deletable";

        /// <summary>
        /// The BrowseName for the DeleteAtTimeCapability component.
        /// </summary>
        public const string DeleteAtTimeCapability = "DeleteAtTimeCapability";

        /// <summary>
        /// The BrowseName for the DeleteAtTimeDetails component.
        /// </summary>
        public const string DeleteAtTimeDetails = "DeleteAtTimeDetails";

        /// <summary>
        /// The BrowseName for the DeleteEventDetails component.
        /// </summary>
        public const string DeleteEventDetails = "DeleteEventDetails";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsCount component.
        /// </summary>
        public const string DeleteMonitoredItemsCount = "DeleteMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsRequest component.
        /// </summary>
        public const string DeleteMonitoredItemsRequest = "DeleteMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the DeleteMonitoredItemsResponse component.
        /// </summary>
        public const string DeleteMonitoredItemsResponse = "DeleteMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the DeleteNodesCount component.
        /// </summary>
        public const string DeleteNodesCount = "DeleteNodesCount";

        /// <summary>
        /// The BrowseName for the DeleteNodesItem component.
        /// </summary>
        public const string DeleteNodesItem = "DeleteNodesItem";

        /// <summary>
        /// The BrowseName for the DeleteNodesRequest component.
        /// </summary>
        public const string DeleteNodesRequest = "DeleteNodesRequest";

        /// <summary>
        /// The BrowseName for the DeleteNodesResponse component.
        /// </summary>
        public const string DeleteNodesResponse = "DeleteNodesResponse";

        /// <summary>
        /// The BrowseName for the DeleteRawCapability component.
        /// </summary>
        public const string DeleteRawCapability = "DeleteRawCapability";

        /// <summary>
        /// The BrowseName for the DeleteRawModifiedDetails component.
        /// </summary>
        public const string DeleteRawModifiedDetails = "DeleteRawModifiedDetails";

        /// <summary>
        /// The BrowseName for the DeleteReferencesCount component.
        /// </summary>
        public const string DeleteReferencesCount = "DeleteReferencesCount";

        /// <summary>
        /// The BrowseName for the DeleteReferencesItem component.
        /// </summary>
        public const string DeleteReferencesItem = "DeleteReferencesItem";

        /// <summary>
        /// The BrowseName for the DeleteReferencesRequest component.
        /// </summary>
        public const string DeleteReferencesRequest = "DeleteReferencesRequest";

        /// <summary>
        /// The BrowseName for the DeleteReferencesResponse component.
        /// </summary>
        public const string DeleteReferencesResponse = "DeleteReferencesResponse";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsCount component.
        /// </summary>
        public const string DeleteSubscriptionsCount = "DeleteSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsRequest component.
        /// </summary>
        public const string DeleteSubscriptionsRequest = "DeleteSubscriptionsRequest";

        /// <summary>
        /// The BrowseName for the DeleteSubscriptionsResponse component.
        /// </summary>
        public const string DeleteSubscriptionsResponse = "DeleteSubscriptionsResponse";

        /// <summary>
        /// The BrowseName for the DeviceFailureEventType component.
        /// </summary>
        public const string DeviceFailureEventType = "DeviceFailureEventType";

        /// <summary>
        /// The BrowseName for the DiagnosticInfo component.
        /// </summary>
        public const string DiagnosticInfo = "DiagnosticInfo";

        /// <summary>
        /// The BrowseName for the Dialog component.
        /// </summary>
        public const string Dialog = "Dialog";

        /// <summary>
        /// The BrowseName for the DialogConditionType component.
        /// </summary>
        public const string DialogConditionType = "DialogConditionType";

        /// <summary>
        /// The BrowseName for the DictionaryFragment component.
        /// </summary>
        public const string DictionaryFragment = "DictionaryFragment";

        /// <summary>
        /// The BrowseName for the Disable component.
        /// </summary>
        public const string Disable = "Disable";

        /// <summary>
        /// The BrowseName for the DisableCount component.
        /// </summary>
        public const string DisableCount = "DisableCount";

        /// <summary>
        /// The BrowseName for the Disabled component.
        /// </summary>
        public const string Disabled = "Disabled";

        /// <summary>
        /// The BrowseName for the DisabledMonitoredItemCount component.
        /// </summary>
        public const string DisabledMonitoredItemCount = "DisabledMonitoredItemCount";

        /// <summary>
        /// The BrowseName for the DiscardedMessageCount component.
        /// </summary>
        public const string DiscardedMessageCount = "DiscardedMessageCount";

        /// <summary>
        /// The BrowseName for the DiscreteItemType component.
        /// </summary>
        public const string DiscreteItemType = "DiscreteItemType";

        /// <summary>
        /// The BrowseName for the Double component.
        /// </summary>
        public const string Double = "Double";

        /// <summary>
        /// The BrowseName for the Duration component.
        /// </summary>
        public const string Duration = "Duration";

        /// <summary>
        /// The BrowseName for the EffectiveDisplayName component.
        /// </summary>
        public const string EffectiveDisplayName = "EffectiveDisplayName";

        /// <summary>
        /// The BrowseName for the ElementOperand component.
        /// </summary>
        public const string ElementOperand = "ElementOperand";

        /// <summary>
        /// The BrowseName for the Enable component.
        /// </summary>
        public const string Enable = "Enable";

        /// <summary>
        /// The BrowseName for the EnableCount component.
        /// </summary>
        public const string EnableCount = "EnableCount";

        /// <summary>
        /// The BrowseName for the Enabled component.
        /// </summary>
        public const string Enabled = "Enabled";

        /// <summary>
        /// The BrowseName for the EnabledFlag component.
        /// </summary>
        public const string EnabledFlag = "EnabledFlag";

        /// <summary>
        /// The BrowseName for the Encoding component.
        /// </summary>
        public const string Encoding = "Encoding";

        /// <summary>
        /// The BrowseName for the EndpointConfiguration component.
        /// </summary>
        public const string EndpointConfiguration = "EndpointConfiguration";

        /// <summary>
        /// The BrowseName for the EndpointDescription component.
        /// </summary>
        public const string EndpointDescription = "EndpointDescription";

        /// <summary>
        /// The BrowseName for the EndpointUrl component.
        /// </summary>
        public const string EndpointUrl = "EndpointUrl";

        /// <summary>
        /// The BrowseName for the EndTime component.
        /// </summary>
        public const string EndTime = "EndTime";

        /// <summary>
        /// The BrowseName for the EngineeringUnits component.
        /// </summary>
        public const string EngineeringUnits = "EngineeringUnits";

        /// <summary>
        /// The BrowseName for the EnumeratedTestType component.
        /// </summary>
        public const string EnumeratedTestType = "EnumeratedTestType";

        /// <summary>
        /// The BrowseName for the Enumeration component.
        /// </summary>
        public const string Enumeration = "Enumeration";

        /// <summary>
        /// The BrowseName for the EnumStrings component.
        /// </summary>
        public const string EnumStrings = "EnumStrings";

        /// <summary>
        /// The BrowseName for the EnumValueInfo component.
        /// </summary>
        public const string EnumValueInfo = "EnumValueInfo";

        /// <summary>
        /// The BrowseName for the EnumValues component.
        /// </summary>
        public const string EnumValues = "EnumValues";

        /// <summary>
        /// The BrowseName for the EUInformation component.
        /// </summary>
        public const string EUInformation = "EUInformation";

        /// <summary>
        /// The BrowseName for the EURange component.
        /// </summary>
        public const string EURange = "EURange";

        /// <summary>
        /// The BrowseName for the EventFieldList component.
        /// </summary>
        public const string EventFieldList = "EventFieldList";

        /// <summary>
        /// The BrowseName for the EventFilter component.
        /// </summary>
        public const string EventFilter = "EventFilter";

        /// <summary>
        /// The BrowseName for the EventFilterResult component.
        /// </summary>
        public const string EventFilterResult = "EventFilterResult";

        /// <summary>
        /// The BrowseName for the EventId component.
        /// </summary>
        public const string EventId = "EventId";

        /// <summary>
        /// The BrowseName for the EventIds component.
        /// </summary>
        public const string EventIds = "EventIds";

        /// <summary>
        /// The BrowseName for the EventNotificationList component.
        /// </summary>
        public const string EventNotificationList = "EventNotificationList";

        /// <summary>
        /// The BrowseName for the EventNotificationsCount component.
        /// </summary>
        public const string EventNotificationsCount = "EventNotificationsCount";

        /// <summary>
        /// The BrowseName for the EventQueueOverFlowCount component.
        /// </summary>
        public const string EventQueueOverFlowCount = "EventQueueOverFlowCount";

        /// <summary>
        /// The BrowseName for the EventQueueOverflowEventType component.
        /// </summary>
        public const string EventQueueOverflowEventType = "EventQueueOverflowEventType";

        /// <summary>
        /// The BrowseName for the EventType component.
        /// </summary>
        public const string EventType = "EventType";

        /// <summary>
        /// The BrowseName for the EventTypesFolder component.
        /// </summary>
        public const string EventTypesFolder = "EventTypes";

        /// <summary>
        /// The BrowseName for the ExceptionDeviation component.
        /// </summary>
        public const string ExceptionDeviation = "ExceptionDeviation";

        /// <summary>
        /// The BrowseName for the ExceptionDeviationFormat component.
        /// </summary>
        public const string ExceptionDeviationFormat = "ExceptionDeviationFormat";

        /// <summary>
        /// The BrowseName for the ExpandedNodeId component.
        /// </summary>
        public const string ExpandedNodeId = "ExpandedNodeId";

        /// <summary>
        /// The BrowseName for the FalseState component.
        /// </summary>
        public const string FalseState = "FalseState";

        /// <summary>
        /// The BrowseName for the Filter component.
        /// </summary>
        public const string Filter = "Filter";

        /// <summary>
        /// The BrowseName for the FilterOperand component.
        /// </summary>
        public const string FilterOperand = "FilterOperand";

        /// <summary>
        /// The BrowseName for the FilterOperator component.
        /// </summary>
        public const string FilterOperator = "FilterOperator";

        /// <summary>
        /// The BrowseName for the FinalResultData component.
        /// </summary>
        public const string FinalResultData = "FinalResultData";

        /// <summary>
        /// The BrowseName for the FindServersRequest component.
        /// </summary>
        public const string FindServersRequest = "FindServersRequest";

        /// <summary>
        /// The BrowseName for the FindServersResponse component.
        /// </summary>
        public const string FindServersResponse = "FindServersResponse";

        /// <summary>
        /// The BrowseName for the FiniteStateMachineType component.
        /// </summary>
        public const string FiniteStateMachineType = "FiniteStateMachineType";

        /// <summary>
        /// The BrowseName for the FiniteStateVariableType component.
        /// </summary>
        public const string FiniteStateVariableType = "FiniteStateVariableType";

        /// <summary>
        /// The BrowseName for the FiniteTransitionVariableType component.
        /// </summary>
        public const string FiniteTransitionVariableType = "FiniteTransitionVariableType";

        /// <summary>
        /// The BrowseName for the Float component.
        /// </summary>
        public const string Float = "Float";

        /// <summary>
        /// The BrowseName for the FolderType component.
        /// </summary>
        public const string FolderType = "FolderType";

        /// <summary>
        /// The BrowseName for the FromState component.
        /// </summary>
        public const string FromState = "FromState";

        /// <summary>
        /// The BrowseName for the GeneralModelChangeEventType component.
        /// </summary>
        public const string GeneralModelChangeEventType = "GeneralModelChangeEventType";

        /// <summary>
        /// The BrowseName for the GeneratesEvent component.
        /// </summary>
        public const string GeneratesEvent = "GeneratesEvent";

        /// <summary>
        /// The BrowseName for the GetEndpointsRequest component.
        /// </summary>
        public const string GetEndpointsRequest = "GetEndpointsRequest";

        /// <summary>
        /// The BrowseName for the GetEndpointsResponse component.
        /// </summary>
        public const string GetEndpointsResponse = "GetEndpointsResponse";

        /// <summary>
        /// The BrowseName for the GroupingId component.
        /// </summary>
        public const string GroupingId = "GroupingId";

        /// <summary>
        /// The BrowseName for the Guid component.
        /// </summary>
        public const string Guid = "Guid";

        /// <summary>
        /// The BrowseName for the Halt component.
        /// </summary>
        public const string Halt = "Halt";

        /// <summary>
        /// The BrowseName for the Halted component.
        /// </summary>
        public const string Halted = "Halted";

        /// <summary>
        /// The BrowseName for the HaltedToReady component.
        /// </summary>
        public const string HaltedToReady = "HaltedToReady";

        /// <summary>
        /// The BrowseName for the HasCause component.
        /// </summary>
        public const string HasCause = "HasCause";

        /// <summary>
        /// The BrowseName for the HasChild component.
        /// </summary>
        public const string HasChild = "HasChild";

        /// <summary>
        /// The BrowseName for the HasComponent component.
        /// </summary>
        public const string HasComponent = "HasComponent";

        /// <summary>
        /// The BrowseName for the HasDescription component.
        /// </summary>
        public const string HasDescription = "HasDescription";

        /// <summary>
        /// The BrowseName for the HasEffect component.
        /// </summary>
        public const string HasEffect = "HasEffect";

        /// <summary>
        /// The BrowseName for the HasEncoding component.
        /// </summary>
        public const string HasEncoding = "HasEncoding";

        /// <summary>
        /// The BrowseName for the HasEventHistory component.
        /// </summary>
        public const string HasEventHistory = "HasEventHistory";

        /// <summary>
        /// The BrowseName for the HasEventSource component.
        /// </summary>
        public const string HasEventSource = "HasEventSource";

        /// <summary>
        /// The BrowseName for the HasHistoricalConfiguration component.
        /// </summary>
        public const string HasHistoricalConfiguration = "HasHistoricalConfiguration";

        /// <summary>
        /// The BrowseName for the HasHistoricalEventConfiguration component.
        /// </summary>
        public const string HasHistoricalEventConfiguration = "HasHistoricalEventConfiguration";

        /// <summary>
        /// The BrowseName for the HasModellingRule component.
        /// </summary>
        public const string HasModellingRule = "HasModellingRule";

        /// <summary>
        /// The BrowseName for the HasModelParent component.
        /// </summary>
        public const string HasModelParent = "HasModelParent";

        /// <summary>
        /// The BrowseName for the HasNotifier component.
        /// </summary>
        public const string HasNotifier = "HasNotifier";

        /// <summary>
        /// The BrowseName for the HasOrderedComponent component.
        /// </summary>
        public const string HasOrderedComponent = "HasOrderedComponent";

        /// <summary>
        /// The BrowseName for the HasProperty component.
        /// </summary>
        public const string HasProperty = "HasProperty";

        /// <summary>
        /// The BrowseName for the HasSubStateMachine component.
        /// </summary>
        public const string HasSubStateMachine = "HasSubStateMachine";

        /// <summary>
        /// The BrowseName for the HasSubtype component.
        /// </summary>
        public const string HasSubtype = "HasSubtype";

        /// <summary>
        /// The BrowseName for the HasTypeDefinition component.
        /// </summary>
        public const string HasTypeDefinition = "HasTypeDefinition";

        /// <summary>
        /// The BrowseName for the HierarchicalReferences component.
        /// </summary>
        public const string HierarchicalReferences = "HierarchicalReferences";

        /// <summary>
        /// The BrowseName for the High component.
        /// </summary>
        public const string High = "High";

        /// <summary>
        /// The BrowseName for the HighHigh component.
        /// </summary>
        public const string HighHigh = "HighHigh";

        /// <summary>
        /// The BrowseName for the HighHighLimit component.
        /// </summary>
        public const string HighHighLimit = "HighHighLimit";

        /// <summary>
        /// The BrowseName for the HighHighToHigh component.
        /// </summary>
        public const string HighHighToHigh = "HighHighToHigh";

        /// <summary>
        /// The BrowseName for the HighLimit component.
        /// </summary>
        public const string HighLimit = "HighLimit";

        /// <summary>
        /// The BrowseName for the HighToHighHigh component.
        /// </summary>
        public const string HighToHighHigh = "HighToHighHigh";

        /// <summary>
        /// The BrowseName for the HistoricalConfigurationType component.
        /// </summary>
        public const string HistoricalConfigurationType = "HistoricalConfigurationType";

        /// <summary>
        /// The BrowseName for the HistoricalEventConfigurationType component.
        /// </summary>
        public const string HistoricalEventConfigurationType = "HistoricalEventConfigurationType";

        /// <summary>
        /// The BrowseName for the HistoryData component.
        /// </summary>
        public const string HistoryData = "HistoryData";

        /// <summary>
        /// The BrowseName for the HistoryEvent component.
        /// </summary>
        public const string HistoryEvent = "HistoryEvent";

        /// <summary>
        /// The BrowseName for the HistoryEventFieldList component.
        /// </summary>
        public const string HistoryEventFieldList = "HistoryEventFieldList";

        /// <summary>
        /// The BrowseName for the HistoryReadCount component.
        /// </summary>
        public const string HistoryReadCount = "HistoryReadCount";

        /// <summary>
        /// The BrowseName for the HistoryReadDetails component.
        /// </summary>
        public const string HistoryReadDetails = "HistoryReadDetails";

        /// <summary>
        /// The BrowseName for the HistoryReadRequest component.
        /// </summary>
        public const string HistoryReadRequest = "HistoryReadRequest";

        /// <summary>
        /// The BrowseName for the HistoryReadResponse component.
        /// </summary>
        public const string HistoryReadResponse = "HistoryReadResponse";

        /// <summary>
        /// The BrowseName for the HistoryReadResult component.
        /// </summary>
        public const string HistoryReadResult = "HistoryReadResult";

        /// <summary>
        /// The BrowseName for the HistoryReadValueId component.
        /// </summary>
        public const string HistoryReadValueId = "HistoryReadValueId";

        /// <summary>
        /// The BrowseName for the HistoryServerCapabilitiesType component.
        /// </summary>
        public const string HistoryServerCapabilitiesType = "HistoryServerCapabilitiesType";

        /// <summary>
        /// The BrowseName for the HistoryUpdateCount component.
        /// </summary>
        public const string HistoryUpdateCount = "HistoryUpdateCount";

        /// <summary>
        /// The BrowseName for the HistoryUpdateDetails component.
        /// </summary>
        public const string HistoryUpdateDetails = "HistoryUpdateDetails";

        /// <summary>
        /// The BrowseName for the HistoryUpdateEventResult component.
        /// </summary>
        public const string HistoryUpdateEventResult = "HistoryUpdateEventResult";

        /// <summary>
        /// The BrowseName for the HistoryUpdateMode component.
        /// </summary>
        public const string HistoryUpdateMode = "HistoryUpdateMode";

        /// <summary>
        /// The BrowseName for the HistoryUpdateRequest component.
        /// </summary>
        public const string HistoryUpdateRequest = "HistoryUpdateRequest";

        /// <summary>
        /// The BrowseName for the HistoryUpdateResponse component.
        /// </summary>
        public const string HistoryUpdateResponse = "HistoryUpdateResponse";

        /// <summary>
        /// The BrowseName for the HistoryUpdateResult component.
        /// </summary>
        public const string HistoryUpdateResult = "HistoryUpdateResult";

        /// <summary>
        /// The BrowseName for the Icon component.
        /// </summary>
        public const string Icon = "Icon";

        /// <summary>
        /// The BrowseName for the Id component.
        /// </summary>
        public const string Id = "Id";

        /// <summary>
        /// The BrowseName for the IdType component.
        /// </summary>
        public const string IdType = "IdType";

        /// <summary>
        /// The BrowseName for the Image component.
        /// </summary>
        public const string Image = "Image";

        /// <summary>
        /// The BrowseName for the ImageBMP component.
        /// </summary>
        public const string ImageBMP = "ImageBMP";

        /// <summary>
        /// The BrowseName for the ImageGIF component.
        /// </summary>
        public const string ImageGIF = "ImageGIF";

        /// <summary>
        /// The BrowseName for the ImageJPG component.
        /// </summary>
        public const string ImageJPG = "ImageJPG";

        /// <summary>
        /// The BrowseName for the ImagePNG component.
        /// </summary>
        public const string ImagePNG = "ImagePNG";

        /// <summary>
        /// The BrowseName for the Inactive component.
        /// </summary>
        public const string Inactive = "Inactive";

        /// <summary>
        /// The BrowseName for the IndexRange component.
        /// </summary>
        public const string IndexRange = "IndexRange";

        /// <summary>
        /// The BrowseName for the InitialStateType component.
        /// </summary>
        public const string InitialStateType = "InitialStateType";

        /// <summary>
        /// The BrowseName for the InputArguments component.
        /// </summary>
        public const string InputArguments = "InputArguments";

        /// <summary>
        /// The BrowseName for the InsertDataCapability component.
        /// </summary>
        public const string InsertDataCapability = "InsertDataCapability";

        /// <summary>
        /// The BrowseName for the InsertReplaceEventDetails component.
        /// </summary>
        public const string InsertReplaceEventDetails = "InsertReplaceEventDetails";

        /// <summary>
        /// The BrowseName for the InstanceCount component.
        /// </summary>
        public const string InstanceCount = "InstanceCount";

        /// <summary>
        /// The BrowseName for the InstrumentRange component.
        /// </summary>
        public const string InstrumentRange = "InstrumentRange";

        /// <summary>
        /// The BrowseName for the Int16 component.
        /// </summary>
        public const string Int16 = "Int16";

        /// <summary>
        /// The BrowseName for the Int32 component.
        /// </summary>
        public const string Int32 = "Int32";

        /// <summary>
        /// The BrowseName for the Int64 component.
        /// </summary>
        public const string Int64 = "Int64";

        /// <summary>
        /// The BrowseName for the Integer component.
        /// </summary>
        public const string Integer = "Integer";

        /// <summary>
        /// The BrowseName for the IntegerId component.
        /// </summary>
        public const string IntegerId = "IntegerId";

        /// <summary>
        /// The BrowseName for the IntermediateResult component.
        /// </summary>
        public const string IntermediateResult = "IntermediateResult";

        /// <summary>
        /// The BrowseName for the InvalidHostname component.
        /// </summary>
        public const string InvalidHostname = "InvalidHostname";

        /// <summary>
        /// The BrowseName for the InvalidUri component.
        /// </summary>
        public const string InvalidUri = "InvalidUri";

        /// <summary>
        /// The BrowseName for the InvocationCreationTime component.
        /// </summary>
        public const string InvocationCreationTime = "InvocationCreationTime";

        /// <summary>
        /// The BrowseName for the IsDeleteModified component.
        /// </summary>
        public const string IsDeleteModified = "IsDeleteModified";

        /// <summary>
        /// The BrowseName for the IssuedIdentityToken component.
        /// </summary>
        public const string IssuedIdentityToken = "IssuedIdentityToken";

        /// <summary>
        /// The BrowseName for the LastComment component.
        /// </summary>
        public const string LastComment = "LastComment";

        /// <summary>
        /// The BrowseName for the LastMethodCall component.
        /// </summary>
        public const string LastMethodCall = "LastMethodCall";

        /// <summary>
        /// The BrowseName for the LastMethodCallTime component.
        /// </summary>
        public const string LastMethodCallTime = "LastMethodCallTime";

        /// <summary>
        /// The BrowseName for the LastMethodInputArguments component.
        /// </summary>
        public const string LastMethodInputArguments = "LastMethodInputArguments";

        /// <summary>
        /// The BrowseName for the LastMethodOutputArguments component.
        /// </summary>
        public const string LastMethodOutputArguments = "LastMethodOutputArguments";

        /// <summary>
        /// The BrowseName for the LastMethodReturnStatus component.
        /// </summary>
        public const string LastMethodReturnStatus = "LastMethodReturnStatus";

        /// <summary>
        /// The BrowseName for the LastMethodSessionId component.
        /// </summary>
        public const string LastMethodSessionId = "LastMethodSessionId";

        /// <summary>
        /// The BrowseName for the LastSeverity component.
        /// </summary>
        public const string LastSeverity = "LastSeverity";

        /// <summary>
        /// The BrowseName for the LastTransition component.
        /// </summary>
        public const string LastTransition = "LastTransition";

        /// <summary>
        /// The BrowseName for the LastTransitionTime component.
        /// </summary>
        public const string LastTransitionTime = "LastTransitionTime";

        /// <summary>
        /// The BrowseName for the LatePublishRequestCount component.
        /// </summary>
        public const string LatePublishRequestCount = "LatePublishRequestCount";

        /// <summary>
        /// The BrowseName for the LevelAlarmType component.
        /// </summary>
        public const string LevelAlarmType = "LevelAlarmType";

        /// <summary>
        /// The BrowseName for the Limit component.
        /// </summary>
        public const string Limit = "Limit";

        /// <summary>
        /// The BrowseName for the LiteralOperand component.
        /// </summary>
        public const string LiteralOperand = "LiteralOperand";

        /// <summary>
        /// The BrowseName for the LocaleId component.
        /// </summary>
        public const string LocaleId = "LocaleId";

        /// <summary>
        /// The BrowseName for the LocaleIdArray component.
        /// </summary>
        public const string LocaleIdArray = "LocaleIdArray";

        /// <summary>
        /// The BrowseName for the LocaleIds component.
        /// </summary>
        public const string LocaleIds = "LocaleIds";

        /// <summary>
        /// The BrowseName for the LocalizedText component.
        /// </summary>
        public const string LocalizedText = "LocalizedText";

        /// <summary>
        /// The BrowseName for the LocalTime component.
        /// </summary>
        public const string LocalTime = "LocalTime";

        /// <summary>
        /// The BrowseName for the Low component.
        /// </summary>
        public const string Low = "Low";

        /// <summary>
        /// The BrowseName for the LowLimit component.
        /// </summary>
        public const string LowLimit = "LowLimit";

        /// <summary>
        /// The BrowseName for the LowLow component.
        /// </summary>
        public const string LowLow = "LowLow";

        /// <summary>
        /// The BrowseName for the LowLowLimit component.
        /// </summary>
        public const string LowLowLimit = "LowLowLimit";

        /// <summary>
        /// The BrowseName for the LowLowToLow component.
        /// </summary>
        public const string LowLowToLow = "LowLowToLow";

        /// <summary>
        /// The BrowseName for the LowToLowLow component.
        /// </summary>
        public const string LowToLowLow = "LowToLowLow";

        /// <summary>
        /// The BrowseName for the ManualShelve component.
        /// </summary>
        public const string ManualShelve = "ManualShelve";

        /// <summary>
        /// The BrowseName for the ManualShelved component.
        /// </summary>
        public const string ManualShelved = "ManualShelved";

        /// <summary>
        /// The BrowseName for the ManualShelvedToOneShotShelved component.
        /// </summary>
        public const string ManualShelvedToOneShotShelved = "ManualShelvedToOneShotShelved";

        /// <summary>
        /// The BrowseName for the ManualShelvedToTimedShelved component.
        /// </summary>
        public const string ManualShelvedToTimedShelved = "ManualShelvedToTimedShelved";

        /// <summary>
        /// The BrowseName for the ManualShelvedToUnshelved component.
        /// </summary>
        public const string ManualShelvedToUnshelved = "ManualShelvedToUnshelved";

        /// <summary>
        /// The BrowseName for the ManufacturerName component.
        /// </summary>
        public const string ManufacturerName = "ManufacturerName";

        /// <summary>
        /// The BrowseName for the MaxBrowseContinuationPoints component.
        /// </summary>
        public const string MaxBrowseContinuationPoints = "MaxBrowseContinuationPoints";

        /// <summary>
        /// The BrowseName for the MaxHistoryContinuationPoints component.
        /// </summary>
        public const string MaxHistoryContinuationPoints = "MaxHistoryContinuationPoints";

        /// <summary>
        /// The BrowseName for the MaxInstanceCount component.
        /// </summary>
        public const string MaxInstanceCount = "MaxInstanceCount";

        /// <summary>
        /// The BrowseName for the MaxKeepAliveCount component.
        /// </summary>
        public const string MaxKeepAliveCount = "MaxKeepAliveCount";

        /// <summary>
        /// The BrowseName for the MaxLifetimeCount component.
        /// </summary>
        public const string MaxLifetimeCount = "MaxLifetimeCount";

        /// <summary>
        /// The BrowseName for the MaxMonitoredItemCount component.
        /// </summary>
        public const string MaxMonitoredItemCount = "MaxMonitoredItemCount";

        /// <summary>
        /// The BrowseName for the MaxNotificationsPerPublish component.
        /// </summary>
        public const string MaxNotificationsPerPublish = "MaxNotificationsPerPublish";

        /// <summary>
        /// The BrowseName for the MaxQueryContinuationPoints component.
        /// </summary>
        public const string MaxQueryContinuationPoints = "MaxQueryContinuationPoints";

        /// <summary>
        /// The BrowseName for the MaxRecycleCount component.
        /// </summary>
        public const string MaxRecycleCount = "MaxRecycleCount";

        /// <summary>
        /// The BrowseName for the MaxResponseMessageSize component.
        /// </summary>
        public const string MaxResponseMessageSize = "MaxResponseMessageSize";

        /// <summary>
        /// The BrowseName for the MaxReturnValues component.
        /// </summary>
        public const string MaxReturnValues = "MaxReturnValues";

        /// <summary>
        /// The BrowseName for the MaxTimeInterval component.
        /// </summary>
        public const string MaxTimeInterval = "MaxTimeInterval";

        /// <summary>
        /// The BrowseName for the MaxTimeShelved component.
        /// </summary>
        public const string MaxTimeShelved = "MaxTimeShelved";

        /// <summary>
        /// The BrowseName for the Message component.
        /// </summary>
        public const string Message = "Message";

        /// <summary>
        /// The BrowseName for the MessageSecurityMode component.
        /// </summary>
        public const string MessageSecurityMode = "MessageSecurityMode";

        /// <summary>
        /// The BrowseName for the MethodAttributes component.
        /// </summary>
        public const string MethodAttributes = "MethodAttributes";

        /// <summary>
        /// The BrowseName for the MethodId component.
        /// </summary>
        public const string MethodId = "MethodId";

        /// <summary>
        /// The BrowseName for the MethodNode component.
        /// </summary>
        public const string MethodNode = "MethodNode";

        /// <summary>
        /// The BrowseName for the MinSupportedSampleRate component.
        /// </summary>
        public const string MinSupportedSampleRate = "MinSupportedSampleRate";

        /// <summary>
        /// The BrowseName for the MinTimeInterval component.
        /// </summary>
        public const string MinTimeInterval = "MinTimeInterval";

        /// <summary>
        /// The BrowseName for the ModelChangeStructureDataType component.
        /// </summary>
        public const string ModelChangeStructureDataType = "ModelChangeStructureDataType";

        /// <summary>
        /// The BrowseName for the ModelChangeStructureVerbMask component.
        /// </summary>
        public const string ModelChangeStructureVerbMask = "ModelChangeStructureVerbMask";

        /// <summary>
        /// The BrowseName for the ModellingRule_CardinalityRestriction component.
        /// </summary>
        public const string ModellingRule_CardinalityRestriction = "CardinalityRestriction";

        /// <summary>
        /// The BrowseName for the ModellingRule_ExposesItsArray component.
        /// </summary>
        public const string ModellingRule_ExposesItsArray = "ExposesItsArray";

        /// <summary>
        /// The BrowseName for the ModellingRule_Mandatory component.
        /// </summary>
        public const string ModellingRule_Mandatory = "Mandatory";

        /// <summary>
        /// The BrowseName for the ModellingRule_MandatoryShared component.
        /// </summary>
        public const string ModellingRule_MandatoryShared = "MandatoryShared";

        /// <summary>
        /// The BrowseName for the ModellingRule_Optional component.
        /// </summary>
        public const string ModellingRule_Optional = "Optional";

        /// <summary>
        /// The BrowseName for the ModellingRules component.
        /// </summary>
        public const string ModellingRules = "ModellingRules";

        /// <summary>
        /// The BrowseName for the ModellingRuleType component.
        /// </summary>
        public const string ModellingRuleType = "ModellingRuleType";

        /// <summary>
        /// The BrowseName for the ModifyCount component.
        /// </summary>
        public const string ModifyCount = "ModifyCount";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsCount component.
        /// </summary>
        public const string ModifyMonitoredItemsCount = "ModifyMonitoredItemsCount";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsRequest component.
        /// </summary>
        public const string ModifyMonitoredItemsRequest = "ModifyMonitoredItemsRequest";

        /// <summary>
        /// The BrowseName for the ModifyMonitoredItemsResponse component.
        /// </summary>
        public const string ModifyMonitoredItemsResponse = "ModifyMonitoredItemsResponse";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionCount component.
        /// </summary>
        public const string ModifySubscriptionCount = "ModifySubscriptionCount";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionRequest component.
        /// </summary>
        public const string ModifySubscriptionRequest = "ModifySubscriptionRequest";

        /// <summary>
        /// The BrowseName for the ModifySubscriptionResponse component.
        /// </summary>
        public const string ModifySubscriptionResponse = "ModifySubscriptionResponse";

        /// <summary>
        /// The BrowseName for the MonitoredItemCount component.
        /// </summary>
        public const string MonitoredItemCount = "MonitoredItemCount";

        /// <summary>
        /// The BrowseName for the MonitoredItemCreateRequest component.
        /// </summary>
        public const string MonitoredItemCreateRequest = "MonitoredItemCreateRequest";

        /// <summary>
        /// The BrowseName for the MonitoredItemCreateResult component.
        /// </summary>
        public const string MonitoredItemCreateResult = "MonitoredItemCreateResult";

        /// <summary>
        /// The BrowseName for the MonitoredItemModifyRequest component.
        /// </summary>
        public const string MonitoredItemModifyRequest = "MonitoredItemModifyRequest";

        /// <summary>
        /// The BrowseName for the MonitoredItemModifyResult component.
        /// </summary>
        public const string MonitoredItemModifyResult = "MonitoredItemModifyResult";

        /// <summary>
        /// The BrowseName for the MonitoredItemNotification component.
        /// </summary>
        public const string MonitoredItemNotification = "MonitoredItemNotification";

        /// <summary>
        /// The BrowseName for the MonitoringFilter component.
        /// </summary>
        public const string MonitoringFilter = "MonitoringFilter";

        /// <summary>
        /// The BrowseName for the MonitoringFilterResult component.
        /// </summary>
        public const string MonitoringFilterResult = "MonitoringFilterResult";

        /// <summary>
        /// The BrowseName for the MonitoringMode component.
        /// </summary>
        public const string MonitoringMode = "MonitoringMode";

        /// <summary>
        /// The BrowseName for the MonitoringParameters component.
        /// </summary>
        public const string MonitoringParameters = "MonitoringParameters";

        /// <summary>
        /// The BrowseName for the MonitoringQueueOverflowCount component.
        /// </summary>
        public const string MonitoringQueueOverflowCount = "MonitoringQueueOverflowCount";

        /// <summary>
        /// The BrowseName for the MultiLevelAlarmActiveSubStateMachineType component.
        /// </summary>
        public const string MultiLevelAlarmActiveSubStateMachineType = "MultiLevelAlarmActiveSubStateMachineType";

        /// <summary>
        /// The BrowseName for the MultiLevelAlarmConditionStateMachineType component.
        /// </summary>
        public const string MultiLevelAlarmConditionStateMachineType = "MultiLevelAlarmConditionStateMachineType";

        /// <summary>
        /// The BrowseName for the MultiLevelAlarmStateMachineType component.
        /// </summary>
        public const string MultiLevelAlarmStateMachineType = "MultiLevelAlarmStateMachineType";

        /// <summary>
        /// The BrowseName for the MultiLevelAlarmType component.
        /// </summary>
        public const string MultiLevelAlarmType = "MultiLevelAlarmType";

        /// <summary>
        /// The BrowseName for the MultiStateDiscreteType component.
        /// </summary>
        public const string MultiStateDiscreteType = "MultiStateDiscreteType";

        /// <summary>
        /// The BrowseName for the Name component.
        /// </summary>
        public const string Name = "Name";

        /// <summary>
        /// The BrowseName for the NamespaceArray component.
        /// </summary>
        public const string NamespaceArray = "NamespaceArray";

        /// <summary>
        /// The BrowseName for the NamespaceUri component.
        /// </summary>
        public const string NamespaceUri = "NamespaceUri";

        /// <summary>
        /// The BrowseName for the NamingRule component.
        /// </summary>
        public const string NamingRule = "NamingRule";

        /// <summary>
        /// The BrowseName for the NamingRuleType component.
        /// </summary>
        public const string NamingRuleType = "NamingRuleType";

        /// <summary>
        /// The BrowseName for the NewStateId component.
        /// </summary>
        public const string NewStateId = "NewStateId";

        /// <summary>
        /// The BrowseName for the NewValue component.
        /// </summary>
        public const string NewValue = "NewValue";

        /// <summary>
        /// The BrowseName for the NewValues component.
        /// </summary>
        public const string NewValues = "NewValues";

        /// <summary>
        /// The BrowseName for the NextSequenceNumber component.
        /// </summary>
        public const string NextSequenceNumber = "NextSequenceNumber";

        /// <summary>
        /// The BrowseName for the No component.
        /// </summary>
        public const string No = "No";

        /// <summary>
        /// The BrowseName for the Node component.
        /// </summary>
        public const string Node = "Node";

        /// <summary>
        /// The BrowseName for the NodeAttributes component.
        /// </summary>
        public const string NodeAttributes = "NodeAttributes";

        /// <summary>
        /// The BrowseName for the NodeAttributesMask component.
        /// </summary>
        public const string NodeAttributesMask = "NodeAttributesMask";

        /// <summary>
        /// The BrowseName for the NodeClass component.
        /// </summary>
        public const string NodeClass = "NodeClass";

        /// <summary>
        /// The BrowseName for the NodeId component.
        /// </summary>
        public const string NodeId = "NodeId";

        /// <summary>
        /// The BrowseName for the NodeReference component.
        /// </summary>
        public const string NodeReference = "NodeReference";

        /// <summary>
        /// The BrowseName for the NodesToAdd component.
        /// </summary>
        public const string NodesToAdd = "NodesToAdd";

        /// <summary>
        /// The BrowseName for the NodesToDelete component.
        /// </summary>
        public const string NodesToDelete = "NodesToDelete";

        /// <summary>
        /// The BrowseName for the NodeTypeDescription component.
        /// </summary>
        public const string NodeTypeDescription = "NodeTypeDescription";

        /// <summary>
        /// The BrowseName for the NodeVersion component.
        /// </summary>
        public const string NodeVersion = "NodeVersion";

        /// <summary>
        /// The BrowseName for the NonHierarchicalReferences component.
        /// </summary>
        public const string NonHierarchicalReferences = "NonHierarchicalReferences";

        /// <summary>
        /// The BrowseName for the NonTransparentRedundancyType component.
        /// </summary>
        public const string NonTransparentRedundancyType = "NonTransparentRedundancyType";

        /// <summary>
        /// The BrowseName for the NotificationData component.
        /// </summary>
        public const string NotificationData = "NotificationData";

        /// <summary>
        /// The BrowseName for the NotificationMessage component.
        /// </summary>
        public const string NotificationMessage = "NotificationMessage";

        /// <summary>
        /// The BrowseName for the NotificationsCount component.
        /// </summary>
        public const string NotificationsCount = "NotificationsCount";

        /// <summary>
        /// The BrowseName for the Number component.
        /// </summary>
        public const string Number = "Number";

        /// <summary>
        /// The BrowseName for the NumericRange component.
        /// </summary>
        public const string NumericRange = "NumericRange";

        /// <summary>
        /// The BrowseName for the ObjectAttributes component.
        /// </summary>
        public const string ObjectAttributes = "ObjectAttributes";

        /// <summary>
        /// The BrowseName for the ObjectNode component.
        /// </summary>
        public const string ObjectNode = "ObjectNode";

        /// <summary>
        /// The BrowseName for the ObjectsFolder component.
        /// </summary>
        public const string ObjectsFolder = "Objects";

        /// <summary>
        /// The BrowseName for the ObjectTypeAttributes component.
        /// </summary>
        public const string ObjectTypeAttributes = "ObjectTypeAttributes";

        /// <summary>
        /// The BrowseName for the ObjectTypeNode component.
        /// </summary>
        public const string ObjectTypeNode = "ObjectTypeNode";

        /// <summary>
        /// The BrowseName for the ObjectTypesFolder component.
        /// </summary>
        public const string ObjectTypesFolder = "ObjectTypes";

        /// <summary>
        /// The BrowseName for the Ok component.
        /// </summary>
        public const string Ok = "Ok";

        /// <summary>
        /// The BrowseName for the OkCancelDialogConditionType component.
        /// </summary>
        public const string OkCancelDialogConditionType = "OkCancelDialogConditionType";

        /// <summary>
        /// The BrowseName for the OkCancelDialogStateMachineType component.
        /// </summary>
        public const string OkCancelDialogStateMachineType = "OkCancelDialogStateMachineType";

        /// <summary>
        /// The BrowseName for the OkCancelDialogSubStateMachineType component.
        /// </summary>
        public const string OkCancelDialogSubStateMachineType = "OkCancelDialogSubStateMachineType";

        /// <summary>
        /// The BrowseName for the OkDialogConditionType component.
        /// </summary>
        public const string OkDialogConditionType = "OkDialogConditionType";

        /// <summary>
        /// The BrowseName for the OkDialogStateMachineType component.
        /// </summary>
        public const string OkDialogStateMachineType = "OkDialogStateMachineType";

        /// <summary>
        /// The BrowseName for the OkDialogSubStateMachineType component.
        /// </summary>
        public const string OkDialogSubStateMachineType = "OkDialogSubStateMachineType";

        /// <summary>
        /// The BrowseName for the OldStateId component.
        /// </summary>
        public const string OldStateId = "OldStateId";

        /// <summary>
        /// The BrowseName for the OldValue component.
        /// </summary>
        public const string OldValue = "OldValue";

        /// <summary>
        /// The BrowseName for the OldValues component.
        /// </summary>
        public const string OldValues = "OldValues";

        /// <summary>
        /// The BrowseName for the OneShotShelve component.
        /// </summary>
        public const string OneShotShelve = "OneShotShelve";

        /// <summary>
        /// The BrowseName for the OneShotShelved component.
        /// </summary>
        public const string OneShotShelved = "OneShotShelved";

        /// <summary>
        /// The BrowseName for the OneShotShelvedToManualShelved component.
        /// </summary>
        public const string OneShotShelvedToManualShelved = "OneShotShelvedToManualShelved";

        /// <summary>
        /// The BrowseName for the OneShotShelvedToTimedShelved component.
        /// </summary>
        public const string OneShotShelvedToTimedShelved = "OneShotShelvedToTimedShelved";

        /// <summary>
        /// The BrowseName for the OneShotShelvedToUnshelved component.
        /// </summary>
        public const string OneShotShelvedToUnshelved = "OneShotShelvedToUnshelved";

        /// <summary>
        /// The BrowseName for the OPCBinarySchema_TypeSystem component.
        /// </summary>
        public const string OPCBinarySchema_TypeSystem = "OPC Binary";

        /// <summary>
        /// The BrowseName for the OpcUa component.
        /// </summary>
        public const string OpcUa = "Opc.Ua";

        /// <summary>
        /// The BrowseName for the OpcUa_BinarySchema component.
        /// </summary>
        public const string OpcUa_BinarySchema = "OpcUa";

        /// <summary>
        /// The BrowseName for the OpcUa_XmlSchema component.
        /// </summary>
        public const string OpcUa_XmlSchema = "OpcUa";

        /// <summary>
        /// The BrowseName for the OpenSecureChannelRequest component.
        /// </summary>
        public const string OpenSecureChannelRequest = "OpenSecureChannelRequest";

        /// <summary>
        /// The BrowseName for the OpenSecureChannelResponse component.
        /// </summary>
        public const string OpenSecureChannelResponse = "OpenSecureChannelResponse";

        /// <summary>
        /// The BrowseName for the Organizes component.
        /// </summary>
        public const string Organizes = "Organizes";

        /// <summary>
        /// The BrowseName for the OutputArguments component.
        /// </summary>
        public const string OutputArguments = "OutputArguments";

        /// <summary>
        /// The BrowseName for the ParameterDataTypeId component.
        /// </summary>
        public const string ParameterDataTypeId = "ParameterDataTypeId";

        /// <summary>
        /// The BrowseName for the ParsingResult component.
        /// </summary>
        public const string ParsingResult = "ParsingResult";

        /// <summary>
        /// The BrowseName for the PerformInsertReplace component.
        /// </summary>
        public const string PerformInsertReplace = "PerformInsertReplace";

        /// <summary>
        /// The BrowseName for the Priority component.
        /// </summary>
        public const string Priority = "Priority";

        /// <summary>
        /// The BrowseName for the ProcessAlarmType component.
        /// </summary>
        public const string ProcessAlarmType = "ProcessAlarmType";

        /// <summary>
        /// The BrowseName for the ProductName component.
        /// </summary>
        public const string ProductName = "ProductName";

        /// <summary>
        /// The BrowseName for the ProductUri component.
        /// </summary>
        public const string ProductUri = "ProductUri";

        /// <summary>
        /// The BrowseName for the ProgramDiagnosticDataType component.
        /// </summary>
        public const string ProgramDiagnosticDataType = "ProgramDiagnosticDataType";

        /// <summary>
        /// The BrowseName for the ProgramDiagnostics component.
        /// </summary>
        public const string ProgramDiagnostics = "ProgramDiagnostics";

        /// <summary>
        /// The BrowseName for the ProgramDiagnosticType component.
        /// </summary>
        public const string ProgramDiagnosticType = "ProgramDiagnosticType";

        /// <summary>
        /// The BrowseName for the ProgramStateMachineType component.
        /// </summary>
        public const string ProgramStateMachineType = "ProgramStateMachineType";

        /// <summary>
        /// The BrowseName for the ProgramTransitionAuditEventType component.
        /// </summary>
        public const string ProgramTransitionAuditEventType = "ProgramTransitionAuditEventType";

        /// <summary>
        /// The BrowseName for the ProgramTransitionEventType component.
        /// </summary>
        public const string ProgramTransitionEventType = "ProgramTransitionEventType";

        /// <summary>
        /// The BrowseName for the Prompt component.
        /// </summary>
        public const string Prompt = "Prompt";

        /// <summary>
        /// The BrowseName for the PropertyType component.
        /// </summary>
        public const string PropertyType = "PropertyType";

        /// <summary>
        /// The BrowseName for the PublishCount component.
        /// </summary>
        public const string PublishCount = "PublishCount";

        /// <summary>
        /// The BrowseName for the PublishingEnabled component.
        /// </summary>
        public const string PublishingEnabled = "PublishingEnabled";

        /// <summary>
        /// The BrowseName for the PublishingInterval component.
        /// </summary>
        public const string PublishingInterval = "PublishingInterval";

        /// <summary>
        /// The BrowseName for the PublishingIntervalCount component.
        /// </summary>
        public const string PublishingIntervalCount = "PublishingIntervalCount";

        /// <summary>
        /// The BrowseName for the PublishRequest component.
        /// </summary>
        public const string PublishRequest = "PublishRequest";

        /// <summary>
        /// The BrowseName for the PublishRequestCount component.
        /// </summary>
        public const string PublishRequestCount = "PublishRequestCount";

        /// <summary>
        /// The BrowseName for the PublishResponse component.
        /// </summary>
        public const string PublishResponse = "PublishResponse";

        /// <summary>
        /// The BrowseName for the QualifiedName component.
        /// </summary>
        public const string QualifiedName = "QualifiedName";

        /// <summary>
        /// The BrowseName for the QueryDataDescription component.
        /// </summary>
        public const string QueryDataDescription = "QueryDataDescription";

        /// <summary>
        /// The BrowseName for the QueryDataSet component.
        /// </summary>
        public const string QueryDataSet = "QueryDataSet";

        /// <summary>
        /// The BrowseName for the QueryFirstCount component.
        /// </summary>
        public const string QueryFirstCount = "QueryFirstCount";

        /// <summary>
        /// The BrowseName for the QueryFirstRequest component.
        /// </summary>
        public const string QueryFirstRequest = "QueryFirstRequest";

        /// <summary>
        /// The BrowseName for the QueryFirstResponse component.
        /// </summary>
        public const string QueryFirstResponse = "QueryFirstResponse";

        /// <summary>
        /// The BrowseName for the QueryNextCount component.
        /// </summary>
        public const string QueryNextCount = "QueryNextCount";

        /// <summary>
        /// The BrowseName for the QueryNextRequest component.
        /// </summary>
        public const string QueryNextRequest = "QueryNextRequest";

        /// <summary>
        /// The BrowseName for the QueryNextResponse component.
        /// </summary>
        public const string QueryNextResponse = "QueryNextResponse";

        /// <summary>
        /// The BrowseName for the Range component.
        /// </summary>
        public const string Range = "Range";

        /// <summary>
        /// The BrowseName for the ReadAtTimeDetails component.
        /// </summary>
        public const string ReadAtTimeDetails = "ReadAtTimeDetails";

        /// <summary>
        /// The BrowseName for the ReadCount component.
        /// </summary>
        public const string ReadCount = "ReadCount";

        /// <summary>
        /// The BrowseName for the ReadEventDetails component.
        /// </summary>
        public const string ReadEventDetails = "ReadEventDetails";

        /// <summary>
        /// The BrowseName for the ReadProcessedDetails component.
        /// </summary>
        public const string ReadProcessedDetails = "ReadProcessedDetails";

        /// <summary>
        /// The BrowseName for the ReadRawModifiedDetails component.
        /// </summary>
        public const string ReadRawModifiedDetails = "ReadRawModifiedDetails";

        /// <summary>
        /// The BrowseName for the ReadRequest component.
        /// </summary>
        public const string ReadRequest = "ReadRequest";

        /// <summary>
        /// The BrowseName for the ReadResponse component.
        /// </summary>
        public const string ReadResponse = "ReadResponse";

        /// <summary>
        /// The BrowseName for the ReadValueId component.
        /// </summary>
        public const string ReadValueId = "ReadValueId";

        /// <summary>
        /// The BrowseName for the Ready component.
        /// </summary>
        public const string Ready = "Ready";

        /// <summary>
        /// The BrowseName for the ReadyToHalted component.
        /// </summary>
        public const string ReadyToHalted = "ReadyToHalted";

        /// <summary>
        /// The BrowseName for the ReadyToRunning component.
        /// </summary>
        public const string ReadyToRunning = "ReadyToRunning";

        /// <summary>
        /// The BrowseName for the ReceiveTime component.
        /// </summary>
        public const string ReceiveTime = "ReceiveTime";

        /// <summary>
        /// The BrowseName for the RecycleCount component.
        /// </summary>
        public const string RecycleCount = "RecycleCount";

        /// <summary>
        /// The BrowseName for the RedundancySupport component.
        /// </summary>
        public const string RedundancySupport = "RedundancySupport";

        /// <summary>
        /// The BrowseName for the RedundantServerArray component.
        /// </summary>
        public const string RedundantServerArray = "RedundantServerArray";

        /// <summary>
        /// The BrowseName for the RedundantServerDataType component.
        /// </summary>
        public const string RedundantServerDataType = "RedundantServerDataType";

        /// <summary>
        /// The BrowseName for the ReferenceDescription component.
        /// </summary>
        public const string ReferenceDescription = "ReferenceDescription";

        /// <summary>
        /// The BrowseName for the ReferenceNode component.
        /// </summary>
        public const string ReferenceNode = "ReferenceNode";

        /// <summary>
        /// The BrowseName for the References component.
        /// </summary>
        public const string References = "References";

        /// <summary>
        /// The BrowseName for the ReferencesToAdd component.
        /// </summary>
        public const string ReferencesToAdd = "ReferencesToAdd";

        /// <summary>
        /// The BrowseName for the ReferencesToDelete component.
        /// </summary>
        public const string ReferencesToDelete = "ReferencesToDelete";

        /// <summary>
        /// The BrowseName for the ReferenceTypeAttributes component.
        /// </summary>
        public const string ReferenceTypeAttributes = "ReferenceTypeAttributes";

        /// <summary>
        /// The BrowseName for the ReferenceTypeNode component.
        /// </summary>
        public const string ReferenceTypeNode = "ReferenceTypeNode";

        /// <summary>
        /// The BrowseName for the ReferenceTypesFolder component.
        /// </summary>
        public const string ReferenceTypesFolder = "ReferenceTypes";

        /// <summary>
        /// The BrowseName for the RefreshEndEventType component.
        /// </summary>
        public const string RefreshEndEventType = "RefreshEndEventType";

        /// <summary>
        /// The BrowseName for the RefreshRequiredEventType component.
        /// </summary>
        public const string RefreshRequiredEventType = "RefreshRequiredEventType";

        /// <summary>
        /// The BrowseName for the RefreshStartEventType component.
        /// </summary>
        public const string RefreshStartEventType = "RefreshStartEventType";

        /// <summary>
        /// The BrowseName for the RegisteredServer component.
        /// </summary>
        public const string RegisteredServer = "RegisteredServer";

        /// <summary>
        /// The BrowseName for the RegisterNodesCount component.
        /// </summary>
        public const string RegisterNodesCount = "RegisterNodesCount";

        /// <summary>
        /// The BrowseName for the RegisterNodesRequest component.
        /// </summary>
        public const string RegisterNodesRequest = "RegisterNodesRequest";

        /// <summary>
        /// The BrowseName for the RegisterNodesResponse component.
        /// </summary>
        public const string RegisterNodesResponse = "RegisterNodesResponse";

        /// <summary>
        /// The BrowseName for the RegisterServerRequest component.
        /// </summary>
        public const string RegisterServerRequest = "RegisterServerRequest";

        /// <summary>
        /// The BrowseName for the RegisterServerResponse component.
        /// </summary>
        public const string RegisterServerResponse = "RegisterServerResponse";

        /// <summary>
        /// The BrowseName for the RejectedRequestsCount component.
        /// </summary>
        public const string RejectedRequestsCount = "RejectedRequestsCount";

        /// <summary>
        /// The BrowseName for the RejectedSessionCount component.
        /// </summary>
        public const string RejectedSessionCount = "RejectedSessionCount";

        /// <summary>
        /// The BrowseName for the Rejecting component.
        /// </summary>
        public const string Rejecting = "Rejecting";

        /// <summary>
        /// The BrowseName for the RejectingToInactive component.
        /// </summary>
        public const string RejectingToInactive = "RejectingToInactive";

        /// <summary>
        /// The BrowseName for the RelativePath component.
        /// </summary>
        public const string RelativePath = "RelativePath";

        /// <summary>
        /// The BrowseName for the RelativePathElement component.
        /// </summary>
        public const string RelativePathElement = "RelativePathElement";

        /// <summary>
        /// The BrowseName for the ReplaceDataCapability component.
        /// </summary>
        public const string ReplaceDataCapability = "ReplaceDataCapability";

        /// <summary>
        /// The BrowseName for the RepublishCount component.
        /// </summary>
        public const string RepublishCount = "RepublishCount";

        /// <summary>
        /// The BrowseName for the RepublishMessageCount component.
        /// </summary>
        public const string RepublishMessageCount = "RepublishMessageCount";

        /// <summary>
        /// The BrowseName for the RepublishMessageRequestCount component.
        /// </summary>
        public const string RepublishMessageRequestCount = "RepublishMessageRequestCount";

        /// <summary>
        /// The BrowseName for the RepublishRequest component.
        /// </summary>
        public const string RepublishRequest = "RepublishRequest";

        /// <summary>
        /// The BrowseName for the RepublishRequestCount component.
        /// </summary>
        public const string RepublishRequestCount = "RepublishRequestCount";

        /// <summary>
        /// The BrowseName for the RepublishResponse component.
        /// </summary>
        public const string RepublishResponse = "RepublishResponse";

        /// <summary>
        /// The BrowseName for the ReqTimes component.
        /// </summary>
        public const string ReqTimes = "ReqTimes";

        /// <summary>
        /// The BrowseName for the RequestedLifetime component.
        /// </summary>
        public const string RequestedLifetime = "RequestedLifetime";

        /// <summary>
        /// The BrowseName for the RequestHandle component.
        /// </summary>
        public const string RequestHandle = "RequestHandle";

        /// <summary>
        /// The BrowseName for the RequestHeader component.
        /// </summary>
        public const string RequestHeader = "RequestHeader";

        /// <summary>
        /// The BrowseName for the RequestType component.
        /// </summary>
        public const string RequestType = "RequestType";

        /// <summary>
        /// The BrowseName for the Reset component.
        /// </summary>
        public const string Reset = "Reset";

        /// <summary>
        /// The BrowseName for the ResponseHeader component.
        /// </summary>
        public const string ResponseHeader = "ResponseHeader";

        /// <summary>
        /// The BrowseName for the Resume component.
        /// </summary>
        public const string Resume = "Resume";

        /// <summary>
        /// The BrowseName for the Retain component.
        /// </summary>
        public const string Retain = "Retain";

        /// <summary>
        /// The BrowseName for the RevisedSessionTimeout component.
        /// </summary>
        public const string RevisedSessionTimeout = "RevisedSessionTimeout";

        /// <summary>
        /// The BrowseName for the RootFolder component.
        /// </summary>
        public const string RootFolder = "Root";

        /// <summary>
        /// The BrowseName for the Running component.
        /// </summary>
        public const string Running = "Running";

        /// <summary>
        /// The BrowseName for the RunningToHalted component.
        /// </summary>
        public const string RunningToHalted = "RunningToHalted";

        /// <summary>
        /// The BrowseName for the RunningToReady component.
        /// </summary>
        public const string RunningToReady = "RunningToReady";

        /// <summary>
        /// The BrowseName for the RunningToSuspended component.
        /// </summary>
        public const string RunningToSuspended = "RunningToSuspended";

        /// <summary>
        /// The BrowseName for the SamplingInterval component.
        /// </summary>
        public const string SamplingInterval = "SamplingInterval";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsArray component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsArray = "SamplingIntervalDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsArrayType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsArrayType = "SamplingIntervalDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsDataType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsDataType = "SamplingIntervalDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SamplingIntervalDiagnosticsType component.
        /// </summary>
        public const string SamplingIntervalDiagnosticsType = "SamplingIntervalDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SByte component.
        /// </summary>
        public const string SByte = "SByte";

        /// <summary>
        /// The BrowseName for the ScalarTestType component.
        /// </summary>
        public const string ScalarTestType = "ScalarTestType";

        /// <summary>
        /// The BrowseName for the SecondsTillShutdown component.
        /// </summary>
        public const string SecondsTillShutdown = "SecondsTillShutdown";

        /// <summary>
        /// The BrowseName for the SecureChannelId component.
        /// </summary>
        public const string SecureChannelId = "SecureChannelId";

        /// <summary>
        /// The BrowseName for the SecurityMode component.
        /// </summary>
        public const string SecurityMode = "SecurityMode";

        /// <summary>
        /// The BrowseName for the SecurityPolicyUri component.
        /// </summary>
        public const string SecurityPolicyUri = "SecurityPolicyUri";

        /// <summary>
        /// The BrowseName for the SecurityRejectedRequestsCount component.
        /// </summary>
        public const string SecurityRejectedRequestsCount = "SecurityRejectedRequestsCount";

        /// <summary>
        /// The BrowseName for the SecurityRejectedSessionCount component.
        /// </summary>
        public const string SecurityRejectedSessionCount = "SecurityRejectedSessionCount";

        /// <summary>
        /// The BrowseName for the SecurityTokenRequestType component.
        /// </summary>
        public const string SecurityTokenRequestType = "SecurityTokenRequestType";

        /// <summary>
        /// The BrowseName for the SemanticChangeEventType component.
        /// </summary>
        public const string SemanticChangeEventType = "SemanticChangeEventType";

        /// <summary>
        /// The BrowseName for the SemanticChangeStructureDataType component.
        /// </summary>
        public const string SemanticChangeStructureDataType = "SemanticChangeStructureDataType";

        /// <summary>
        /// The BrowseName for the Server component.
        /// </summary>
        public const string Server = "Server";

        /// <summary>
        /// The BrowseName for the ServerArray component.
        /// </summary>
        public const string ServerArray = "ServerArray";

        /// <summary>
        /// The BrowseName for the ServerCapabilities component.
        /// </summary>
        public const string ServerCapabilities = "ServerCapabilities";

        /// <summary>
        /// The BrowseName for the ServerCapabilitiesType component.
        /// </summary>
        public const string ServerCapabilitiesType = "ServerCapabilitiesType";

        /// <summary>
        /// The BrowseName for the ServerDiagnostics component.
        /// </summary>
        public const string ServerDiagnostics = "ServerDiagnostics";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummary component.
        /// </summary>
        public const string ServerDiagnosticsSummary = "ServerDiagnosticsSummary";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummaryDataType component.
        /// </summary>
        public const string ServerDiagnosticsSummaryDataType = "ServerDiagnosticsSummaryDataType";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsSummaryType component.
        /// </summary>
        public const string ServerDiagnosticsSummaryType = "ServerDiagnosticsSummaryType";

        /// <summary>
        /// The BrowseName for the ServerDiagnosticsType component.
        /// </summary>
        public const string ServerDiagnosticsType = "ServerDiagnosticsType";

        /// <summary>
        /// The BrowseName for the ServerId component.
        /// </summary>
        public const string ServerId = "ServerId";

        /// <summary>
        /// The BrowseName for the ServerProfileArray component.
        /// </summary>
        public const string ServerProfileArray = "ServerProfileArray";

        /// <summary>
        /// The BrowseName for the ServerRedundancy component.
        /// </summary>
        public const string ServerRedundancy = "ServerRedundancy";

        /// <summary>
        /// The BrowseName for the ServerRedundancyType component.
        /// </summary>
        public const string ServerRedundancyType = "ServerRedundancyType";

        /// <summary>
        /// The BrowseName for the ServerState component.
        /// </summary>
        public const string ServerState = "ServerState";

        /// <summary>
        /// The BrowseName for the ServerStatus component.
        /// </summary>
        public const string ServerStatus = "ServerStatus";

        /// <summary>
        /// The BrowseName for the ServerStatusDataType component.
        /// </summary>
        public const string ServerStatusDataType = "ServerStatusDataType";

        /// <summary>
        /// The BrowseName for the ServerStatusType component.
        /// </summary>
        public const string ServerStatusType = "ServerStatusType";

        /// <summary>
        /// The BrowseName for the ServerType component.
        /// </summary>
        public const string ServerType = "ServerType";

        /// <summary>
        /// The BrowseName for the ServerUri component.
        /// </summary>
        public const string ServerUri = "ServerUri";

        /// <summary>
        /// The BrowseName for the ServerUriArray component.
        /// </summary>
        public const string ServerUriArray = "ServerUriArray";

        /// <summary>
        /// The BrowseName for the ServerVendorCapabilityType component.
        /// </summary>
        public const string ServerVendorCapabilityType = "ServerVendorCapabilityType";

        /// <summary>
        /// The BrowseName for the ServerViewCount component.
        /// </summary>
        public const string ServerViewCount = "ServerViewCount";

        /// <summary>
        /// The BrowseName for the ServiceCounterDataType component.
        /// </summary>
        public const string ServiceCounterDataType = "ServiceCounterDataType";

        /// <summary>
        /// The BrowseName for the ServiceFault component.
        /// </summary>
        public const string ServiceFault = "ServiceFault";

        /// <summary>
        /// The BrowseName for the ServiceLevel component.
        /// </summary>
        public const string ServiceLevel = "ServiceLevel";

        /// <summary>
        /// The BrowseName for the SessionAbortCount component.
        /// </summary>
        public const string SessionAbortCount = "SessionAbortCount";

        /// <summary>
        /// The BrowseName for the SessionAuthenticationToken component.
        /// </summary>
        public const string SessionAuthenticationToken = "SessionAuthenticationToken";

        /// <summary>
        /// The BrowseName for the SessionDiagnostics component.
        /// </summary>
        public const string SessionDiagnostics = "SessionDiagnostics";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsArray component.
        /// </summary>
        public const string SessionDiagnosticsArray = "SessionDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsArrayType component.
        /// </summary>
        public const string SessionDiagnosticsArrayType = "SessionDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsDataType component.
        /// </summary>
        public const string SessionDiagnosticsDataType = "SessionDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsObjectType component.
        /// </summary>
        public const string SessionDiagnosticsObjectType = "SessionDiagnosticsObjectType";

        /// <summary>
        /// The BrowseName for the SessionDiagnosticsVariableType component.
        /// </summary>
        public const string SessionDiagnosticsVariableType = "SessionDiagnosticsVariableType";

        /// <summary>
        /// The BrowseName for the SessionId component.
        /// </summary>
        public const string SessionId = "SessionId";

        /// <summary>
        /// The BrowseName for the SessionName component.
        /// </summary>
        public const string SessionName = "SessionName";

        /// <summary>
        /// The BrowseName for the SessionsDiagnosticsSummary component.
        /// </summary>
        public const string SessionsDiagnosticsSummary = "SessionsDiagnosticsSummary";

        /// <summary>
        /// The BrowseName for the SessionsDiagnosticsSummaryType component.
        /// </summary>
        public const string SessionsDiagnosticsSummaryType = "SessionsDiagnosticsSummaryType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnostics component.
        /// </summary>
        public const string SessionSecurityDiagnostics = "SessionSecurityDiagnostics";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsArray component.
        /// </summary>
        public const string SessionSecurityDiagnosticsArray = "SessionSecurityDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsArrayType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsArrayType = "SessionSecurityDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsDataType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsDataType = "SessionSecurityDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SessionSecurityDiagnosticsType component.
        /// </summary>
        public const string SessionSecurityDiagnosticsType = "SessionSecurityDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SessionTimeoutCount component.
        /// </summary>
        public const string SessionTimeoutCount = "SessionTimeoutCount";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeCount component.
        /// </summary>
        public const string SetMonitoringModeCount = "SetMonitoringModeCount";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeRequest component.
        /// </summary>
        public const string SetMonitoringModeRequest = "SetMonitoringModeRequest";

        /// <summary>
        /// The BrowseName for the SetMonitoringModeResponse component.
        /// </summary>
        public const string SetMonitoringModeResponse = "SetMonitoringModeResponse";

        /// <summary>
        /// The BrowseName for the SetPublishingModeCount component.
        /// </summary>
        public const string SetPublishingModeCount = "SetPublishingModeCount";

        /// <summary>
        /// The BrowseName for the SetPublishingModeRequest component.
        /// </summary>
        public const string SetPublishingModeRequest = "SetPublishingModeRequest";

        /// <summary>
        /// The BrowseName for the SetPublishingModeResponse component.
        /// </summary>
        public const string SetPublishingModeResponse = "SetPublishingModeResponse";

        /// <summary>
        /// The BrowseName for the SetTriggeringCount component.
        /// </summary>
        public const string SetTriggeringCount = "SetTriggeringCount";

        /// <summary>
        /// The BrowseName for the SetTriggeringRequest component.
        /// </summary>
        public const string SetTriggeringRequest = "SetTriggeringRequest";

        /// <summary>
        /// The BrowseName for the SetTriggeringResponse component.
        /// </summary>
        public const string SetTriggeringResponse = "SetTriggeringResponse";

        /// <summary>
        /// The BrowseName for the Severity component.
        /// </summary>
        public const string Severity = "Severity";

        /// <summary>
        /// The BrowseName for the SeverityChange component.
        /// </summary>
        public const string SeverityChange = "SeverityChange";

        /// <summary>
        /// The BrowseName for the SeverityStateMachineType component.
        /// </summary>
        public const string SeverityStateMachineType = "SeverityStateMachineType";

        /// <summary>
        /// The BrowseName for the ShelvedAuditEventType component.
        /// </summary>
        public const string ShelvedAuditEventType = "ShelvedAuditEventType";

        /// <summary>
        /// The BrowseName for the ShelvedStateMachineType component.
        /// </summary>
        public const string ShelvedStateMachineType = "ShelvedStateMachineType";

        /// <summary>
        /// The BrowseName for the ShutdownReason component.
        /// </summary>
        public const string ShutdownReason = "ShutdownReason";

        /// <summary>
        /// The BrowseName for the SignatureData component.
        /// </summary>
        public const string SignatureData = "SignatureData";

        /// <summary>
        /// The BrowseName for the SignedSoftwareCertificate component.
        /// </summary>
        public const string SignedSoftwareCertificate = "SignedSoftwareCertificate";

        /// <summary>
        /// The BrowseName for the SimpleAttributeOperand component.
        /// </summary>
        public const string SimpleAttributeOperand = "SimpleAttributeOperand";

        /// <summary>
        /// The BrowseName for the SingleLevelAlarmType component.
        /// </summary>
        public const string SingleLevelAlarmType = "SingleLevelAlarmType";

        /// <summary>
        /// The BrowseName for the SoftwareCertificate component.
        /// </summary>
        public const string SoftwareCertificate = "SoftwareCertificate";

        /// <summary>
        /// The BrowseName for the SoftwareCertificates component.
        /// </summary>
        public const string SoftwareCertificates = "SoftwareCertificates";

        /// <summary>
        /// The BrowseName for the SoftwareVersion component.
        /// </summary>
        public const string SoftwareVersion = "SoftwareVersion";

        /// <summary>
        /// The BrowseName for the SourceName component.
        /// </summary>
        public const string SourceName = "SourceName";

        /// <summary>
        /// The BrowseName for the SourceNode component.
        /// </summary>
        public const string SourceNode = "SourceNode";

        /// <summary>
        /// The BrowseName for the Start component.
        /// </summary>
        public const string Start = "Start";

        /// <summary>
        /// The BrowseName for the StartTime component.
        /// </summary>
        public const string StartTime = "StartTime";

        /// <summary>
        /// The BrowseName for the State component.
        /// </summary>
        public const string State = "State";

        /// <summary>
        /// The BrowseName for the StateMachineType component.
        /// </summary>
        public const string StateMachineType = "StateMachineType";

        /// <summary>
        /// The BrowseName for the StateNumber component.
        /// </summary>
        public const string StateNumber = "StateNumber";

        /// <summary>
        /// The BrowseName for the StateType component.
        /// </summary>
        public const string StateType = "StateType";

        /// <summary>
        /// The BrowseName for the StateVariableType component.
        /// </summary>
        public const string StateVariableType = "StateVariableType";

        /// <summary>
        /// The BrowseName for the Status component.
        /// </summary>
        public const string Status = "Status";

        /// <summary>
        /// The BrowseName for the StatusChangeNotification component.
        /// </summary>
        public const string StatusChangeNotification = "StatusChangeNotification";

        /// <summary>
        /// The BrowseName for the StatusCode component.
        /// </summary>
        public const string StatusCode = "StatusCode";

        /// <summary>
        /// The BrowseName for the StatusResult component.
        /// </summary>
        public const string StatusResult = "StatusResult";

        /// <summary>
        /// The BrowseName for the StatusStateMachineType component.
        /// </summary>
        public const string StatusStateMachineType = "StatusStateMachineType";

        /// <summary>
        /// The BrowseName for the Stepped component.
        /// </summary>
        public const string Stepped = "Stepped";

        /// <summary>
        /// The BrowseName for the String component.
        /// </summary>
        public const string String = "String";

        /// <summary>
        /// The BrowseName for the Structure component.
        /// </summary>
        public const string Structure = "Structure";

        /// <summary>
        /// The BrowseName for the SubscriptionAcknowledgement component.
        /// </summary>
        public const string SubscriptionAcknowledgement = "SubscriptionAcknowledgement";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsArray component.
        /// </summary>
        public const string SubscriptionDiagnosticsArray = "SubscriptionDiagnosticsArray";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsArrayType component.
        /// </summary>
        public const string SubscriptionDiagnosticsArrayType = "SubscriptionDiagnosticsArrayType";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsDataType component.
        /// </summary>
        public const string SubscriptionDiagnosticsDataType = "SubscriptionDiagnosticsDataType";

        /// <summary>
        /// The BrowseName for the SubscriptionDiagnosticsType component.
        /// </summary>
        public const string SubscriptionDiagnosticsType = "SubscriptionDiagnosticsType";

        /// <summary>
        /// The BrowseName for the SubscriptionId component.
        /// </summary>
        public const string SubscriptionId = "SubscriptionId";

        /// <summary>
        /// The BrowseName for the SupportedProfile component.
        /// </summary>
        public const string SupportedProfile = "SupportedProfile";

        /// <summary>
        /// The BrowseName for the Suppressed component.
        /// </summary>
        public const string Suppressed = "Suppressed";

        /// <summary>
        /// The BrowseName for the SuppressedOrShelved component.
        /// </summary>
        public const string SuppressedOrShelved = "SuppressedOrShelved";

        /// <summary>
        /// The BrowseName for the SuppressedStateMachineType component.
        /// </summary>
        public const string SuppressedStateMachineType = "SuppressedStateMachineType";

        /// <summary>
        /// The BrowseName for the Suspend component.
        /// </summary>
        public const string Suspend = "Suspend";

        /// <summary>
        /// The BrowseName for the Suspended component.
        /// </summary>
        public const string Suspended = "Suspended";

        /// <summary>
        /// The BrowseName for the SuspendedToHalted component.
        /// </summary>
        public const string SuspendedToHalted = "SuspendedToHalted";

        /// <summary>
        /// The BrowseName for the SuspendedToReady component.
        /// </summary>
        public const string SuspendedToReady = "SuspendedToReady";

        /// <summary>
        /// The BrowseName for the SuspendedToRunning component.
        /// </summary>
        public const string SuspendedToRunning = "SuspendedToRunning";

        /// <summary>
        /// The BrowseName for the SystemEventType component.
        /// </summary>
        public const string SystemEventType = "SystemEventType";

        /// <summary>
        /// The BrowseName for the TestStackExRequest component.
        /// </summary>
        public const string TestStackExRequest = "TestStackExRequest";

        /// <summary>
        /// The BrowseName for the TestStackExResponse component.
        /// </summary>
        public const string TestStackExResponse = "TestStackExResponse";

        /// <summary>
        /// The BrowseName for the TestStackRequest component.
        /// </summary>
        public const string TestStackRequest = "TestStackRequest";

        /// <summary>
        /// The BrowseName for the TestStackResponse component.
        /// </summary>
        public const string TestStackResponse = "TestStackResponse";

        /// <summary>
        /// The BrowseName for the Time component.
        /// </summary>
        public const string Time = "Time";

        /// <summary>
        /// The BrowseName for the TimedShelve component.
        /// </summary>
        public const string TimedShelve = "TimedShelve";

        /// <summary>
        /// The BrowseName for the TimedShelved component.
        /// </summary>
        public const string TimedShelved = "TimedShelved";

        /// <summary>
        /// The BrowseName for the TimedShelvedToManualShelved component.
        /// </summary>
        public const string TimedShelvedToManualShelved = "TimedShelvedToManualShelved";

        /// <summary>
        /// The BrowseName for the TimedShelvedToOneShotShelved component.
        /// </summary>
        public const string TimedShelvedToOneShotShelved = "TimedShelvedToOneShotShelved";

        /// <summary>
        /// The BrowseName for the TimedShelvedToUnshelved component.
        /// </summary>
        public const string TimedShelvedToUnshelved = "TimedShelvedToUnshelved";

        /// <summary>
        /// The BrowseName for the TimedShelveMethodType component.
        /// </summary>
        public const string TimedShelveMethodType = "TimedShelveMethodType";

        /// <summary>
        /// The BrowseName for the TimestampsToReturn component.
        /// </summary>
        public const string TimestampsToReturn = "TimestampsToReturn";

        /// <summary>
        /// The BrowseName for the TimeZone component.
        /// </summary>
        public const string TimeZone = "TimeZone";

        /// <summary>
        /// The BrowseName for the TimeZoneDataType component.
        /// </summary>
        public const string TimeZoneDataType = "TimeZoneDataType";

        /// <summary>
        /// The BrowseName for the ToAccepting component.
        /// </summary>
        public const string ToAccepting = "ToAccepting";

        /// <summary>
        /// The BrowseName for the ToAcknowledged component.
        /// </summary>
        public const string ToAcknowledged = "ToAcknowledged";

        /// <summary>
        /// The BrowseName for the ToAcknowledging component.
        /// </summary>
        public const string ToAcknowledging = "ToAcknowledging";

        /// <summary>
        /// The BrowseName for the ToActive component.
        /// </summary>
        public const string ToActive = "ToActive";

        /// <summary>
        /// The BrowseName for the ToCancelling component.
        /// </summary>
        public const string ToCancelling = "ToCancelling";

        /// <summary>
        /// The BrowseName for the ToChange component.
        /// </summary>
        public const string ToChange = "ToChange";

        /// <summary>
        /// The BrowseName for the ToCommentAdded component.
        /// </summary>
        public const string ToCommentAdded = "ToCommentAdded";

        /// <summary>
        /// The BrowseName for the ToConfirmed component.
        /// </summary>
        public const string ToConfirmed = "ToConfirmed";

        /// <summary>
        /// The BrowseName for the ToConfirming component.
        /// </summary>
        public const string ToConfirming = "ToConfirming";

        /// <summary>
        /// The BrowseName for the ToDisabled component.
        /// </summary>
        public const string ToDisabled = "ToDisabled";

        /// <summary>
        /// The BrowseName for the ToEnabled component.
        /// </summary>
        public const string ToEnabled = "ToEnabled";

        /// <summary>
        /// The BrowseName for the ToInactive component.
        /// </summary>
        public const string ToInactive = "ToInactive";

        /// <summary>
        /// The BrowseName for the ToLastComment component.
        /// </summary>
        public const string ToLastComment = "ToLastComment";

        /// <summary>
        /// The BrowseName for the ToRejecting component.
        /// </summary>
        public const string ToRejecting = "ToRejecting";

        /// <summary>
        /// The BrowseName for the ToState component.
        /// </summary>
        public const string ToState = "ToState";

        /// <summary>
        /// The BrowseName for the ToSuppressed component.
        /// </summary>
        public const string ToSuppressed = "ToSuppressed";

        /// <summary>
        /// The BrowseName for the TotalRequestCount component.
        /// </summary>
        public const string TotalRequestCount = "TotalRequestCount";

        /// <summary>
        /// The BrowseName for the ToUnacknowledged component.
        /// </summary>
        public const string ToUnacknowledged = "ToUnacknowledged";

        /// <summary>
        /// The BrowseName for the ToUnsuppressed component.
        /// </summary>
        public const string ToUnsuppressed = "ToUnsuppressed";

        /// <summary>
        /// The BrowseName for the TransferredToAltClientCount component.
        /// </summary>
        public const string TransferredToAltClientCount = "TransferredToAltClientCount";

        /// <summary>
        /// The BrowseName for the TransferredToSameClientCount component.
        /// </summary>
        public const string TransferredToSameClientCount = "TransferredToSameClientCount";

        /// <summary>
        /// The BrowseName for the TransferRequestCount component.
        /// </summary>
        public const string TransferRequestCount = "TransferRequestCount";

        /// <summary>
        /// The BrowseName for the TransferResult component.
        /// </summary>
        public const string TransferResult = "TransferResult";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsCount component.
        /// </summary>
        public const string TransferSubscriptionsCount = "TransferSubscriptionsCount";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsRequest component.
        /// </summary>
        public const string TransferSubscriptionsRequest = "TransferSubscriptionsRequest";

        /// <summary>
        /// The BrowseName for the TransferSubscriptionsResponse component.
        /// </summary>
        public const string TransferSubscriptionsResponse = "TransferSubscriptionsResponse";

        /// <summary>
        /// The BrowseName for the Transition component.
        /// </summary>
        public const string Transition = "Transition";

        /// <summary>
        /// The BrowseName for the TransitionEventType component.
        /// </summary>
        public const string TransitionEventType = "TransitionEventType";

        /// <summary>
        /// The BrowseName for the TransitionTime component.
        /// </summary>
        public const string TransitionTime = "TransitionTime";

        /// <summary>
        /// The BrowseName for the TransitionType component.
        /// </summary>
        public const string TransitionType = "TransitionType";

        /// <summary>
        /// The BrowseName for the TransitionVariableType component.
        /// </summary>
        public const string TransitionVariableType = "TransitionVariableType";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsCount component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsCount = "TranslateBrowsePathsToNodeIdsCount";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsRequest component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsRequest = "TranslateBrowsePathsToNodeIdsRequest";

        /// <summary>
        /// The BrowseName for the TranslateBrowsePathsToNodeIdsResponse component.
        /// </summary>
        public const string TranslateBrowsePathsToNodeIdsResponse = "TranslateBrowsePathsToNodeIdsResponse";

        /// <summary>
        /// The BrowseName for the TransparentRedundancyType component.
        /// </summary>
        public const string TransparentRedundancyType = "TransparentRedundancyType";

        /// <summary>
        /// The BrowseName for the TransportProtocol component.
        /// </summary>
        public const string TransportProtocol = "TransportProtocol";

        /// <summary>
        /// The BrowseName for the TrueState component.
        /// </summary>
        public const string TrueState = "TrueState";

        /// <summary>
        /// The BrowseName for the TwoStateDiscreteType component.
        /// </summary>
        public const string TwoStateDiscreteType = "TwoStateDiscreteType";

        /// <summary>
        /// The BrowseName for the TypesFolder component.
        /// </summary>
        public const string TypesFolder = "Types";

        /// <summary>
        /// The BrowseName for the UInt16 component.
        /// </summary>
        public const string UInt16 = "UInt16";

        /// <summary>
        /// The BrowseName for the UInt32 component.
        /// </summary>
        public const string UInt32 = "UInt32";

        /// <summary>
        /// The BrowseName for the UInt64 component.
        /// </summary>
        public const string UInt64 = "UInt64";

        /// <summary>
        /// The BrowseName for the UInteger component.
        /// </summary>
        public const string UInteger = "UInteger";

        /// <summary>
        /// The BrowseName for the Unacknowledged component.
        /// </summary>
        public const string Unacknowledged = "Unacknowledged";

        /// <summary>
        /// The BrowseName for the UnacknowledgedMessageCount component.
        /// </summary>
        public const string UnacknowledgedMessageCount = "UnacknowledgedMessageCount";

        /// <summary>
        /// The BrowseName for the UnauthorizedRequestCount component.
        /// </summary>
        public const string UnauthorizedRequestCount = "UnauthorizedRequestCount";

        /// <summary>
        /// The BrowseName for the Unconfirmed component.
        /// </summary>
        public const string Unconfirmed = "Unconfirmed";

        /// <summary>
        /// The BrowseName for the UnregisterNodesCount component.
        /// </summary>
        public const string UnregisterNodesCount = "UnregisterNodesCount";

        /// <summary>
        /// The BrowseName for the UnregisterNodesRequest component.
        /// </summary>
        public const string UnregisterNodesRequest = "UnregisterNodesRequest";

        /// <summary>
        /// The BrowseName for the UnregisterNodesResponse component.
        /// </summary>
        public const string UnregisterNodesResponse = "UnregisterNodesResponse";

        /// <summary>
        /// The BrowseName for the Unshelve component.
        /// </summary>
        public const string Unshelve = "Unshelve";

        /// <summary>
        /// The BrowseName for the Unshelved component.
        /// </summary>
        public const string Unshelved = "Unshelved";

        /// <summary>
        /// The BrowseName for the UnshelvedToManualShelved component.
        /// </summary>
        public const string UnshelvedToManualShelved = "UnshelvedToManualShelved";

        /// <summary>
        /// The BrowseName for the UnshelvedToOneShotShelved component.
        /// </summary>
        public const string UnshelvedToOneShotShelved = "UnshelvedToOneShotShelved";

        /// <summary>
        /// The BrowseName for the UnshelvedToTimedShelved component.
        /// </summary>
        public const string UnshelvedToTimedShelved = "UnshelvedToTimedShelved";

        /// <summary>
        /// The BrowseName for the Unsuppressed component.
        /// </summary>
        public const string Unsuppressed = "Unsuppressed";

        /// <summary>
        /// The BrowseName for the UpdateDataCapability component.
        /// </summary>
        public const string UpdateDataCapability = "UpdateDataCapability";

        /// <summary>
        /// The BrowseName for the UpdateDataDetails component.
        /// </summary>
        public const string UpdateDataDetails = "UpdateDataDetails";

        /// <summary>
        /// The BrowseName for the UpdatedNode component.
        /// </summary>
        public const string UpdatedNode = "UpdatedNode";

        /// <summary>
        /// The BrowseName for the UpdateEventDetails component.
        /// </summary>
        public const string UpdateEventDetails = "UpdateEventDetails";

        /// <summary>
        /// The BrowseName for the UserIdentityToken component.
        /// </summary>
        public const string UserIdentityToken = "UserIdentityToken";

        /// <summary>
        /// The BrowseName for the UserNameIdentityToken component.
        /// </summary>
        public const string UserNameIdentityToken = "UserNameIdentityToken";

        /// <summary>
        /// The BrowseName for the UserTokenPolicy component.
        /// </summary>
        public const string UserTokenPolicy = "UserTokenPolicy";

        /// <summary>
        /// The BrowseName for the UserTokenType component.
        /// </summary>
        public const string UserTokenType = "UserTokenType";

        /// <summary>
        /// The BrowseName for the UtcTime component.
        /// </summary>
        public const string UtcTime = "UtcTime";

        /// <summary>
        /// The BrowseName for the ValuePrecision component.
        /// </summary>
        public const string ValuePrecision = "ValuePrecision";

        /// <summary>
        /// The BrowseName for the VariableAttributes component.
        /// </summary>
        public const string VariableAttributes = "VariableAttributes";

        /// <summary>
        /// The BrowseName for the VariableNode component.
        /// </summary>
        public const string VariableNode = "VariableNode";

        /// <summary>
        /// The BrowseName for the VariableTypeAttributes component.
        /// </summary>
        public const string VariableTypeAttributes = "VariableTypeAttributes";

        /// <summary>
        /// The BrowseName for the VariableTypeNode component.
        /// </summary>
        public const string VariableTypeNode = "VariableTypeNode";

        /// <summary>
        /// The BrowseName for the VariableTypesFolder component.
        /// </summary>
        public const string VariableTypesFolder = "VariableTypes";

        /// <summary>
        /// The BrowseName for the VendorServerInfo component.
        /// </summary>
        public const string VendorServerInfo = "VendorServerInfo";

        /// <summary>
        /// The BrowseName for the VendorServerInfoType component.
        /// </summary>
        public const string VendorServerInfoType = "VendorServerInfoType";

        /// <summary>
        /// The BrowseName for the ViewAttributes component.
        /// </summary>
        public const string ViewAttributes = "ViewAttributes";

        /// <summary>
        /// The BrowseName for the ViewDescription component.
        /// </summary>
        public const string ViewDescription = "ViewDescription";

        /// <summary>
        /// The BrowseName for the ViewNode component.
        /// </summary>
        public const string ViewNode = "ViewNode";

        /// <summary>
        /// The BrowseName for the ViewsFolder component.
        /// </summary>
        public const string ViewsFolder = "Views";

        /// <summary>
        /// The BrowseName for the WriteCount component.
        /// </summary>
        public const string WriteCount = "WriteCount";

        /// <summary>
        /// The BrowseName for the WriteRequest component.
        /// </summary>
        public const string WriteRequest = "WriteRequest";

        /// <summary>
        /// The BrowseName for the WriteResponse component.
        /// </summary>
        public const string WriteResponse = "WriteResponse";

        /// <summary>
        /// The BrowseName for the WriteValue component.
        /// </summary>
        public const string WriteValue = "WriteValue";

        /// <summary>
        /// The BrowseName for the X509IdentityToken component.
        /// </summary>
        public const string X509IdentityToken = "X509IdentityToken";

        /// <summary>
        /// The BrowseName for the XmlElement component.
        /// </summary>
        public const string XmlElement = "XmlElement";

        /// <summary>
        /// The BrowseName for the XmlSchema_TypeSystem component.
        /// </summary>
        public const string XmlSchema_TypeSystem = "XML Schema";

        /// <summary>
        /// The BrowseName for the Yes component.
        /// </summary>
        public const string Yes = "Yes";

        /// <summary>
        /// The BrowseName for the YesNoCancelDialogConditionType component.
        /// </summary>
        public const string YesNoCancelDialogConditionType = "YesNoCancelDialogConditionType";

        /// <summary>
        /// The BrowseName for the YesNoCancelDialogStateMachineType component.
        /// </summary>
        public const string YesNoCancelDialogStateMachineType = "YesNoCancelDialogStateMachineType";

        /// <summary>
        /// The BrowseName for the YesNoCancelDialogSubStateMachineType component.
        /// </summary>
        public const string YesNoCancelDialogSubStateMachineType = "YesNoCancelDialogSubStateMachineType";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the model design.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";
        
        /// <summary>
		/// Returns a namespace table with all of the URIs defined.
		/// </summary>
        /// <remarks>
        /// This table is was used to create any relative paths in the model design.
        /// </remarks>
		public static NamespaceTable GetNamespaceTable()
		{
			FieldInfo[] fields = typeof(Namespaces).GetFields(BindingFlags.Public | BindingFlags.Static);
            
            NamespaceTable namespaceTable = new NamespaceTable();

			foreach (FieldInfo field in fields)
			{
                string namespaceUri = (string)field.GetValue(typeof(Namespaces));

                if (namespaceTable.GetIndex(namespaceUri) == -1)
                {
				    namespaceTable.Append(namespaceUri);
                }
			}

			return namespaceTable;
		}
    }
    #endregion
}
